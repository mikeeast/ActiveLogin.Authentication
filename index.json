{
  "api/ActiveLogin.Authentication.BankId.Api.BankIdApiClient.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdApiClient.html",
    "title": "Class BankIdApiClient | Active Login",
    "keywords": "Class BankIdApiClient HTTP based client for the BankID REST API. Inheritance System.Object BankIdApiClient Implements IBankIdApiClient Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdApiClient : object, IBankIdApiClient Constructors | Improve this Doc View Source BankIdApiClient(HttpClient) Creates an instance of BankIdApiClient using the supplied to talk HTTP. Declaration public BankIdApiClient(HttpClient httpClient) Parameters Type Name Description HttpClient httpClient The HttpClient to use. Methods | Improve this Doc View Source AuthAsync(AuthRequest) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public Task<AuthResponse> AuthAsync(AuthRequest request) Parameters Type Name Description AuthRequest request Returns Type Description Task < AuthResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source CancelAsync(CancelRequest) Cancels an ongoing sign or auth order. This is typically used if the user cancels the order in your service or app. Declaration public Task<CancelResponse> CancelAsync(CancelRequest request) Parameters Type Name Description CancelRequest request Returns Type Description Task < CancelResponse > | Improve this Doc View Source CollectAsync(CollectRequest) Collects the result of a sign or auth order using the OrderRef as reference. RP should keep on calling collect every two seconds as long as status indicates pending. RP must abort if status indicates failed. Declaration public Task<CollectResponse> CollectAsync(CollectRequest request) Parameters Type Name Description CollectRequest request Returns Type Description Task < CollectResponse > The user identity is returned when complete. | Improve this Doc View Source SignAsync(SignRequest) Initiates an signing order. Use the collect method to query the status of the order. Declaration public Task<SignResponse> SignAsync(SignRequest request) Parameters Type Name Description SignRequest request Returns Type Description Task < SignResponse > If the request is successful, the OrderRef and AutoStartToken is returned. Implements IBankIdApiClient"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.html",
    "title": "Class BankIdApiClientExtensions | Active Login",
    "keywords": "Class BankIdApiClientExtensions Extensions to enable easier access to common api scenarios. Inheritance System.Object BankIdApiClientExtensions Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class BankIdApiClientExtensions : object Methods | Improve this Doc View Source AuthAsync(IBankIdApiClient, String) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP.String.IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. Returns Type Description Task < AuthResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source AuthAsync(IBankIdApiClient, String, Nullable<String>, Requirement, Nullable<String>, Byte[], Nullable<String>) Declaration public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp, string? personalIdentityNumber = null, Requirement requirement = null, string? userVisibleData = null, byte[] userNonVisibleData = null, string? userVisibleDataFormat = null) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.Nullable < System.String > personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Requirement requirement Requirements on how the auth or sign order must be performed. System.Nullable < System.String > userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.Nullable < System.String > userVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text. Returns Type Description Task < AuthResponse > | Improve this Doc View Source AuthAsync(IBankIdApiClient, String, String) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp, string personalIdentityNumber) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP.String.IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Returns Type Description Task < AuthResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source CancelAsync(IBankIdApiClient, String) Cancels an ongoing sign or auth order. This is typically used if the user cancels the order in your service or app. Declaration public static Task<CancelResponse> CancelAsync(this IBankIdApiClient apiClient, string orderRef) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String orderRef The OrderRef returned from auth or sign. Returns Type Description Task < CancelResponse > | Improve this Doc View Source CollectAsync(IBankIdApiClient, String) Collects the result of a sign or auth order using the OrderRef as reference. RP should keep on calling collect every two seconds as long as status indicates pending. RP must abort if status indicates failed. Declaration public static Task<CollectResponse> CollectAsync(this IBankIdApiClient apiClient, string orderRef) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String orderRef The OrderRef returned from auth or sign. Returns Type Description Task < CollectResponse > The user identity is returned when complete. | Improve this Doc View Source SignAsync(IBankIdApiClient, String, String) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP.String.IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. Returns Type Description Task < SignResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source SignAsync(IBankIdApiClient, String, String, Byte[]) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData, byte[] userNonVisibleData) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP.String.IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. Returns Type Description Task < SignResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source SignAsync(IBankIdApiClient, String, String, Byte[], String) Initiates an authentication order. Use the collect method to query the status of the order. Declaration public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber) Parameters Type Name Description IBankIdApiClient apiClient The IBankIdApiClient instance. System.String endUserIp The user IP address as seen by RP.String.IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.String personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Returns Type Description Task < SignResponse > If the request is successful, the OrderRef and AutoStartToken is returned."
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdApiConverters.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdApiConverters.html",
    "title": "Class BankIdApiConverters | Active Login",
    "keywords": "Class BankIdApiConverters Parsers and converters for data in the BankID API. Inheritance System.Object BankIdApiConverters Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdApiConverters : object Methods | Improve this Doc View Source GetXml(String) Get XML from Base64 encoded string. Declaration public static string GetXml(string base64EncodedXml) Parameters Type Name Description System.String base64EncodedXml Returns Type Description System.String | Improve this Doc View Source ParseCollectHintCode(String) Parse collect hint code from string. Declaration public static CollectHintCode ParseCollectHintCode(string hintCode) Parameters Type Name Description System.String hintCode Returns Type Description CollectHintCode | Improve this Doc View Source ParseCollectStatus(String) Parse collect status from string. Declaration public static CollectStatus ParseCollectStatus(string status) Parameters Type Name Description System.String status Returns Type Description CollectStatus | Improve this Doc View Source ParseErrorCode(String) Parse error code from string. Declaration public static ErrorCode ParseErrorCode(string errorCode) Parameters Type Name Description System.String errorCode Returns Type Description ErrorCode | Improve this Doc View Source ParseUnixTimestamp(String) Parse unix timestamp from milliseconds as string. Declaration public static DateTimeOffset ParseUnixTimestamp(string timestamp) Parameters Type Name Description System.String timestamp Returns Type Description DateTimeOffset"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdApiException.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdApiException.html",
    "title": "Class BankIdApiException | Active Login",
    "keywords": "Class BankIdApiException Exception that wraps any error returned by the BankID API. Inheritance System.Object BankIdApiException Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdApiException : HttpRequestException Properties | Improve this Doc View Source ErrorCode The category of error. Declaration public ErrorCode ErrorCode { get; } Property Value Type Description ErrorCode | Improve this Doc View Source ErrorDetails Details about the error. Declaration public string ErrorDetails { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.html",
    "title": "Class BankIdSimulatedApiClient.CollectState | Active Login",
    "keywords": "Class BankIdSimulatedApiClient.CollectState Inheritance System.Object BankIdSimulatedApiClient.CollectState Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CollectState : object Constructors | Improve this Doc View Source CollectState(CollectStatus, CollectHintCode) Declaration public CollectState(CollectStatus status, CollectHintCode hintCode) Parameters Type Name Description CollectStatus status CollectHintCode hintCode Properties | Improve this Doc View Source HintCode Declaration public CollectHintCode HintCode { get; } Property Value Type Description CollectHintCode | Improve this Doc View Source Status Declaration public CollectStatus Status { get; } Property Value Type Description CollectStatus"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.html",
    "title": "Class BankIdSimulatedApiClient | Active Login",
    "keywords": "Class BankIdSimulatedApiClient Dummy implementation that simulates the BankId API. Can be used for development and testing purposes. Inheritance System.Object BankIdSimulatedApiClient Implements IBankIdApiClient Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdSimulatedApiClient : object, IBankIdApiClient Constructors | Improve this Doc View Source BankIdSimulatedApiClient() Declaration public BankIdSimulatedApiClient() | Improve this Doc View Source BankIdSimulatedApiClient(List<BankIdSimulatedApiClient.CollectState>) Declaration public BankIdSimulatedApiClient(List<BankIdSimulatedApiClient.CollectState> collectStates) Parameters Type Name Description List < BankIdSimulatedApiClient.CollectState > collectStates | Improve this Doc View Source BankIdSimulatedApiClient(String, String) Declaration public BankIdSimulatedApiClient(string givenName, string surname) Parameters Type Name Description System.String givenName System.String surname | Improve this Doc View Source BankIdSimulatedApiClient(String, String, String) Declaration public BankIdSimulatedApiClient(string givenName, string surname, string personalIdentityNumber) Parameters Type Name Description System.String givenName System.String surname System.String personalIdentityNumber | Improve this Doc View Source BankIdSimulatedApiClient(String, String, String, List<BankIdSimulatedApiClient.CollectState>) Declaration public BankIdSimulatedApiClient(string givenName, string surname, string personalIdentityNumber, List<BankIdSimulatedApiClient.CollectState> collectStates) Parameters Type Name Description System.String givenName System.String surname System.String personalIdentityNumber List < BankIdSimulatedApiClient.CollectState > collectStates | Improve this Doc View Source BankIdSimulatedApiClient(String, String, String, String) Declaration public BankIdSimulatedApiClient(string givenName, string surname, string name, string personalIdentityNumber) Parameters Type Name Description System.String givenName System.String surname System.String name System.String personalIdentityNumber | Improve this Doc View Source BankIdSimulatedApiClient(String, String, String, String, List<BankIdSimulatedApiClient.CollectState>) Declaration public BankIdSimulatedApiClient(string givenName, string surname, string name, string personalIdentityNumber, List<BankIdSimulatedApiClient.CollectState> collectStates) Parameters Type Name Description System.String givenName System.String surname System.String name System.String personalIdentityNumber List < BankIdSimulatedApiClient.CollectState > collectStates Fields | Improve this Doc View Source Version Declaration public const string Version = null Field Value Type Description System.String Properties | Improve this Doc View Source Delay Declaration public TimeSpan Delay { get; set; } Property Value Type Description TimeSpan Methods | Improve this Doc View Source AuthAsync(AuthRequest) Declaration public async Task<AuthResponse> AuthAsync(AuthRequest request) Parameters Type Name Description AuthRequest request Returns Type Description Task < AuthResponse > | Improve this Doc View Source CancelAsync(CancelRequest) Declaration public async Task<CancelResponse> CancelAsync(CancelRequest request) Parameters Type Name Description CancelRequest request Returns Type Description Task < CancelResponse > | Improve this Doc View Source CollectAsync(CollectRequest) Declaration public async Task<CollectResponse> CollectAsync(CollectRequest request) Parameters Type Name Description CollectRequest request Returns Type Description Task < CollectResponse > | Improve this Doc View Source SignAsync(SignRequest) Declaration public async Task<SignResponse> SignAsync(SignRequest request) Parameters Type Name Description SignRequest request Returns Type Description Task < SignResponse > Implements IBankIdApiClient"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdUrls.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdUrls.html",
    "title": "Class BankIdUrls | Active Login",
    "keywords": "Class BankIdUrls URLs for BankID REST API. Inheritance System.Object BankIdUrls Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class BankIdUrls : object Fields | Improve this Doc View Source BankIdApiVersion Declaration public const string BankIdApiVersion = null Field Value Type Description System.String | Improve this Doc View Source ProductionApiBaseUrl Base url for production API. Needs to be used in conjunction with a production certificate. Declaration public static readonly Uri ProductionApiBaseUrl Field Value Type Description Uri | Improve this Doc View Source TestApiBaseUrl Base url for test API. Needs to be used in conjunction with the test certificate. Declaration public static readonly Uri TestApiBaseUrl Field Value Type Description Uri"
  },
  "api/ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.html",
    "title": "Class BankIdUserVisibleDataFormats | Active Login",
    "keywords": "Class BankIdUserVisibleDataFormats Inheritance System.Object BankIdUserVisibleDataFormats Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdUserVisibleDataFormats : object Fields | Improve this Doc View Source SimpleMarkdownV1 Declaration public const string SimpleMarkdownV1 = null Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.html",
    "title": "Class BankIdCertificatePolicies | Active Login",
    "keywords": "Class BankIdCertificatePolicies Inheritance System.Object BankIdCertificatePolicies Namespace : ActiveLogin.Authentication.BankId.Api.CertificatePolicies Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class BankIdCertificatePolicies : object Methods | Improve this Doc View Source GetPoliciesForProductionEnvironment(BankIdCertificatePolicy[]) Declaration public static List<string> GetPoliciesForProductionEnvironment(params BankIdCertificatePolicy[] certificatePolicies) Parameters Type Name Description BankIdCertificatePolicy [] certificatePolicies Returns Type Description List < System.String > | Improve this Doc View Source GetPoliciesForTestEnvironment(BankIdCertificatePolicy[]) Declaration public static List<string> GetPoliciesForTestEnvironment(params BankIdCertificatePolicy[] certificatePolicies) Parameters Type Name Description BankIdCertificatePolicy [] certificatePolicies Returns Type Description List < System.String > | Improve this Doc View Source GetPolicyForProductionEnvironment(BankIdCertificatePolicy) Declaration public static string GetPolicyForProductionEnvironment(BankIdCertificatePolicy certificatePolicy) Parameters Type Name Description BankIdCertificatePolicy certificatePolicy Returns Type Description System.String | Improve this Doc View Source GetPolicyForTestEnvironment(BankIdCertificatePolicy) Declaration public static string GetPolicyForTestEnvironment(BankIdCertificatePolicy certificatePolicy) Parameters Type Name Description BankIdCertificatePolicy certificatePolicy Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.html",
    "title": "Enum BankIdCertificatePolicy | Active Login",
    "keywords": "Enum BankIdCertificatePolicy Namespace : ActiveLogin.Authentication.BankId.Api.CertificatePolicies Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public enum BankIdCertificatePolicy : int Fields Name Description BankIdOnFile BankID on file. BankIdOnSmartCard BankID on smartcard. MobileBankId Mobile BankID. NordeaEidOnFileAndOnSmartCard Nordea e-id on file and on smart card. TestBankId Test BankID for some BankID Banks."
  },
  "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.CertificatePolicies.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Api.CertificatePolicies | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Api.CertificatePolicies Classes BankIdCertificatePolicies Enums BankIdCertificatePolicy"
  },
  "api/ActiveLogin.Authentication.BankId.Api.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Api | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Api Classes BankIdApiClient HTTP based client for the BankID REST API. BankIdApiClientExtensions Extensions to enable easier access to common api scenarios. BankIdApiConverters Parsers and converters for data in the BankID API. BankIdApiException Exception that wraps any error returned by the BankID API. BankIdSimulatedApiClient Dummy implementation that simulates the BankId API. Can be used for development and testing purposes. BankIdSimulatedApiClient.CollectState BankIdUrls URLs for BankID REST API. BankIdUserVisibleDataFormats Interfaces IBankIdApiClient BankID API Client that defines the supported methods as defined in the document \"BankID Relying Party Guidelines\"."
  },
  "api/ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.html",
    "title": "Interface IBankIdApiClient | Active Login",
    "keywords": "Interface IBankIdApiClient BankID API Client that defines the supported methods as defined in the document \"BankID Relying Party Guidelines\". Namespace : ActiveLogin.Authentication.BankId.Api Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public interface IBankIdApiClient Methods | Improve this Doc View Source AuthAsync(AuthRequest) Initiates an authentication order. Use the collect method to query the status of the order. Declaration Task<AuthResponse> AuthAsync(AuthRequest request) Parameters Type Name Description AuthRequest request Returns Type Description Task < AuthResponse > If the request is successful, the OrderRef and AutoStartToken is returned. | Improve this Doc View Source CancelAsync(CancelRequest) Cancels an ongoing sign or auth order. This is typically used if the user cancels the order in your service or app. Declaration Task<CancelResponse> CancelAsync(CancelRequest request) Parameters Type Name Description CancelRequest request Returns Type Description Task < CancelResponse > | Improve this Doc View Source CollectAsync(CollectRequest) Collects the result of a sign or auth order using the OrderRef as reference. RP should keep on calling collect every two seconds as long as status indicates pending. RP must abort if status indicates failed. Declaration Task<CollectResponse> CollectAsync(CollectRequest request) Parameters Type Name Description CollectRequest request Returns Type Description Task < CollectResponse > The user identity is returned when complete. | Improve this Doc View Source SignAsync(SignRequest) Initiates an signing order. Use the collect method to query the status of the order. Declaration Task<SignResponse> SignAsync(SignRequest request) Parameters Type Name Description SignRequest request Returns Type Description Task < SignResponse > If the request is successful, the OrderRef and AutoStartToken is returned. Extension Methods BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, Nullable<String>, Requirement, Nullable<String>, Byte[], Nullable<String>) BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String) BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, String) BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String) BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte[]) BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte[], String) BankIdApiClientExtensions.CollectAsync(IBankIdApiClient, String) BankIdApiClientExtensions.CancelAsync(IBankIdApiClient, String)"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.html",
    "title": "Class AuthRequest | Active Login",
    "keywords": "Class AuthRequest Auth request parameters. Inheritance System.Object Request AuthRequest Inherited Members Request.EndUserIp Request.PersonalIdentityNumber Request.Requirement Request.UserVisibleData Request.UserVisibleDataFormat Request.UserNonVisibleData Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class AuthRequest : Request Constructors | Improve this Doc View Source AuthRequest(String, Nullable<String>, Requirement, Nullable<String>, Byte[], Nullable<String>) Declaration public AuthRequest(string endUserIp, string? personalIdentityNumber = null, Requirement requirement = null, string? userVisibleData = null, byte[] userNonVisibleData = null, string? userVisibleDataFormat = null) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.Nullable < System.String > personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Requirement requirement Requirements on how the auth or sign order must be performed. System.Nullable < System.String > userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.Nullable < System.String > userVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text."
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.html",
    "title": "Class AuthResponse | Active Login",
    "keywords": "Class AuthResponse Inheritance System.Object Response AuthResponse Inherited Members Response.OrderRef Response.AutoStartToken Response.QrStartToken Response.QrStartSecret Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class AuthResponse : Response Constructors | Improve this Doc View Source AuthResponse(String, String, String, String) Declaration public AuthResponse(string orderRef, string autoStartToken, string qrStartToken, string qrStartSecret) Parameters Type Name Description System.String orderRef System.String autoStartToken System.String qrStartToken System.String qrStartSecret"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.html",
    "title": "Class CancelRequest | Active Login",
    "keywords": "Class CancelRequest Cancel request parameters. Inheritance System.Object CancelRequest Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CancelRequest : object Constructors | Improve this Doc View Source CancelRequest(String) Declaration public CancelRequest(string orderRef) Parameters Type Name Description System.String orderRef The OrderRef from the response from auth or sign. Properties | Improve this Doc View Source OrderRef The OrderRef from the response from auth or sign. Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.html",
    "title": "Class CancelResponse | Active Login",
    "keywords": "Class CancelResponse Cancel response result. Inheritance System.Object CancelResponse Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CancelResponse : object Constructors | Improve this Doc View Source CancelResponse() Declaration public CancelResponse()"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.Cert.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.Cert.html",
    "title": "Class Cert | Active Login",
    "keywords": "Class Cert Information related to the users certificate (BankID). Inheritance System.Object Cert Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class Cert : object Constructors | Improve this Doc View Source Cert(String, String) Declaration public Cert(string notBefore, string notAfter) Parameters Type Name Description System.String notBefore System.String notAfter Properties | Improve this Doc View Source NotAfter End of validity of the Users BankID. Represented as Unix Timestamp in Milliseconds. Declaration public string NotAfter { get; } Property Value Type Description System.String | Improve this Doc View Source NotBefore Start of validity of the users BankID. Represented as Unix Timestamp in Milliseconds. Declaration public string NotBefore { get; } Property Value Type Description System.String Extension Methods CertExtensions.GetNotBeforeDateTime(Cert) CertExtensions.GetNotAfterDateTime(Cert)"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.html",
    "title": "Class CertExtensions | Active Login",
    "keywords": "Class CertExtensions Inheritance System.Object CertExtensions Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class CertExtensions : object Methods | Improve this Doc View Source GetNotAfterDateTime(Cert) End of validity of the Users BankID. Declaration public static DateTimeOffset GetNotAfterDateTime(this Cert cert) Parameters Type Name Description Cert cert Returns Type Description DateTimeOffset | Improve this Doc View Source GetNotBeforeDateTime(Cert) Start of validity of the users BankID. Declaration public static DateTimeOffset GetNotBeforeDateTime(this Cert cert) Parameters Type Name Description Cert cert Returns Type Description DateTimeOffset"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.html",
    "title": "Enum CollectHintCode | Active Login",
    "keywords": "Enum CollectHintCode Possible values of hint code for collect call. Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public enum CollectHintCode : int Fields Name Description Cancelled The order was cancelled. The system received a new order for the user. CertificateErr This error is returned if: The user has entered wrong security code too many times. The BankID cannot be used. The users BankID is revoked. The users BankID is invalid. ExpiredTransaction The order has expired. The BankID security app/program did not start, the user did not finalize the signing or the RP called collect too late. NoClient The order is pending. The client has not yet received the order. OutstandingTransaction The order is pending. The client has not yet received the order. The HintCode will later change to NoClient, Started or UserSign. Started The order is pending. A client has been started with the autostarttoken but a usable ID has not yet been found in the started client. When the client starts there may be a short delay until all ID:s are registered. The user may not have any usable ID:s at all, or has not yet inserted their smart card. StartFailed The user did not provide her ID, or the RP requires AutoStartToken to be used, but the client did not start within a certain time limit. The reason may be: RP did not use autoStartToken when starting BankID security program/app. RP must correct this in their implementation. The client software was not installed or other problem with the user’s computer. Unknown Unknown or new hint code. UserCancel The user decided to cancel the order. UserSign The order is pending. The client has received the order."
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.html",
    "title": "Class CollectRequest | Active Login",
    "keywords": "Class CollectRequest Collect request parameters. Inheritance System.Object CollectRequest Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CollectRequest : object Constructors | Improve this Doc View Source CollectRequest(String) Declaration public CollectRequest(string orderRef) Parameters Type Name Description System.String orderRef The OrderRef returned from auth or sign. Properties | Improve this Doc View Source OrderRef The OrderRef returned from auth or sign. Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.html",
    "title": "Class CollectResponse | Active Login",
    "keywords": "Class CollectResponse Collect response result. Inheritance System.Object CollectResponse Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CollectResponse : object Constructors | Improve this Doc View Source CollectResponse(String, String, String) Declaration public CollectResponse(string orderRef, string status, string hintCode) Parameters Type Name Description System.String orderRef System.String status System.String hintCode | Improve this Doc View Source CollectResponse(String, String, String, CompletionData) Declaration public CollectResponse(string orderRef, string status, string hintCode, CompletionData completionData) Parameters Type Name Description System.String orderRef System.String status System.String hintCode CompletionData completionData Properties | Improve this Doc View Source CompletionData The completionData includes the signature, user information and the OCSP response. RP should control the user information and continue their process. RP should keep the completion data for future references/compliance/audit. Declaration public CompletionData CompletionData { get; } Property Value Type Description CompletionData Remarks Only present for complete orders. | Improve this Doc View Source HintCode Collect hint code. RP should use the HintCode to provide the user with details and instructions and keep on calling collect until failed or complete. Declaration public string HintCode { get; } Property Value Type Description System.String Remarks Only present for pending and failed orders. | Improve this Doc View Source OrderRef The orderRef in question. Declaration public string OrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source Status Collect status. Declaration public string Status { get; } Property Value Type Description System.String Extension Methods CollectResponseExtensions.GetCollectStatus(CollectResponse) CollectResponseExtensions.GetCollectHintCode(CollectResponse)"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.html",
    "title": "Class CollectResponseExtensions | Active Login",
    "keywords": "Class CollectResponseExtensions Inheritance System.Object CollectResponseExtensions Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class CollectResponseExtensions : object Methods | Improve this Doc View Source GetCollectHintCode(CollectResponse) Collect hint code. RP should use the HintCode to provide the user with details and instructions and keep on calling collect until failed or complete. Declaration public static CollectHintCode GetCollectHintCode(this CollectResponse collectResponse) Parameters Type Name Description CollectResponse collectResponse Returns Type Description CollectHintCode Remarks Only present for pending and failed orders. | Improve this Doc View Source GetCollectStatus(CollectResponse) Collect status. Declaration public static CollectStatus GetCollectStatus(this CollectResponse collectResponse) Parameters Type Name Description CollectResponse collectResponse Returns Type Description CollectStatus"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.html",
    "title": "Enum CollectStatus | Active Login",
    "keywords": "Enum CollectStatus Possible values of status for collect call. Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public enum CollectStatus : int Fields Name Description Complete The order is complete. CompletionData holds user information. Failed Something went wrong with the order. HintCode describes the error. Pending The order is being processed. HintCode describes the status of the order. Unknown Unknown or new status."
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CompletionData.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CompletionData.html",
    "title": "Class CompletionData | Active Login",
    "keywords": "Class CompletionData Inheritance System.Object CompletionData Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class CompletionData : object Constructors | Improve this Doc View Source CompletionData(User, Device, Cert, String, String) Declaration public CompletionData(User user, Device device, Cert cert, string signature, string ocspResponse) Parameters Type Name Description User user Device device Cert cert System.String signature System.String ocspResponse Properties | Improve this Doc View Source Cert Information related to the users certificate (BankID). Declaration public Cert Cert { get; } Property Value Type Description Cert | Improve this Doc View Source Device Information related to the device. Declaration public Device Device { get; } Property Value Type Description Device | Improve this Doc View Source OcspResponse The OCSP response. String. Base64-encoded. The OCSP response is signed by a certificate that has the same issuer as the certificate being verified. The OSCP response has an extension for Nonce. Declaration public string OcspResponse { get; } Property Value Type Description System.String | Improve this Doc View Source Signature The signature. Base64-encoded. The content of the signature is described in BankID Signature Profile specification. Declaration public string Signature { get; } Property Value Type Description System.String | Improve this Doc View Source User Information related to the user. Declaration public User User { get; } Property Value Type Description User Extension Methods CompletionDataExtensions.GetSignatureXml(CompletionData)"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.html",
    "title": "Class CompletionDataExtensions | Active Login",
    "keywords": "Class CompletionDataExtensions Inheritance System.Object CompletionDataExtensions Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public static class CompletionDataExtensions : object Methods | Improve this Doc View Source GetSignatureXml(CompletionData) The signature as XML. The content of the signature is described in BankID Signature Profile specification. Declaration public static string GetSignatureXml(this CompletionData completionData) Parameters Type Name Description CompletionData completionData Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.Device.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.Device.html",
    "title": "Class Device | Active Login",
    "keywords": "Class Device Information related to the device. Inheritance System.Object Device Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class Device : object Constructors | Improve this Doc View Source Device(String) Declaration public Device(string ipAddress) Parameters Type Name Description System.String ipAddress Properties | Improve this Doc View Source IpAddress The IP address of the user agent as the BankID server discovers it. Declaration public string IpAddress { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.html",
    "title": "Enum ErrorCode | Active Login",
    "keywords": "Enum ErrorCode Possible values of error codes returned from an error response. Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public enum ErrorCode : int Fields Name Description AlreadyInProgress An auth or sign request with personal number was sent, but an order for the user is already in progress. The order is aborted. No order is created. RP must inform the user that an auth or sign order is already in progress for the user. Message RFA4 should be used. Canceled InternalError InvalidParameters Invalid parameter. Invalid use of method. Using an orderRef that previously resulted in completed. The order cannot be collected twice. Using an orderRef that previously resulted in failed. The order cannot be collected twice. Using an orderRef that is too old. completed orders can only be collected up to 3 minutes and failed orders up to 5 minutes. Cancelling an orderRef that is already cancelled. The order cannot be cancelled twice. RP must not try the same request again. This is an internal error within RP's system and must not be communicated to the user as a BankID error. Maintenance NotFound RequestTimeout Unauthorized Unknown UnsupportedMediaType"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Api.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Api.Models Classes AuthRequest Auth request parameters. AuthResponse CancelRequest Cancel request parameters. CancelResponse Cancel response result. Cert Information related to the users certificate (BankID). CertExtensions CollectRequest Collect request parameters. CollectResponse Collect response result. CollectResponseExtensions CompletionData CompletionDataExtensions Device Information related to the device. Request Requirement Requirements on how the auth or sign order must be performed. Response Auth response result. SignRequest Sign request parameters. SignResponse User Information related to the user. Enums CollectHintCode Possible values of hint code for collect call. CollectStatus Possible values of status for collect call. ErrorCode Possible values of error codes returned from an error response."
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.Request.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.Request.html",
    "title": "Class Request | Active Login",
    "keywords": "Class Request Inheritance System.Object Request AuthRequest SignRequest Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public abstract class Request : object Constructors | Improve this Doc View Source Request(String, Nullable<String>, Byte[], Nullable<String>, Requirement, Nullable<String>) Declaration public Request(string endUserIp, string? userVisibleData, byte[] userNonVisibleData, string? personalIdentityNumber, Requirement requirement, string? userVisibleDataFormat) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.Nullable < System.String > userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.Nullable < System.String > personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Requirement requirement Requirements on how the auth or sign order must be performed. System.Nullable < System.String > userVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text. | Improve this Doc View Source Request(String, String) Declaration public Request(string endUserIp, string userVisibleData) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. | Improve this Doc View Source Request(String, String, Byte[]) Declaration public Request(string endUserIp, string userVisibleData, byte[] userNonVisibleData) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. | Improve this Doc View Source Request(String, String, Byte[], Nullable<String>, Requirement) Declaration public Request(string endUserIp, string userVisibleData, byte[] userNonVisibleData, string? personalIdentityNumber, Requirement requirement) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.Nullable < System.String > personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Requirement requirement Requirements on how the auth or sign order must be performed. | Improve this Doc View Source Request(String, String, Byte[], String) Declaration public Request(string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.String personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. | Improve this Doc View Source Request(String, String, String, Byte[]) Declaration public Request(string endUserIp, string userVisibleData, string userVisibleDataFormat, byte[] userNonVisibleData) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.String userVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text. System.Byte [] userNonVisibleData Data not displayed to the user. Properties | Improve this Doc View Source EndUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. Declaration public string EndUserIp { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Declaration public string? PersonalIdentityNumber { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Requirement Requirements on how the auth or sign order must be performed. Declaration public Requirement Requirement { get; } Property Value Type Description Requirement | Improve this Doc View Source UserNonVisibleData Data not displayed to the user. Declaration public string? UserNonVisibleData { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source UserVisibleData The text can be formatted using CR, LF and CRLF for new lines. The text must be encoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding. Scenario sign: The text to be displayed and signed. String. The text can be formatted using CR, LF and CRLF for new lines. Scenario auth: A text that is displayed to the user during authentication with BankID, with the purpose of providing context for the authentication and to enable users to notice if there is something wrong about the identification and avoid attempted frauds. Declaration public string? UserVisibleData { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source UserVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text. Declaration public string? UserVisibleDataFormat { get; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.Requirement.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.Requirement.html",
    "title": "Class Requirement | Active Login",
    "keywords": "Class Requirement Requirements on how the auth or sign order must be performed. Inheritance System.Object Requirement Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class Requirement : object Constructors | Improve this Doc View Source Requirement(Nullable<List<String>>, Nullable<Boolean>, Nullable<Boolean>) Declaration public Requirement(List<string>? certificatePolicies = null, bool? tokenStartRequired = null, bool? allowFingerprint = null) Parameters Type Name Description System.Nullable < List < System.String >> certificatePolicies The oid in certificate policies in the user certificate. List of String. System.Nullable < System.Boolean > tokenStartRequired If set to true, the client must have been started using the AutoStartToken. To be used if it is important that the BankID App is on the same device as the RP service. If set to false, the client does not need to be started using the autoStartToken. System.Nullable < System.Boolean > allowFingerprint Users of iOS and Android devices may use fingerprint for authentication and signing if the device supports it and the user configured the device to use it. No other devices are supported at this point. If set to true, the users are allowed to use fingerprint. If set to false, the users are not allowed to use fingerprint. Properties | Improve this Doc View Source AllowFingerprint Users of iOS and Android devices may use fingerprint for authentication and signing if the device supports it and the user configured the device to use it. No other devices are supported at this point. If set to true, the users are allowed to use fingerprint. If set to false, the users are not allowed to use fingerprint. Declaration public bool? AllowFingerprint { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source CertificatePolicies The oid in certificate policies in the user certificate. List of String. Declaration public List<string>? CertificatePolicies { get; } Property Value Type Description System.Nullable < List < System.String >> | Improve this Doc View Source TokenStartRequired If set to true, the client must have been started using the AutoStartToken. To be used if it is important that the BankID App is on the same device as the RP service. If set to false, the client does not need to be started using the autoStartToken. Declaration public bool? TokenStartRequired { get; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.Response.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.Response.html",
    "title": "Class Response | Active Login",
    "keywords": "Class Response Auth response result. Inheritance System.Object Response AuthResponse SignResponse Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public abstract class Response : object Constructors | Improve this Doc View Source Response(String, String, String, String) Declaration protected Response(string orderRef, string autoStartToken, string qrStartToken, string qrStartSecret) Parameters Type Name Description System.String orderRef System.String autoStartToken System.String qrStartToken System.String qrStartSecret Properties | Improve this Doc View Source AutoStartToken Used as reference to this order when the client is started automatically. Declaration public string AutoStartToken { get; } Property Value Type Description System.String | Improve this Doc View Source OrderRef Used to collect the status of the order. Declaration public string OrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source QrStartSecret Used to compute the animated QR code. Declaration public string QrStartSecret { get; } Property Value Type Description System.String | Improve this Doc View Source QrStartToken Used to compute the animated QR code. Declaration public string QrStartToken { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.SignRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.SignRequest.html",
    "title": "Class SignRequest | Active Login",
    "keywords": "Class SignRequest Sign request parameters. Inheritance System.Object Request SignRequest Inherited Members Request.EndUserIp Request.PersonalIdentityNumber Request.Requirement Request.UserVisibleData Request.UserVisibleDataFormat Request.UserNonVisibleData Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class SignRequest : Request Constructors | Improve this Doc View Source SignRequest(String, String, Byte[], Nullable<String>, Requirement, Nullable<String>) Declaration public SignRequest(string endUserIp, string userVisibleData, byte[] userNonVisibleData = null, string? personalIdentityNumber = null, Requirement requirement = null, string? userVisibleDataFormat = null) Parameters Type Name Description System.String endUserIp The user IP address as seen by RP. IPv4 and IPv6 is allowed. Note the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP. If there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address. In some use cases the IP address is not available, for instance for voice based services. In this case, the internal representation of those systems IP address is ok to use. System.String userVisibleData The text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines. System.Byte [] userNonVisibleData Data not displayed to the user. System.Nullable < System.String > personalIdentityNumber The personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC). If the personal number is excluded, the client must be started with the AutoStartToken returned in the response. Requirement requirement Requirements on how the auth or sign order must be performed. System.Nullable < System.String > userVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text."
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.SignResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.SignResponse.html",
    "title": "Class SignResponse | Active Login",
    "keywords": "Class SignResponse Inheritance System.Object Response SignResponse Inherited Members Response.OrderRef Response.AutoStartToken Response.QrStartToken Response.QrStartSecret Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class SignResponse : Response Constructors | Improve this Doc View Source SignResponse(String, String, String, String) Declaration public SignResponse(string orderRef, string autoStartToken, string qrStartToken, string qrStartSecret) Parameters Type Name Description System.String orderRef System.String autoStartToken System.String qrStartToken System.String qrStartSecret"
  },
  "api/ActiveLogin.Authentication.BankId.Api.Models.User.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.Models.User.html",
    "title": "Class User | Active Login",
    "keywords": "Class User Information related to the user. Inheritance System.Object User Namespace : ActiveLogin.Authentication.BankId.Api.Models Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class User : object Constructors | Improve this Doc View Source User(String, String, String, String) Declaration public User(string personalIdentityNumber, string name, string givenName, string surname) Parameters Type Name Description System.String personalIdentityNumber System.String name System.String givenName System.String surname Properties | Improve this Doc View Source GivenName The given name of the user. Declaration public string GivenName { get; } Property Value Type Description System.String | Improve this Doc View Source Name The given name and surname of the user. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber The personal number. Declaration public string PersonalIdentityNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Surname The surname of the user. Declaration public string Surname { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.html",
    "title": "Class BankIdRecommendedUserMessage | Active Login",
    "keywords": "Class BankIdRecommendedUserMessage Inheritance System.Object BankIdRecommendedUserMessage Implements IBankIdUserMessage Namespace : ActiveLogin.Authentication.BankId.Api.UserMessage Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public class BankIdRecommendedUserMessage : object, IBankIdUserMessage Methods | Improve this Doc View Source GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean) Declaration public MessageShortName GetMessageShortNameForCollectResponse(CollectStatus collectStatus, CollectHintCode hintCode, bool tokenStartRequired, bool accessedFromMobileDevice, bool usingQrCode) Parameters Type Name Description CollectStatus collectStatus CollectHintCode hintCode System.Boolean tokenStartRequired System.Boolean accessedFromMobileDevice System.Boolean usingQrCode Returns Type Description MessageShortName | Improve this Doc View Source GetMessageShortNameForErrorResponse(ErrorCode) Declaration public MessageShortName GetMessageShortNameForErrorResponse(ErrorCode errorCode) Parameters Type Name Description ErrorCode errorCode Returns Type Description MessageShortName Implements IBankIdUserMessage"
  },
  "api/ActiveLogin.Authentication.BankId.Api.UserMessage.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.UserMessage.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Api.UserMessage | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Api.UserMessage Classes BankIdRecommendedUserMessage Interfaces IBankIdUserMessage Enums MessageShortName"
  },
  "api/ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.html",
    "title": "Interface IBankIdUserMessage | Active Login",
    "keywords": "Interface IBankIdUserMessage Namespace : ActiveLogin.Authentication.BankId.Api.UserMessage Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public interface IBankIdUserMessage Methods | Improve this Doc View Source GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean) Declaration MessageShortName GetMessageShortNameForCollectResponse(CollectStatus collectStatus, CollectHintCode hintCode, bool tokenStartRequired, bool accessedFromMobileDevice, bool usingQrCode) Parameters Type Name Description CollectStatus collectStatus CollectHintCode hintCode System.Boolean tokenStartRequired System.Boolean accessedFromMobileDevice System.Boolean usingQrCode Returns Type Description MessageShortName | Improve this Doc View Source GetMessageShortNameForErrorResponse(ErrorCode) Declaration MessageShortName GetMessageShortNameForErrorResponse(ErrorCode errorCode) Parameters Type Name Description ErrorCode errorCode Returns Type Description MessageShortName"
  },
  "api/ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.html",
    "title": "Enum MessageShortName | Active Login",
    "keywords": "Enum MessageShortName Namespace : ActiveLogin.Authentication.BankId.Api.UserMessage Assembly : ActiveLogin.Authentication.BankId.Api.dll Syntax public enum MessageShortName : int Fields Name Description RFA1 RFA13 RFA14A RFA14B RFA15A RFA15B RFA16 RFA17A RFA17B RFA18 RFA19 RFA1QR Special version of RFA1 we use to be explicit about scanning the QR-code. RFA2 RFA20 RFA21 RFA22 RFA3 RFA4 RFA5 RFA6 RFA8 RFA9 Unknown"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ActiveLoginResources.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ActiveLoginResources.html",
    "title": "Class ActiveLoginResources | Active Login",
    "keywords": "Class ActiveLoginResources Empty. Used as a pointer for our localized resources. Inheritance System.Object ActiveLoginResources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class ActiveLoginResources Constructors | Improve this Doc View Source ActiveLoginResources() Declaration public ActiveLoginResources()"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiApiControllerBase.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiApiControllerBase.html",
    "title": "Class BankIdUiApiControllerBase | Active Login",
    "keywords": "Class BankIdUiApiControllerBase Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase BankIdUiApiControllerBase BankIdUiAuthApiController BankIdUiSignApiController Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [NonController] public abstract class BankIdUiApiControllerBase : ControllerBase Constructors | Improve this Doc View Source BankIdUiApiControllerBase(IBankIdFlowService, IBankIdUiOrderRefProtector, IBankIdQrStartStateProtector, IBankIdUiOptionsProtector, IBankIdUserMessage, IBankIdUserMessageLocalizer, IBankIdUiResultProtector) Declaration protected BankIdUiApiControllerBase(IBankIdFlowService bankIdFlowService, IBankIdUiOrderRefProtector orderRefProtector, IBankIdQrStartStateProtector qrStartStateProtector, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdUserMessage bankIdUserMessage, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiResultProtector uiAuthResultProtector) Parameters Type Name Description IBankIdFlowService bankIdFlowService IBankIdUiOrderRefProtector orderRefProtector IBankIdQrStartStateProtector qrStartStateProtector IBankIdUiOptionsProtector uiOptionsProtector IBankIdUserMessage bankIdUserMessage IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiResultProtector uiAuthResultProtector Fields | Improve this Doc View Source BankIdFlowService Declaration protected readonly IBankIdFlowService BankIdFlowService Field Value Type Description IBankIdFlowService | Improve this Doc View Source OrderRefProtector Declaration protected readonly IBankIdUiOrderRefProtector OrderRefProtector Field Value Type Description IBankIdUiOrderRefProtector | Improve this Doc View Source QrStartStateProtector Declaration protected readonly IBankIdQrStartStateProtector QrStartStateProtector Field Value Type Description IBankIdQrStartStateProtector | Improve this Doc View Source UiOptionsProtector Declaration protected readonly IBankIdUiOptionsProtector UiOptionsProtector Field Value Type Description IBankIdUiOptionsProtector Methods | Improve this Doc View Source BadRequestJsonResult(Object) Declaration protected static ActionResult BadRequestJsonResult(object model) Parameters Type Name Description System.Object model Returns Type Description Microsoft.AspNetCore.Mvc.ActionResult | Improve this Doc View Source Cancel(BankIdUiApiCancelRequest) Declaration [ValidateAntiForgeryToken] [HttpPost(\"Cancel\")] public async Task<ActionResult> Cancel(BankIdUiApiCancelRequest request) Parameters Type Name Description BankIdUiApiCancelRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult > | Improve this Doc View Source ConstructProtectedUiResult(String, CompletionData) Declaration protected string ConstructProtectedUiResult(string orderRef, CompletionData completionData) Parameters Type Name Description System.String orderRef CompletionData completionData Returns Type Description System.String | Improve this Doc View Source GetBankIdApiExceptionStatusMessage(BankIdApiException) Declaration protected string GetBankIdApiExceptionStatusMessage(BankIdApiException bankIdApiException) Parameters Type Name Description BankIdApiException bankIdApiException Returns Type Description System.String | Improve this Doc View Source OkJsonResult(Object) Declaration protected static ActionResult OkJsonResult(object model) Parameters Type Name Description System.Object model Returns Type Description Microsoft.AspNetCore.Mvc.ActionResult | Improve this Doc View Source QrCode(BankIdUiApiQrCodeRequest) Declaration [ValidateAntiForgeryToken] [HttpPost(\"QrCode\")] public ActionResult QrCode(BankIdUiApiQrCodeRequest request) Parameters Type Name Description BankIdUiApiQrCodeRequest request Returns Type Description Microsoft.AspNetCore.Mvc.ActionResult | Improve this Doc View Source Status(BankIdUiApiStatusRequest) Declaration [ValidateAntiForgeryToken] [HttpPost(\"Status\")] public async Task<ActionResult> Status(BankIdUiApiStatusRequest request) Parameters Type Name Description BankIdUiApiStatusRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult > Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiAuthApiController.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiAuthApiController.html",
    "title": "Class BankIdUiAuthApiController | Active Login",
    "keywords": "Class BankIdUiAuthApiController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase BankIdUiApiControllerBase BankIdUiAuthApiController Inherited Members BankIdUiApiControllerBase.BankIdFlowService BankIdUiApiControllerBase.OrderRefProtector BankIdUiApiControllerBase.QrStartStateProtector BankIdUiApiControllerBase.UiOptionsProtector BankIdUiApiControllerBase.Status(BankIdUiApiStatusRequest) BankIdUiApiControllerBase.QrCode(BankIdUiApiQrCodeRequest) BankIdUiApiControllerBase.Cancel(BankIdUiApiCancelRequest) BankIdUiApiControllerBase.GetBankIdApiExceptionStatusMessage(BankIdApiException) BankIdUiApiControllerBase.ConstructProtectedUiResult(String, CompletionData) BankIdUiApiControllerBase.OkJsonResult(Object) BankIdUiApiControllerBase.BadRequestJsonResult(Object) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [Area(\"ActiveLogin\")] [Route(\"/[area]/BankId/Auth/Api/\")] [ApiController] [AllowAnonymous] [NonController] public class BankIdUiAuthApiController : BankIdUiApiControllerBase Constructors | Improve this Doc View Source BankIdUiAuthApiController(IBankIdFlowService, IBankIdUiOrderRefProtector, IBankIdQrStartStateProtector, IBankIdUiOptionsProtector, IBankIdUserMessage, IBankIdUserMessageLocalizer, IBankIdUiResultProtector) Declaration public BankIdUiAuthApiController(IBankIdFlowService bankIdFlowService, IBankIdUiOrderRefProtector orderRefProtector, IBankIdQrStartStateProtector qrStartStateProtector, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdUserMessage bankIdUserMessage, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiResultProtector uiAuthResultProtector) Parameters Type Name Description IBankIdFlowService bankIdFlowService IBankIdUiOrderRefProtector orderRefProtector IBankIdQrStartStateProtector qrStartStateProtector IBankIdUiOptionsProtector uiOptionsProtector IBankIdUserMessage bankIdUserMessage IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiResultProtector uiAuthResultProtector Methods | Improve this Doc View Source Initialize(BankIdUiApiInitializeRequest) Declaration [ValidateAntiForgeryToken] [HttpPost(\"Initialize\")] public async Task<ActionResult<BankIdUiApiInitializeResponse>> Initialize(BankIdUiApiInitializeRequest request) Parameters Type Name Description BankIdUiApiInitializeRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult < BankIdUiApiInitializeResponse >> Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiAuthController.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiAuthController.html",
    "title": "Class BankIdUiAuthController | Active Login",
    "keywords": "Class BankIdUiAuthController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller BankIdUiControllerBase BankIdUiAuthController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members BankIdUiControllerBase.Initialize(String, String, String, String) Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, System.Object) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [Area(\"ActiveLogin\")] [AllowAnonymous] [NonController] public class BankIdUiAuthController : BankIdUiControllerBase, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source BankIdUiAuthController(IAntiforgery, IStringLocalizer<ActiveLoginResources>, IBankIdUserMessageLocalizer, IBankIdUiOptionsProtector, IBankIdInvalidStateHandler, IBankIdUiStateProtector) Declaration public BankIdUiAuthController(IAntiforgery antiforgery, IStringLocalizer<ActiveLoginResources> localizer, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdInvalidStateHandler bankIdInvalidStateHandler, IBankIdUiStateProtector bankIdUiStateProtector) Parameters Type Name Description Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Microsoft.Extensions.Localization.IStringLocalizer < ActiveLoginResources > localizer IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiOptionsProtector uiOptionsProtector IBankIdInvalidStateHandler bankIdInvalidStateHandler IBankIdUiStateProtector bankIdUiStateProtector Methods | Improve this Doc View Source Init(String, String) Declaration [HttpGet] [Route(\"/[area]/BankId/Auth\")] public Task<ActionResult> Init(string returnUrl, [FromQuery(Name = \"uiOptions\")] string protectedUiOptions) Parameters Type Name Description System.String returnUrl System.String protectedUiOptions Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiControllerBase.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiControllerBase.html",
    "title": "Class BankIdUiControllerBase | Active Login",
    "keywords": "Class BankIdUiControllerBase Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller BankIdUiControllerBase BankIdUiAuthController BankIdUiSignController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, System.Object) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [NonController] public abstract class BankIdUiControllerBase : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source BankIdUiControllerBase(IAntiforgery, IStringLocalizer<ActiveLoginResources>, IBankIdUserMessageLocalizer, IBankIdUiOptionsProtector, IBankIdInvalidStateHandler, IBankIdUiStateProtector) Declaration protected BankIdUiControllerBase(IAntiforgery antiforgery, IStringLocalizer<ActiveLoginResources> localizer, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdInvalidStateHandler bankIdInvalidStateHandler, IBankIdUiStateProtector bankIdUiStateProtector) Parameters Type Name Description Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Microsoft.Extensions.Localization.IStringLocalizer < ActiveLoginResources > localizer IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiOptionsProtector uiOptionsProtector IBankIdInvalidStateHandler bankIdInvalidStateHandler IBankIdUiStateProtector bankIdUiStateProtector Methods | Improve this Doc View Source Initialize(String, String, String, String) Declaration protected async Task<ActionResult> Initialize(string returnUrl, string apiControllerName, string protectedUiOptions, string viewName) Parameters Type Name Description System.String returnUrl System.String apiControllerName System.String protectedUiOptions System.String viewName Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiSignApiController.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiSignApiController.html",
    "title": "Class BankIdUiSignApiController | Active Login",
    "keywords": "Class BankIdUiSignApiController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase BankIdUiApiControllerBase BankIdUiSignApiController Inherited Members BankIdUiApiControllerBase.BankIdFlowService BankIdUiApiControllerBase.OrderRefProtector BankIdUiApiControllerBase.QrStartStateProtector BankIdUiApiControllerBase.UiOptionsProtector BankIdUiApiControllerBase.Status(BankIdUiApiStatusRequest) BankIdUiApiControllerBase.QrCode(BankIdUiApiQrCodeRequest) BankIdUiApiControllerBase.Cancel(BankIdUiApiCancelRequest) BankIdUiApiControllerBase.GetBankIdApiExceptionStatusMessage(BankIdApiException) BankIdUiApiControllerBase.ConstructProtectedUiResult(String, CompletionData) BankIdUiApiControllerBase.OkJsonResult(Object) BankIdUiApiControllerBase.BadRequestJsonResult(Object) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [Area(\"ActiveLogin\")] [Route(\"/[area]/BankId/Sign/Api/\")] [ApiController] [AllowAnonymous] [NonController] public class BankIdUiSignApiController : BankIdUiApiControllerBase Constructors | Improve this Doc View Source BankIdUiSignApiController(IBankIdFlowService, IBankIdUiOrderRefProtector, IBankIdQrStartStateProtector, IBankIdUiOptionsProtector, IBankIdUserMessage, IBankIdUserMessageLocalizer, IBankIdUiResultProtector, IBankIdUiStateProtector) Declaration public BankIdUiSignApiController(IBankIdFlowService bankIdFlowService, IBankIdUiOrderRefProtector orderRefProtector, IBankIdQrStartStateProtector qrStartStateProtector, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdUserMessage bankIdUserMessage, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiResultProtector uiAuthResultProtector, IBankIdUiStateProtector bankIdUiStateProtector) Parameters Type Name Description IBankIdFlowService bankIdFlowService IBankIdUiOrderRefProtector orderRefProtector IBankIdQrStartStateProtector qrStartStateProtector IBankIdUiOptionsProtector uiOptionsProtector IBankIdUserMessage bankIdUserMessage IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiResultProtector uiAuthResultProtector IBankIdUiStateProtector bankIdUiStateProtector Methods | Improve this Doc View Source Initialize(BankIdUiApiInitializeRequest) Declaration [ValidateAntiForgeryToken] [HttpPost(\"Initialize\")] public async Task<ActionResult<BankIdUiApiInitializeResponse>> Initialize(BankIdUiApiInitializeRequest request) Parameters Type Name Description BankIdUiApiInitializeRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult < BankIdUiApiInitializeResponse >> Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiSignController.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.BankIdUiSignController.html",
    "title": "Class BankIdUiSignController | Active Login",
    "keywords": "Class BankIdUiSignController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller BankIdUiControllerBase BankIdUiSignController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members BankIdUiControllerBase.Initialize(String, String, String, String) Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, System.Object) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax [Area(\"ActiveLogin\")] [AllowAnonymous] [NonController] public class BankIdUiSignController : BankIdUiControllerBase, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source BankIdUiSignController(IAntiforgery, IStringLocalizer<ActiveLoginResources>, IBankIdUserMessageLocalizer, IBankIdUiOptionsProtector, IBankIdInvalidStateHandler, IBankIdUiStateProtector) Declaration public BankIdUiSignController(IAntiforgery antiforgery, IStringLocalizer<ActiveLoginResources> localizer, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdInvalidStateHandler bankIdInvalidStateHandler, IBankIdUiStateProtector bankIdUiStateProtector) Parameters Type Name Description Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Microsoft.Extensions.Localization.IStringLocalizer < ActiveLoginResources > localizer IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdUiOptionsProtector uiOptionsProtector IBankIdInvalidStateHandler bankIdInvalidStateHandler IBankIdUiStateProtector bankIdUiStateProtector Methods | Improve this Doc View Source Init(String, String) Declaration [HttpGet] [AllowAnonymous] [Route(\"/[area]/BankId/Sign\")] public Task<ActionResult> Init(string returnUrl, [FromQuery(Name = \"uiOptions\")] string protectedUiOptions) Parameters Type Name Description System.String returnUrl System.String protectedUiOptions Returns Type Description Task < Microsoft.AspNetCore.Mvc.ActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Extension Methods ControllerBaseExtensions.BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Controllers Classes BankIdUiApiControllerBase BankIdUiAuthApiController BankIdUiAuthController BankIdUiControllerBase BankIdUiSignApiController BankIdUiSignController"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiCancelRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiCancelRequest.html",
    "title": "Class BankIdUiApiCancelRequest | Active Login",
    "keywords": "Class BankIdUiApiCancelRequest Inheritance System.Object BankIdUiApiCancelRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiCancelRequest Constructors | Improve this Doc View Source BankIdUiApiCancelRequest() Declaration public BankIdUiApiCancelRequest() Properties | Improve this Doc View Source OrderRef Declaration [Required] public string OrderRef { get; set; } Property Value Type Description System.String | Improve this Doc View Source UiOptions Declaration [Required] public string UiOptions { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiErrorResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiErrorResponse.html",
    "title": "Class BankIdUiApiErrorResponse | Active Login",
    "keywords": "Class BankIdUiApiErrorResponse Inheritance System.Object BankIdUiApiErrorResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiErrorResponse Properties | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiInitializeRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiInitializeRequest.html",
    "title": "Class BankIdUiApiInitializeRequest | Active Login",
    "keywords": "Class BankIdUiApiInitializeRequest Inheritance System.Object BankIdUiApiInitializeRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiInitializeRequest Constructors | Improve this Doc View Source BankIdUiApiInitializeRequest() Declaration public BankIdUiApiInitializeRequest() Properties | Improve this Doc View Source ReturnUrl Declaration [Required] public string ReturnUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source UiOptions Declaration [Required] public string UiOptions { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiInitializeResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiInitializeResponse.html",
    "title": "Class BankIdUiApiInitializeResponse | Active Login",
    "keywords": "Class BankIdUiApiInitializeResponse Inheritance System.Object BankIdUiApiInitializeResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiInitializeResponse Properties | Improve this Doc View Source CheckStatus Declaration public bool CheckStatus { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DeviceMightRequireUserInteractionToLaunchBankIdApp Declaration public bool DeviceMightRequireUserInteractionToLaunchBankIdApp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAutoLaunch Declaration public bool IsAutoLaunch { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source QrCodeAsBase64 Declaration public string QrCodeAsBase64 { get; set; } Property Value Type Description System.String | Improve this Doc View Source QrStartState Declaration public string QrStartState { get; set; } Property Value Type Description System.String | Improve this Doc View Source RedirectUri Declaration public string RedirectUri { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AutoLaunch(String, String, Boolean) Declaration public static BankIdUiApiInitializeResponse AutoLaunch(string orderRef, string redirectUri, bool showLaunchButton) Parameters Type Name Description System.String orderRef System.String redirectUri System.Boolean showLaunchButton Returns Type Description BankIdUiApiInitializeResponse | Improve this Doc View Source AutoLaunchAndCheckStatus(String, String, Boolean) Declaration public static BankIdUiApiInitializeResponse AutoLaunchAndCheckStatus(string orderRef, string redirectUri, bool showLaunchButton) Parameters Type Name Description System.String orderRef System.String redirectUri System.Boolean showLaunchButton Returns Type Description BankIdUiApiInitializeResponse | Improve this Doc View Source ManualLaunch(String) Declaration public static BankIdUiApiInitializeResponse ManualLaunch(string orderRef) Parameters Type Name Description System.String orderRef Returns Type Description BankIdUiApiInitializeResponse | Improve this Doc View Source ManualLaunch(String, String, String) Declaration public static BankIdUiApiInitializeResponse ManualLaunch(string orderRef, string qrStartState, string qrCodeAsBase64) Parameters Type Name Description System.String orderRef System.String qrStartState System.String qrCodeAsBase64 Returns Type Description BankIdUiApiInitializeResponse"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiQrCodeRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiQrCodeRequest.html",
    "title": "Class BankIdUiApiQrCodeRequest | Active Login",
    "keywords": "Class BankIdUiApiQrCodeRequest Inheritance System.Object BankIdUiApiQrCodeRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiQrCodeRequest Constructors | Improve this Doc View Source BankIdUiApiQrCodeRequest() Declaration public BankIdUiApiQrCodeRequest() Properties | Improve this Doc View Source QrStartState Declaration [Required] public string QrStartState { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiQrCodeResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiQrCodeResponse.html",
    "title": "Class BankIdUiApiQrCodeResponse | Active Login",
    "keywords": "Class BankIdUiApiQrCodeResponse Inheritance System.Object BankIdUiApiQrCodeResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiQrCodeResponse Properties | Improve this Doc View Source QrCodeAsBase64 Declaration public string QrCodeAsBase64 { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiStatusRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiStatusRequest.html",
    "title": "Class BankIdUiApiStatusRequest | Active Login",
    "keywords": "Class BankIdUiApiStatusRequest Inheritance System.Object BankIdUiApiStatusRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiStatusRequest Constructors | Improve this Doc View Source BankIdUiApiStatusRequest() Declaration public BankIdUiApiStatusRequest() Properties | Improve this Doc View Source AutoStartAttempts Declaration public int AutoStartAttempts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OrderRef Declaration [Required] public string OrderRef { get; set; } Property Value Type Description System.String | Improve this Doc View Source ReturnUrl Declaration [Required] public string ReturnUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source UiOptions Declaration [Required] public string UiOptions { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiStatusResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiApiStatusResponse.html",
    "title": "Class BankIdUiApiStatusResponse | Active Login",
    "keywords": "Class BankIdUiApiStatusResponse Inheritance System.Object BankIdUiApiStatusResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiApiStatusResponse Properties | Improve this Doc View Source IsFinished Declaration public bool IsFinished { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RedirectUri Declaration public string RedirectUri { get; } Property Value Type Description System.String | Improve this Doc View Source Result Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source RetryLogin Declaration public bool RetryLogin { get; } Property Value Type Description System.Boolean | Improve this Doc View Source StatusMessage Declaration public string StatusMessage { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Finished(String, String) Declaration public static BankIdUiApiStatusResponse Finished(string redirectUri, string uiResult) Parameters Type Name Description System.String redirectUri System.String uiResult Returns Type Description BankIdUiApiStatusResponse | Improve this Doc View Source Pending(String) Declaration public static BankIdUiApiStatusResponse Pending(string statusMessage) Parameters Type Name Description System.String statusMessage Returns Type Description BankIdUiApiStatusResponse | Improve this Doc View Source Retry(String) Declaration public static BankIdUiApiStatusResponse Retry(string statusMessage) Parameters Type Name Description System.String statusMessage Returns Type Description BankIdUiApiStatusResponse"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiCancelResponse.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiCancelResponse.html",
    "title": "Class BankIdUiCancelResponse | Active Login",
    "keywords": "Class BankIdUiCancelResponse Inheritance System.Object BankIdUiCancelResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiCancelResponse Methods | Improve this Doc View Source Cancelled() Declaration public static BankIdUiCancelResponse Cancelled() Returns Type Description BankIdUiCancelResponse"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiOrderRef.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiOrderRef.html",
    "title": "Class BankIdUiOrderRef | Active Login",
    "keywords": "Class BankIdUiOrderRef Inheritance System.Object BankIdUiOrderRef Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiOrderRef Constructors | Improve this Doc View Source BankIdUiOrderRef(String) Declaration public BankIdUiOrderRef(string orderRef) Parameters Type Name Description System.String orderRef Properties | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiScriptConfiguration.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiScriptConfiguration.html",
    "title": "Class BankIdUiScriptConfiguration | Active Login",
    "keywords": "Class BankIdUiScriptConfiguration Inheritance System.Object BankIdUiScriptConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiScriptConfiguration Properties | Improve this Doc View Source BankIdCancelApiUrl Declaration [JsonPropertyName(\"bankIdCancelApiUrl\")] public string BankIdCancelApiUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdInitializeApiUrl Declaration [JsonPropertyName(\"bankIdInitializeApiUrl\")] public string BankIdInitializeApiUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdQrCodeApiUrl Declaration [JsonPropertyName(\"bankIdQrCodeApiUrl\")] public string BankIdQrCodeApiUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdStatusApiUrl Declaration [JsonPropertyName(\"bankIdStatusApiUrl\")] public string BankIdStatusApiUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source InitialStatusMessage Declaration [JsonPropertyName(\"initialStatusMessage\")] public string InitialStatusMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source QrCodeRefreshIntervalMs Declaration [JsonPropertyName(\"qrCodeRefreshIntervalMs\")] public int QrCodeRefreshIntervalMs { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StatusRefreshIntervalMs Declaration [JsonPropertyName(\"statusRefreshIntervalMs\")] public int StatusRefreshIntervalMs { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UnknownErrorMessage Declaration [JsonPropertyName(\"unknownErrorMessage\")] public string UnknownErrorMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source UnsupportedBrowserErrorMessage Declaration [JsonPropertyName(\"unsupportedBrowserErrorMessage\")] public string UnsupportedBrowserErrorMessage { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiScriptInitState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiScriptInitState.html",
    "title": "Class BankIdUiScriptInitState | Active Login",
    "keywords": "Class BankIdUiScriptInitState Inheritance System.Object BankIdUiScriptInitState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiScriptInitState Properties | Improve this Doc View Source AntiXsrfRequestToken Declaration [JsonPropertyName(\"antiXsrfRequestToken\")] public string AntiXsrfRequestToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source CancelReturnUrl Declaration [JsonPropertyName(\"cancelReturnUrl\")] public string CancelReturnUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProtectedUiOptions Declaration [JsonPropertyName(\"protectedUiOptions\")] public string ProtectedUiOptions { get; set; } Property Value Type Description System.String | Improve this Doc View Source ReturnUrl Declaration [JsonPropertyName(\"returnUrl\")] public string ReturnUrl { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiSignData.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiSignData.html",
    "title": "Class BankIdUiSignData | Active Login",
    "keywords": "Class BankIdUiSignData Inheritance System.Object BankIdUiSignData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiSignData Properties | Improve this Doc View Source UserVisibleData Declaration [JsonPropertyName(\"userVisibleData\")] public string UserVisibleData { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserVisibleDataFormat Declaration [JsonPropertyName(\"userVisibleDataFormat\")] public string UserVisibleDataFormat { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiViewModel.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiViewModel.html",
    "title": "Class BankIdUiViewModel | Active Login",
    "keywords": "Class BankIdUiViewModel Inheritance System.Object BankIdUiViewModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiViewModel Properties | Improve this Doc View Source BankIdUiScriptInitState Declaration public BankIdUiScriptInitState BankIdUiScriptInitState { get; } Property Value Type Description BankIdUiScriptInitState | Improve this Doc View Source BankIdUiSignData Declaration public BankIdUiSignData BankIdUiSignData { get; } Property Value Type Description BankIdUiSignData | Improve this Doc View Source BankUiScriptConfiguration Declaration public BankIdUiScriptConfiguration BankUiScriptConfiguration { get; } Property Value Type Description BankIdUiScriptConfiguration | Improve this Doc View Source LocalizedCancelButtonText Declaration public string LocalizedCancelButtonText { get; set; } Property Value Type Description System.String | Improve this Doc View Source LocalizedPageHeader Declaration public string LocalizedPageHeader { get; set; } Property Value Type Description System.String | Improve this Doc View Source LocalizedPageTitle Declaration public string LocalizedPageTitle { get; set; } Property Value Type Description System.String | Improve this Doc View Source LocalizedQrCodeImageAltText Declaration public string LocalizedQrCodeImageAltText { get; set; } Property Value Type Description System.String | Improve this Doc View Source LocalizedStartAppButtonText Declaration public string LocalizedStartAppButtonText { get; set; } Property Value Type Description System.String Extension Methods BankIdUiViewModelExtensions.BankUiScriptConfigurationJson(BankIdUiViewModel) BankIdUiViewModelExtensions.BankIdUiScriptInitStateJson(BankIdUiViewModel)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiViewModelExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiViewModelExtensions.html",
    "title": "Class BankIdUiViewModelExtensions | Active Login",
    "keywords": "Class BankIdUiViewModelExtensions Inheritance System.Object BankIdUiViewModelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdUiViewModelExtensions Methods | Improve this Doc View Source BankIdUiScriptInitStateJson(BankIdUiViewModel) Declaration public static string BankIdUiScriptInitStateJson(this BankIdUiViewModel model) Parameters Type Name Description BankIdUiViewModel model Returns Type Description System.String | Improve this Doc View Source BankUiScriptConfigurationJson(BankIdUiViewModel) Declaration public static string BankUiScriptConfigurationJson(this BankIdUiViewModel model) Parameters Type Name Description BankIdUiViewModel model Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models Classes BankIdUiApiCancelRequest BankIdUiApiErrorResponse BankIdUiApiInitializeRequest BankIdUiApiInitializeResponse BankIdUiApiQrCodeRequest BankIdUiApiQrCodeResponse BankIdUiApiStatusRequest BankIdUiApiStatusResponse BankIdUiCancelResponse BankIdUiOrderRef BankIdUiScriptConfiguration BankIdUiScriptInitState BankIdUiSignData BankIdUiViewModel BankIdUiViewModelExtensions"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.AuthenticationBuilderBankIdAuthExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.AuthenticationBuilderBankIdAuthExtensions.html",
    "title": "Class AuthenticationBuilderBankIdAuthExtensions | Active Login",
    "keywords": "Class AuthenticationBuilderBankIdAuthExtensions Inheritance System.Object AuthenticationBuilderBankIdAuthExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class AuthenticationBuilderBankIdAuthExtensions Methods | Improve this Doc View Source AddBankIdAuth(AuthenticationBuilder, Action<IBankIdAuthBuilder>) Add BankID authentication provider from Active Login. Declaration public static AuthenticationBuilder AddBankIdAuth(this AuthenticationBuilder authenticationBuilder, Action<IBankIdAuthBuilder> bankId) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder authenticationBuilder Action < IBankIdAuthBuilder > bankId BankID configuration. Returns Type Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder Examples .AddBankIdAuth(bankId => { bankId .AddSameDevice() .AddOtherDevice(); });"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthDefaults.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthDefaults.html",
    "title": "Class BankIdAuthDefaults | Active Login",
    "keywords": "Class BankIdAuthDefaults Default values used for auth configuration. Inheritance System.Object BankIdAuthDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdAuthDefaults Fields | Improve this Doc View Source AuthenticationMethodName Declaration public const string AuthenticationMethodName = \"bankid\" Field Value Type Description System.String | Improve this Doc View Source IdentityProviderName Declaration public const string IdentityProviderName = \"BankID\" Field Value Type Description System.String | Improve this Doc View Source MaximumSessionLifespan Declaration public static readonly TimeSpan MaximumSessionLifespan Field Value Type Description TimeSpan | Improve this Doc View Source OtherDeviceAuthenticationScheme Declaration public const string OtherDeviceAuthenticationScheme = \"al-bankid-auth-otherdevice\" Field Value Type Description System.String | Improve this Doc View Source OtherDeviceCallbackPath Declaration public static readonly PathString OtherDeviceCallbackPath Field Value Type Description Microsoft.AspNetCore.Http.PathString | Improve this Doc View Source OtherDeviceDisplayName Declaration public const string OtherDeviceDisplayName = \"BankID (Annan enhet)\" Field Value Type Description System.String | Improve this Doc View Source SameDeviceAuthenticationScheme Declaration public const string SameDeviceAuthenticationScheme = \"al-bankid-auth-samedevice\" Field Value Type Description System.String | Improve this Doc View Source SameDeviceCallbackPath Declaration public static readonly PathString SameDeviceCallbackPath Field Value Type Description Microsoft.AspNetCore.Http.PathString | Improve this Doc View Source SameDeviceDisplayName Declaration public const string SameDeviceDisplayName = \"BankID (Denna enhet)\" Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthHandler.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthHandler.html",
    "title": "Class BankIdAuthHandler | Active Login",
    "keywords": "Class BankIdAuthHandler Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationHandler < BankIdAuthOptions > Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler < BankIdAuthOptions > BankIdAuthHandler Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler Inherited Members Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.CreateEventsAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ShouldHandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleAuthenticateAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Events Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.InitializeEventsAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.InitializeHandlerAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.BuildRedirectUri(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ResolveTarget(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.AuthenticateAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleAuthenticateOnceAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleAuthenticateOnceSafeAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Scheme Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Options Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Context Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Request Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Response Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.OriginalPath Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.OriginalPathBase Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Logger Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.UrlEncoder Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.Clock Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.OptionsMonitor Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.CurrentUri System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdAuthHandler : RemoteAuthenticationHandler<BankIdAuthOptions>, IAuthenticationRequestHandler, IAuthenticationHandler Constructors | Improve this Doc View Source BankIdAuthHandler(IHttpContextAccessor, IAntiforgery, IOptionsMonitor<BankIdAuthOptions>, ILoggerFactory, UrlEncoder, ISystemClock, IBankIdUiStateProtector, IBankIdUiOptionsProtector, IBankIdUiResultProtector, IBankIdEventTrigger, IBankIdSupportedDeviceDetector, IEnumerable<IBankIdClaimsTransformer>) Declaration public BankIdAuthHandler(IHttpContextAccessor httpContextAccessor, IAntiforgery antiforgery, IOptionsMonitor<BankIdAuthOptions> options, ILoggerFactory loggerFactory, UrlEncoder encoder, ISystemClock clock, IBankIdUiStateProtector uiStateProtector, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdUiResultProtector uiResultProtector, IBankIdEventTrigger bankIdEventTrigger, IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector, IEnumerable<IBankIdClaimsTransformer> bankIdClaimsTransformers) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Microsoft.Extensions.Options.IOptionsMonitor < BankIdAuthOptions > options Microsoft.Extensions.Logging.ILoggerFactory loggerFactory System.Text.Encodings.Web.UrlEncoder encoder Microsoft.AspNetCore.Authentication.ISystemClock clock IBankIdUiStateProtector uiStateProtector IBankIdUiOptionsProtector uiOptionsProtector IBankIdUiResultProtector uiResultProtector IBankIdEventTrigger bankIdEventTrigger IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector IEnumerable < IBankIdClaimsTransformer > bankIdClaimsTransformers Methods | Improve this Doc View Source HandleChallengeAsync(AuthenticationProperties) Declaration protected override async Task HandleChallengeAsync(AuthenticationProperties properties) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties properties Returns Type Description Task Overrides Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) | Improve this Doc View Source HandleRemoteAuthenticateAsync() Declaration protected override async Task<HandleRequestResult> HandleRemoteAuthenticateAsync() Returns Type Description Task < Microsoft.AspNetCore.Authentication.HandleRequestResult > Overrides Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions>.HandleRemoteAuthenticateAsync() Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdAuthOptions.html",
    "title": "Class BankIdAuthOptions | Active Login",
    "keywords": "Class BankIdAuthOptions Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions BankIdAuthOptions Inherited Members Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(System.String) Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate() Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelHttpHandler Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Backchannel Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.DataProtectionProvider Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.AccessDeniedPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.ReturnUrlParameter Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.RemoteAuthenticationTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Events Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SaveTokens Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CorrelationCookie Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.EventsType Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefault Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardAuthenticate Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardChallenge Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardForbid Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignIn Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignOut Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefaultSelector System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdAuthOptions : RemoteAuthenticationOptions Properties | Improve this Doc View Source AuthenticationMethodName Declaration public string AuthenticationMethodName { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdAllowBiometric Users of iOS and Android devices may use fingerprint or face recognition for authentication if the device supports it and the user configured the device to use it. Declaration public bool BankIdAllowBiometric { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BankIdCertificatePolicies The oid in certificate policies in the user certificate. List of String. Declaration public List<string> BankIdCertificatePolicies { get; set; } Property Value Type Description List < System.String > | Improve this Doc View Source IdentityProviderName Declaration public string IdentityProviderName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IssueAuthenticationMethodClaim Declaration public bool IssueAuthenticationMethodClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IssueIdentityProviderClaim Declaration public bool IssueIdentityProviderClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StateCookie Declaration public CookieBuilder StateCookie { get; set; } Property Value Type Description Microsoft.AspNetCore.Http.CookieBuilder | Improve this Doc View Source TokenExpiresIn Declaration public TimeSpan? TokenExpiresIn { get; set; } Property Value Type Description System.Nullable < TimeSpan >"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdUiAuthState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.BankIdUiAuthState.html",
    "title": "Class BankIdUiAuthState | Active Login",
    "keywords": "Class BankIdUiAuthState Inheritance System.Object BankIdUiState BankIdUiAuthState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiAuthState : BankIdUiState Constructors | Improve this Doc View Source BankIdUiAuthState(AuthenticationProperties) Declaration public BankIdUiAuthState(AuthenticationProperties authenticationProperties) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties authenticationProperties Properties | Improve this Doc View Source AuthenticationProperties Declaration public AuthenticationProperties AuthenticationProperties { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.AuthenticationProperties | Improve this Doc View Source Type Declaration public override BankIdStateType Type { get; } Property Value Type Description BankIdStateType Overrides BankIdUiState.Type"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Auth | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Auth Classes AuthenticationBuilderBankIdAuthExtensions BankIdAuthDefaults Default values used for auth configuration. BankIdAuthHandler BankIdAuthOptions BankIdUiAuthState IBankIdAuthBuilderExtensions Interfaces IBankIdAuthBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.IBankIdAuthBuilder.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.IBankIdAuthBuilder.html",
    "title": "Interface IBankIdAuthBuilder | Active Login",
    "keywords": "Interface IBankIdAuthBuilder Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdAuthBuilder Properties | Improve this Doc View Source AuthenticationBuilder Declaration AuthenticationBuilder AuthenticationBuilder { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder | Improve this Doc View Source Services Declaration IServiceCollection Services { get; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Extension Methods IBankIdAuthBuilderExtensions.AddClaimsTransformer<TBankIdClaimsTransformerImplementation>(IBankIdAuthBuilder) IBankIdAuthBuilderExtensions.UseAuthRequestUserData(IBankIdAuthBuilder, BankIdAuthUserData) IBankIdAuthBuilderExtensions.UseAuthRequestUserData(IBankIdAuthBuilder, Action<BankIdAuthUserData>) IBankIdAuthBuilderExtensions.UseAuthRequestUserDataResolver<TBankIdAuthRequestUserDataResolverImplementation>(IBankIdAuthBuilder) IBankIdAuthBuilderExtensions.Configure(IBankIdAuthBuilder, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddSameDevice(IBankIdAuthBuilder) IBankIdAuthBuilderExtensions.AddSameDevice(IBankIdAuthBuilder, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddSameDevice(IBankIdAuthBuilder, String, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddSameDevice(IBankIdAuthBuilder, String, String, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddOtherDevice(IBankIdAuthBuilder) IBankIdAuthBuilderExtensions.AddOtherDevice(IBankIdAuthBuilder, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddOtherDevice(IBankIdAuthBuilder, String, Action<BankIdAuthOptions>) IBankIdAuthBuilderExtensions.AddOtherDevice(IBankIdAuthBuilder, String, String, Action<BankIdAuthOptions>)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.IBankIdAuthBuilderExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Auth.IBankIdAuthBuilderExtensions.html",
    "title": "Class IBankIdAuthBuilderExtensions | Active Login",
    "keywords": "Class IBankIdAuthBuilderExtensions Inheritance System.Object IBankIdAuthBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Auth Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class IBankIdAuthBuilderExtensions Methods | Improve this Doc View Source AddClaimsTransformer<TBankIdClaimsTransformerImplementation>(IBankIdAuthBuilder) Add a custom claims transformer. Declaration public static IBankIdAuthBuilder AddClaimsTransformer<TBankIdClaimsTransformerImplementation>(this IBankIdAuthBuilder builder) where TBankIdClaimsTransformerImplementation : class, IBankIdClaimsTransformer Parameters Type Name Description IBankIdAuthBuilder builder Returns Type Description IBankIdAuthBuilder Type Parameters Name Description TBankIdClaimsTransformerImplementation | Improve this Doc View Source AddOtherDevice(IBankIdAuthBuilder) Add scheme for BankID on Other Device. Declaration public static IBankIdAuthBuilder AddOtherDevice(this IBankIdAuthBuilder builder) Parameters Type Name Description IBankIdAuthBuilder builder Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddOtherDevice(IBankIdAuthBuilder, Action<BankIdAuthOptions>) Add scheme for BankID on Other Device. Declaration public static IBankIdAuthBuilder AddOtherDevice(this IBankIdAuthBuilder builder, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddOtherDevice(IBankIdAuthBuilder, String, Action<BankIdAuthOptions>) Add scheme for BankID on Other Device. Declaration public static IBankIdAuthBuilder AddOtherDevice(this IBankIdAuthBuilder builder, string authenticationScheme, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder System.String authenticationScheme Scheme name Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddOtherDevice(IBankIdAuthBuilder, String, String, Action<BankIdAuthOptions>) Add scheme for BankID on Other Device. Declaration public static IBankIdAuthBuilder AddOtherDevice(this IBankIdAuthBuilder builder, string authenticationScheme, string displayName, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder System.String authenticationScheme Scheme name System.String displayName Scheme display name Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddSameDevice(IBankIdAuthBuilder) Add scheme for BankID on Same Device. Declaration public static IBankIdAuthBuilder AddSameDevice(this IBankIdAuthBuilder builder) Parameters Type Name Description IBankIdAuthBuilder builder Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddSameDevice(IBankIdAuthBuilder, Action<BankIdAuthOptions>) Add scheme for BankID on Same Device. Declaration public static IBankIdAuthBuilder AddSameDevice(this IBankIdAuthBuilder builder, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddSameDevice(IBankIdAuthBuilder, String, Action<BankIdAuthOptions>) Add scheme for BankID on Same Device. Declaration public static IBankIdAuthBuilder AddSameDevice(this IBankIdAuthBuilder builder, string authenticationScheme, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder System.String authenticationScheme Scheme name Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source AddSameDevice(IBankIdAuthBuilder, String, String, Action<BankIdAuthOptions>) Add scheme for BankID on Same Device. Declaration public static IBankIdAuthBuilder AddSameDevice(this IBankIdAuthBuilder builder, string authenticationScheme, string displayName, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder System.String authenticationScheme Scheme name System.String displayName Scheme display name Action < BankIdAuthOptions > configureOptions BankId Options Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source Configure(IBankIdAuthBuilder, Action<BankIdAuthOptions>) Configures options that will apply to all BankID schemes. Declaration public static IBankIdAuthBuilder Configure(this IBankIdAuthBuilder builder, Action<BankIdAuthOptions> configureOptions) Parameters Type Name Description IBankIdAuthBuilder builder Action < BankIdAuthOptions > configureOptions Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source UseAuthRequestUserData(IBankIdAuthBuilder, Action<BankIdAuthUserData>) Set what user data to supply to the auth request. Declaration public static IBankIdAuthBuilder UseAuthRequestUserData(this IBankIdAuthBuilder builder, Action<BankIdAuthUserData> authUserData) Parameters Type Name Description IBankIdAuthBuilder builder Action < BankIdAuthUserData > authUserData Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source UseAuthRequestUserData(IBankIdAuthBuilder, BankIdAuthUserData) Set what user data to supply to the auth request. Declaration public static IBankIdAuthBuilder UseAuthRequestUserData(this IBankIdAuthBuilder builder, BankIdAuthUserData authUserData) Parameters Type Name Description IBankIdAuthBuilder builder BankIdAuthUserData authUserData Returns Type Description IBankIdAuthBuilder | Improve this Doc View Source UseAuthRequestUserDataResolver<TBankIdAuthRequestUserDataResolverImplementation>(IBankIdAuthBuilder) Use a custom user data resolver. Declaration public static IBankIdAuthBuilder UseAuthRequestUserDataResolver<TBankIdAuthRequestUserDataResolverImplementation>(this IBankIdAuthBuilder builder) where TBankIdAuthRequestUserDataResolverImplementation : class, IBankIdAuthRequestUserDataResolver Parameters Type Name Description IBankIdAuthBuilder builder Returns Type Description IBankIdAuthBuilder Type Parameters Name Description TBankIdAuthRequestUserDataResolverImplementation"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.BankIdClaimTypes.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.BankIdClaimTypes.html",
    "title": "Class BankIdClaimTypes | Active Login",
    "keywords": "Class BankIdClaimTypes Claims issued by ActiveLogin.BankId. Inheritance System.Object BankIdClaimTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdClaimTypes Fields | Improve this Doc View Source AuthenticationMethod Declaration public const string AuthenticationMethod = \"amr\" Field Value Type Description System.String | Improve this Doc View Source Expires Declaration public const string Expires = \"exp\" Field Value Type Description System.String | Improve this Doc View Source FamilyName Declaration public const string FamilyName = \"family_name\" Field Value Type Description System.String | Improve this Doc View Source GivenName Declaration public const string GivenName = \"given_name\" Field Value Type Description System.String | Improve this Doc View Source IdentityProvider Declaration public const string IdentityProvider = \"idp\" Field Value Type Description System.String | Improve this Doc View Source Name Declaration public const string Name = \"name\" Field Value Type Description System.String | Improve this Doc View Source Role Declaration public const string Role = \"role\" Field Value Type Description System.String | Improve this Doc View Source Subject Declaration public const string Subject = \"sub\" Field Value Type Description System.String | Improve this Doc View Source SwedishPersonalIdentityNumber Declaration public const string SwedishPersonalIdentityNumber = \"swedish_personal_identity_number\" Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdClaimsTransformationContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdClaimsTransformationContext.html",
    "title": "Class BankIdClaimsTransformationContext | Active Login",
    "keywords": "Class BankIdClaimsTransformationContext Inheritance System.Object BankIdClaimsTransformationContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdClaimsTransformationContext Properties | Improve this Doc View Source BankIdAuthOptions Declaration public BankIdAuthOptions BankIdAuthOptions { get; } Property Value Type Description BankIdAuthOptions | Improve this Doc View Source BankIdCompletionData Declaration public CompletionData BankIdCompletionData { get; set; } Property Value Type Description CompletionData | Improve this Doc View Source BankIdOrderRef Declaration public string BankIdOrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source Claims Declaration public List<Claim> Claims { get; set; } Property Value Type Description List < System.Security.Claims.Claim > | Improve this Doc View Source GivenName Declaration public string GivenName { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber Declaration public string PersonalIdentityNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Surname Declaration public string Surname { get; } Property Value Type Description System.String Extension Methods BankIdClaimsTransformationContextExtensions.AddClaim(BankIdClaimsTransformationContext, Claim) BankIdClaimsTransformationContextExtensions.AddClaim(BankIdClaimsTransformationContext, String, String)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdClaimsTransformationContextExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdClaimsTransformationContextExtensions.html",
    "title": "Class BankIdClaimsTransformationContextExtensions | Active Login",
    "keywords": "Class BankIdClaimsTransformationContextExtensions Inheritance System.Object BankIdClaimsTransformationContextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdClaimsTransformationContextExtensions Methods | Improve this Doc View Source AddClaim(BankIdClaimsTransformationContext, Claim) Declaration public static void AddClaim(this BankIdClaimsTransformationContext context, Claim claim) Parameters Type Name Description BankIdClaimsTransformationContext context System.Security.Claims.Claim claim | Improve this Doc View Source AddClaim(BankIdClaimsTransformationContext, String, String) Declaration public static void AddClaim(this BankIdClaimsTransformationContext context, string type, string value) Parameters Type Name Description BankIdClaimsTransformationContext context System.String type System.String value"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdDefaultClaimsTransformer.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.BankIdDefaultClaimsTransformer.html",
    "title": "Class BankIdDefaultClaimsTransformer | Active Login",
    "keywords": "Class BankIdDefaultClaimsTransformer Inheritance System.Object BankIdDefaultClaimsTransformer Implements IBankIdClaimsTransformer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdDefaultClaimsTransformer : IBankIdClaimsTransformer Constructors | Improve this Doc View Source BankIdDefaultClaimsTransformer(ISystemClock) Declaration public BankIdDefaultClaimsTransformer(ISystemClock clock) Parameters Type Name Description Microsoft.AspNetCore.Authentication.ISystemClock clock Properties | Improve this Doc View Source Clock Declaration public ISystemClock Clock { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.ISystemClock Methods | Improve this Doc View Source TransformClaims(BankIdClaimsTransformationContext) Declaration public Task TransformClaims(BankIdClaimsTransformationContext context) Parameters Type Name Description BankIdClaimsTransformationContext context Returns Type Description Task Implements IBankIdClaimsTransformer"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation Classes BankIdClaimsTransformationContext BankIdClaimsTransformationContextExtensions BankIdDefaultClaimsTransformer Interfaces IBankIdClaimsTransformer"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.IBankIdClaimsTransformer.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation.IBankIdClaimsTransformer.html",
    "title": "Interface IBankIdClaimsTransformer | Active Login",
    "keywords": "Interface IBankIdClaimsTransformer Namespace : ActiveLogin.Authentication.BankId.AspNetCore.ClaimsTransformation Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdClaimsTransformer Methods | Improve this Doc View Source TransformClaims(BankIdClaimsTransformationContext) Declaration Task TransformClaims(BankIdClaimsTransformationContext context) Parameters Type Name Description BankIdClaimsTransformationContext context Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.DataProtection | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Interfaces IBankIdQrStartStateProtector IBankIdUiOptionsProtector IBankIdUiOrderRefProtector IBankIdUiResultProtector IBankIdUiStateProtector"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdQrStartStateProtector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdQrStartStateProtector.html",
    "title": "Interface IBankIdQrStartStateProtector | Active Login",
    "keywords": "Interface IBankIdQrStartStateProtector Namespace : ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdQrStartStateProtector Methods | Improve this Doc View Source Protect(BankIdQrStartState) Declaration string Protect(BankIdQrStartState qrStartState) Parameters Type Name Description BankIdQrStartState qrStartState Returns Type Description System.String | Improve this Doc View Source Unprotect(String) Declaration BankIdQrStartState Unprotect(string protectedQrStartState) Parameters Type Name Description System.String protectedQrStartState Returns Type Description BankIdQrStartState"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiOptionsProtector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiOptionsProtector.html",
    "title": "Interface IBankIdUiOptionsProtector | Active Login",
    "keywords": "Interface IBankIdUiOptionsProtector Namespace : ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdUiOptionsProtector Methods | Improve this Doc View Source Protect(BankIdUiOptions) Declaration string Protect(BankIdUiOptions uiOptions) Parameters Type Name Description BankIdUiOptions uiOptions Returns Type Description System.String | Improve this Doc View Source Unprotect(String) Declaration BankIdUiOptions Unprotect(string protectedUiOptions) Parameters Type Name Description System.String protectedUiOptions Returns Type Description BankIdUiOptions"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiOrderRefProtector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiOrderRefProtector.html",
    "title": "Interface IBankIdUiOrderRefProtector | Active Login",
    "keywords": "Interface IBankIdUiOrderRefProtector Namespace : ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdUiOrderRefProtector Methods | Improve this Doc View Source Protect(BankIdUiOrderRef) Declaration string Protect(BankIdUiOrderRef orderRef) Parameters Type Name Description BankIdUiOrderRef orderRef Returns Type Description System.String | Improve this Doc View Source Unprotect(String) Declaration BankIdUiOrderRef Unprotect(string protectedOrderRef) Parameters Type Name Description System.String protectedOrderRef Returns Type Description BankIdUiOrderRef"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiResultProtector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiResultProtector.html",
    "title": "Interface IBankIdUiResultProtector | Active Login",
    "keywords": "Interface IBankIdUiResultProtector Namespace : ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdUiResultProtector Methods | Improve this Doc View Source Protect(BankIdUiResult) Declaration string Protect(BankIdUiResult uiAuthResult) Parameters Type Name Description BankIdUiResult uiAuthResult Returns Type Description System.String | Improve this Doc View Source Unprotect(String) Declaration BankIdUiResult Unprotect(string protectedUiAuthResult) Parameters Type Name Description System.String protectedUiAuthResult Returns Type Description BankIdUiResult"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiStateProtector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.DataProtection.IBankIdUiStateProtector.html",
    "title": "Interface IBankIdUiStateProtector | Active Login",
    "keywords": "Interface IBankIdUiStateProtector Namespace : ActiveLogin.Authentication.BankId.AspNetCore.DataProtection Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdUiStateProtector Methods | Improve this Doc View Source Protect(BankIdUiState) Declaration string Protect(BankIdUiState state) Parameters Type Name Description BankIdUiState state Returns Type Description System.String | Improve this Doc View Source Unprotect(String) Declaration BankIdUiState Unprotect(string protectedState) Parameters Type Name Description System.String protectedState Returns Type Description BankIdUiState"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore Classes ActiveLoginResources Empty. Used as a pointer for our localized resources. BankIdClaimTypes Claims issued by ActiveLogin.BankId."
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdStateType.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdStateType.html",
    "title": "Enum BankIdStateType | Active Login",
    "keywords": "Enum BankIdStateType Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public enum BankIdStateType Fields Name Description Auth Sign"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiOptions.html",
    "title": "Class BankIdUiOptions | Active Login",
    "keywords": "Class BankIdUiOptions Inheritance System.Object BankIdUiOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiOptions Constructors | Improve this Doc View Source BankIdUiOptions(List<String>, Boolean, Boolean, String, String) Declaration public BankIdUiOptions(List<string> certificatePolicies, bool sameDevice, bool allowBiometric, string cancelReturnUrl, string stateCookieName) Parameters Type Name Description List < System.String > certificatePolicies System.Boolean sameDevice System.Boolean allowBiometric System.String cancelReturnUrl System.String stateCookieName Properties | Improve this Doc View Source AllowBiometric Declaration public bool AllowBiometric { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CancelReturnUrl Declaration public string CancelReturnUrl { get; } Property Value Type Description System.String | Improve this Doc View Source CertificatePolicies Declaration public List<string> CertificatePolicies { get; } Property Value Type Description List < System.String > | Improve this Doc View Source SameDevice Declaration public bool SameDevice { get; } Property Value Type Description System.Boolean | Improve this Doc View Source StateCookieName Declaration public string StateCookieName { get; } Property Value Type Description System.String Extension Methods BankIdUiOptionsExtensions.ToBankIdFlowOptions(BankIdUiOptions)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiOptionsExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiOptionsExtensions.html",
    "title": "Class BankIdUiOptionsExtensions | Active Login",
    "keywords": "Class BankIdUiOptionsExtensions Inheritance System.Object BankIdUiOptionsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdUiOptionsExtensions Methods | Improve this Doc View Source ToBankIdFlowOptions(BankIdUiOptions) Declaration public static BankIdFlowOptions ToBankIdFlowOptions(this BankIdUiOptions options) Parameters Type Name Description BankIdUiOptions options Returns Type Description BankIdFlowOptions"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiResult.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiResult.html",
    "title": "Class BankIdUiResult | Active Login",
    "keywords": "Class BankIdUiResult Inheritance System.Object BankIdUiResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiResult Constructors | Improve this Doc View Source BankIdUiResult(Boolean, String, String, String, String, String, String, String, String, String, String) Declaration public BankIdUiResult(bool isSuccessful, string bankIdOrderRef, string personalIdentityNumber, string name, string givenName, string surname, string signature, string ocspResponse, string certNotBefore, string certNotAfter, string detectedIpAddress) Parameters Type Name Description System.Boolean isSuccessful System.String bankIdOrderRef System.String personalIdentityNumber System.String name System.String givenName System.String surname System.String signature System.String ocspResponse System.String certNotBefore System.String certNotAfter System.String detectedIpAddress Properties | Improve this Doc View Source BankIdOrderRef Declaration public string BankIdOrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source CertNotAfter Declaration public string CertNotAfter { get; } Property Value Type Description System.String | Improve this Doc View Source CertNotBefore Declaration public string CertNotBefore { get; } Property Value Type Description System.String | Improve this Doc View Source DetectedIpAddress Declaration public string DetectedIpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source GivenName Declaration public string GivenName { get; } Property Value Type Description System.String | Improve this Doc View Source IsSuccessful Declaration public bool IsSuccessful { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OcspResponse Declaration public string OcspResponse { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber Declaration public string PersonalIdentityNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Signature Declaration public string Signature { get; } Property Value Type Description System.String | Improve this Doc View Source Surname Declaration public string Surname { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Success(String, String, String, String, String, String, String, String, String, String) Declaration public static BankIdUiResult Success(string bankIdOrderRef, string personalIdentityNumber, string name, string givenName, string surname, string signature, string ocspResponse, string certNotBefore, string certNotAfter, string detectedIpAddress) Parameters Type Name Description System.String bankIdOrderRef System.String personalIdentityNumber System.String name System.String givenName System.String surname System.String signature System.String ocspResponse System.String certNotBefore System.String certNotAfter System.String detectedIpAddress Returns Type Description BankIdUiResult"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.BankIdUiState.html",
    "title": "Class BankIdUiState | Active Login",
    "keywords": "Class BankIdUiState Inheritance System.Object BankIdUiState BankIdUiAuthState BankIdUiSignState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Models Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public abstract class BankIdUiState Properties | Improve this Doc View Source Type Declaration public abstract BankIdStateType Type { get; } Property Value Type Description BankIdStateType"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Models.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Models Classes BankIdUiOptions BankIdUiOptionsExtensions BankIdUiResult BankIdUiState Enums BankIdStateType"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdInitiateSignResult.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdInitiateSignResult.html",
    "title": "Class BankIdInitiateSignResult | Active Login",
    "keywords": "Class BankIdInitiateSignResult Inheritance System.Object Microsoft.AspNetCore.Mvc.ActionResult BankIdInitiateSignResult Implements Microsoft.AspNetCore.Mvc.IActionResult Inherited Members Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdInitiateSignResult : ActionResult, IActionResult Constructors | Improve this Doc View Source BankIdInitiateSignResult(BankIdSignProperties, String, String) Declaration public BankIdInitiateSignResult(BankIdSignProperties properties, string callbackPath, string configKey) Parameters Type Name Description BankIdSignProperties properties System.String callbackPath System.String configKey Methods | Improve this Doc View Source ExecuteResultAsync(ActionContext) Declaration public override async Task ExecuteResultAsync(ActionContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ActionContext context Returns Type Description Task Overrides Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext) Implements Microsoft.AspNetCore.Mvc.IActionResult"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignConfiguration.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignConfiguration.html",
    "title": "Class BankIdSignConfiguration | Active Login",
    "keywords": "Class BankIdSignConfiguration Inheritance System.Object BankIdSignConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSignConfiguration Constructors | Improve this Doc View Source BankIdSignConfiguration(String, String) Declaration public BankIdSignConfiguration(string key, string displayName = null) Parameters Type Name Description System.String key System.String displayName Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignDefaults.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignDefaults.html",
    "title": "Class BankIdSignDefaults | Active Login",
    "keywords": "Class BankIdSignDefaults Default values used for sign configuration. Inheritance System.Object BankIdSignDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class BankIdSignDefaults Fields | Improve this Doc View Source OtherDeviceConfigDisplayName Declaration public const string OtherDeviceConfigDisplayName = \"BankID (Annan enhet)\" Field Value Type Description System.String | Improve this Doc View Source OtherDeviceConfigKey Declaration public const string OtherDeviceConfigKey = \"al-bankid-sign-otherdevice\" Field Value Type Description System.String | Improve this Doc View Source SameDeviceConfigDisplayName Declaration public const string SameDeviceConfigDisplayName = \"BankID (Denna enhet)\" Field Value Type Description System.String | Improve this Doc View Source SameDeviceConfigKey Declaration public const string SameDeviceConfigKey = \"al-bankid-sign-samedevice\" Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignOptions.html",
    "title": "Class BankIdSignOptions | Active Login",
    "keywords": "Class BankIdSignOptions Inheritance System.Object BankIdSignOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSignOptions Properties | Improve this Doc View Source BankIdAllowBiometric Users of iOS and Android devices may use fingerprint or face recognition for authentication if the device supports it and the user configured the device to use it. Declaration public bool BankIdAllowBiometric { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BankIdCertificatePolicies The oid in certificate policies in the user certificate. List of String. Declaration public List<string> BankIdCertificatePolicies { get; set; } Property Value Type Description List < System.String > | Improve this Doc View Source StateCookie Declaration public CookieBuilder StateCookie { get; set; } Property Value Type Description Microsoft.AspNetCore.Http.CookieBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignProperties.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignProperties.html",
    "title": "Class BankIdSignProperties | Active Login",
    "keywords": "Class BankIdSignProperties Inheritance System.Object BankIdSignProperties Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSignProperties Constructors | Improve this Doc View Source BankIdSignProperties(String) The properties used for signing. Declaration public BankIdSignProperties(string userVisibleData) Parameters Type Name Description System.String userVisibleData The text can be formatted using CR, LF and CRLF for new lines. The text must be encoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding. Scenario sign: The text to be displayed and signed. String. The text can be formatted using CR, LF and CRLF for new lines. Scenario auth: A text that is displayed to the user during authentication with BankID, with the purpose of providing context for the authentication and to enable users to notice if there is something wrong about the identification and avoid attempted frauds. Properties | Improve this Doc View Source Items A collection of items where you can store state that will be provided once the sign flow is done. Declaration public IDictionary<string, string> Items { get; set; } Property Value Type Description IDictionary < System.String , System.String > | Improve this Doc View Source UserNonVisibleData Data not displayed to the user. Declaration public byte[] UserNonVisibleData { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source UserVisibleData The text can be formatted using CR, LF and CRLF for new lines. The text must be encoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding. Scenario sign: The text to be displayed and signed. String. The text can be formatted using CR, LF and CRLF for new lines. Scenario auth: A text that is displayed to the user during authentication with BankID, with the purpose of providing context for the authentication and to enable users to notice if there is something wrong about the identification and avoid attempted frauds. Declaration public string UserVisibleData { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserVisibleDataFormat If present, and set to \"simpleMarkdownV1\", this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at. For further information of formatting options, please study the document Guidelines for Formatted Text. Declaration public string UserVisibleDataFormat { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignResult.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignResult.html",
    "title": "Class BankIdSignResult | Active Login",
    "keywords": "Class BankIdSignResult Inheritance System.Object BankIdSignResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSignResult Properties | Improve this Doc View Source BankIdCompletionData Declaration public CompletionData BankIdCompletionData { get; set; } Property Value Type Description CompletionData | Improve this Doc View Source Properties Declaration public BankIdSignProperties Properties { get; } Property Value Type Description BankIdSignProperties | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Success(BankIdSignProperties, CompletionData) Declaration public static BankIdSignResult Success(BankIdSignProperties properties, CompletionData bankidCompletionData) Parameters Type Name Description BankIdSignProperties properties CompletionData bankidCompletionData Returns Type Description BankIdSignResult"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignService.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdSignService.html",
    "title": "Class BankIdSignService | Active Login",
    "keywords": "Class BankIdSignService Inheritance System.Object BankIdSignService Implements IBankIdSignService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSignService : IBankIdSignService Constructors | Improve this Doc View Source BankIdSignService(IHttpContextAccessor, IAntiforgery, IOptionsSnapshot<BankIdSignOptions>, IBankIdFlowSystemClock, IBankIdUiStateProtector, IBankIdUiOptionsProtector, IBankIdSupportedDeviceDetector, IBankIdEventTrigger, IBankIdUiResultProtector) Declaration public BankIdSignService(IHttpContextAccessor httpContextAccessor, IAntiforgery antiforgery, IOptionsSnapshot<BankIdSignOptions> optionsSnapshot, IBankIdFlowSystemClock systemClock, IBankIdUiStateProtector bankIdUiStateProtector, IBankIdUiOptionsProtector uiOptionsProtector, IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector, IBankIdEventTrigger bankIdEventTrigger, IBankIdUiResultProtector uiResultProtector) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery Microsoft.Extensions.Options.IOptionsSnapshot < BankIdSignOptions > optionsSnapshot IBankIdFlowSystemClock systemClock IBankIdUiStateProtector bankIdUiStateProtector IBankIdUiOptionsProtector uiOptionsProtector IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector IBankIdEventTrigger bankIdEventTrigger IBankIdUiResultProtector uiResultProtector Methods | Improve this Doc View Source GetSignResultAsync(String) Declaration public async Task<BankIdSignResult> GetSignResultAsync(string configKey) Parameters Type Name Description System.String configKey Returns Type Description Task < BankIdSignResult > | Improve this Doc View Source InitiateSignAsync(BankIdSignProperties, String, String) Declaration public Task InitiateSignAsync(BankIdSignProperties properties, string callbackPath, string configKey) Parameters Type Name Description BankIdSignProperties properties System.String callbackPath System.String configKey Returns Type Description Task Implements IBankIdSignService"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdUiSignState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.BankIdUiSignState.html",
    "title": "Class BankIdUiSignState | Active Login",
    "keywords": "Class BankIdUiSignState Inheritance System.Object BankIdUiState BankIdUiSignState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdUiSignState : BankIdUiState Constructors | Improve this Doc View Source BankIdUiSignState(String, BankIdSignProperties) Declaration public BankIdUiSignState(string configKey, BankIdSignProperties bankIdSignProperties) Parameters Type Name Description System.String configKey BankIdSignProperties bankIdSignProperties Properties | Improve this Doc View Source BankIdSignProperties Declaration public BankIdSignProperties BankIdSignProperties { get; set; } Property Value Type Description BankIdSignProperties | Improve this Doc View Source ConfigKey Declaration public string ConfigKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public override BankIdStateType Type { get; } Property Value Type Description BankIdStateType Overrides BankIdUiState.Type"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.ControllerBaseExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.ControllerBaseExtensions.html",
    "title": "Class ControllerBaseExtensions | Active Login",
    "keywords": "Class ControllerBaseExtensions Inheritance System.Object ControllerBaseExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class ControllerBaseExtensions Methods | Improve this Doc View Source BankIdInitiateSign(ControllerBase, BankIdSignProperties, String, String) Declaration public static IActionResult BankIdInitiateSign(this ControllerBase controllerBase, BankIdSignProperties properties, string callbackPath, string configKey) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ControllerBase controllerBase BankIdSignProperties properties System.String callbackPath System.String configKey Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Sign | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.Sign Classes BankIdInitiateSignResult BankIdSignConfiguration BankIdSignDefaults Default values used for sign configuration. BankIdSignOptions BankIdSignProperties BankIdSignResult BankIdSignService BankIdUiSignState ControllerBaseExtensions IBankIdSignBuilderExtensions ServiceCollectionBankIdSignExtensions Interfaces IBankIdSignBuilder IBankIdSignConfigurationProvider IBankIdSignService"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignBuilder.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignBuilder.html",
    "title": "Interface IBankIdSignBuilder | Active Login",
    "keywords": "Interface IBankIdSignBuilder Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdSignBuilder Properties | Improve this Doc View Source Services Declaration IServiceCollection Services { get; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Methods | Improve this Doc View Source AddConfig(String, String, Nullable<Action<BankIdSignOptions>>) Declaration void AddConfig(string configKey, string displayName = null, Action<BankIdSignOptions>? configureOptions = null) Parameters Type Name Description System.String configKey System.String displayName System.Nullable < Action < BankIdSignOptions >> configureOptions Extension Methods IBankIdSignBuilderExtensions.Configure(IBankIdSignBuilder, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddSameDevice(IBankIdSignBuilder) IBankIdSignBuilderExtensions.AddSameDevice(IBankIdSignBuilder, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddSameDevice(IBankIdSignBuilder, String, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddSameDevice(IBankIdSignBuilder, String, String, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddOtherDevice(IBankIdSignBuilder) IBankIdSignBuilderExtensions.AddOtherDevice(IBankIdSignBuilder, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddOtherDevice(IBankIdSignBuilder, String, Action<BankIdSignOptions>) IBankIdSignBuilderExtensions.AddOtherDevice(IBankIdSignBuilder, String, String, Action<BankIdSignOptions>)"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignBuilderExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignBuilderExtensions.html",
    "title": "Class IBankIdSignBuilderExtensions | Active Login",
    "keywords": "Class IBankIdSignBuilderExtensions Inheritance System.Object IBankIdSignBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class IBankIdSignBuilderExtensions Methods | Improve this Doc View Source AddOtherDevice(IBankIdSignBuilder) Add config for BankID on Other Device. Declaration public static IBankIdSignBuilder AddOtherDevice(this IBankIdSignBuilder builder) Parameters Type Name Description IBankIdSignBuilder builder Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddOtherDevice(IBankIdSignBuilder, Action<BankIdSignOptions>) Add config for BankID on Other Device. Declaration public static IBankIdSignBuilder AddOtherDevice(this IBankIdSignBuilder builder, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddOtherDevice(IBankIdSignBuilder, String, Action<BankIdSignOptions>) Add config for BankID on Other Device. Declaration public static IBankIdSignBuilder AddOtherDevice(this IBankIdSignBuilder builder, string configKey, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder System.String configKey Scheme name Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddOtherDevice(IBankIdSignBuilder, String, String, Action<BankIdSignOptions>) Add config for BankID on Other Device. Declaration public static IBankIdSignBuilder AddOtherDevice(this IBankIdSignBuilder builder, string configKey, string displayName, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder System.String configKey Scheme name System.String displayName Scheme display name Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddSameDevice(IBankIdSignBuilder) Add config for BankID on Same Device. Declaration public static IBankIdSignBuilder AddSameDevice(this IBankIdSignBuilder builder) Parameters Type Name Description IBankIdSignBuilder builder Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddSameDevice(IBankIdSignBuilder, Action<BankIdSignOptions>) Add config for BankID on Same Device. Declaration public static IBankIdSignBuilder AddSameDevice(this IBankIdSignBuilder builder, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddSameDevice(IBankIdSignBuilder, String, Action<BankIdSignOptions>) Add config for BankID on Same Device. Declaration public static IBankIdSignBuilder AddSameDevice(this IBankIdSignBuilder builder, string configKey, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder System.String configKey Scheme name Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source AddSameDevice(IBankIdSignBuilder, String, String, Action<BankIdSignOptions>) Add config for BankID on Same Device. Declaration public static IBankIdSignBuilder AddSameDevice(this IBankIdSignBuilder builder, string configKey, string displayName, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder System.String configKey Scheme name System.String displayName Scheme display name Action < BankIdSignOptions > configureOptions BankId Options Returns Type Description IBankIdSignBuilder | Improve this Doc View Source Configure(IBankIdSignBuilder, Action<BankIdSignOptions>) Configures options that will apply to all BankID config. Declaration public static IBankIdSignBuilder Configure(this IBankIdSignBuilder builder, Action<BankIdSignOptions> configureOptions) Parameters Type Name Description IBankIdSignBuilder builder Action < BankIdSignOptions > configureOptions Returns Type Description IBankIdSignBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignConfigurationProvider.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignConfigurationProvider.html",
    "title": "Interface IBankIdSignConfigurationProvider | Active Login",
    "keywords": "Interface IBankIdSignConfigurationProvider Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdSignConfigurationProvider Methods | Improve this Doc View Source AddConfiguration(String, String) Declaration void AddConfiguration(string key, string displayName = null) Parameters Type Name Description System.String key System.String displayName | Improve this Doc View Source GetAllConfigurationsAsync() Declaration Task<List<BankIdSignConfiguration>> GetAllConfigurationsAsync() Returns Type Description Task < List < BankIdSignConfiguration >>"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignService.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.IBankIdSignService.html",
    "title": "Interface IBankIdSignService | Active Login",
    "keywords": "Interface IBankIdSignService Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdSignService Methods | Improve this Doc View Source GetSignResultAsync(String) Declaration Task<BankIdSignResult> GetSignResultAsync(string configKey) Parameters Type Name Description System.String configKey Returns Type Description Task < BankIdSignResult > | Improve this Doc View Source InitiateSignAsync(BankIdSignProperties, String, String) Declaration Task InitiateSignAsync(BankIdSignProperties properties, string callbackPath, string configKey) Parameters Type Name Description BankIdSignProperties properties System.String callbackPath System.String configKey Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.ServiceCollectionBankIdSignExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.Sign.ServiceCollectionBankIdSignExtensions.html",
    "title": "Class ServiceCollectionBankIdSignExtensions | Active Login",
    "keywords": "Class ServiceCollectionBankIdSignExtensions Inheritance System.Object ServiceCollectionBankIdSignExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.Sign Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public static class ServiceCollectionBankIdSignExtensions Methods | Improve this Doc View Source AddBankIdSign(IServiceCollection, Action<IBankIdSignBuilder>) Add BankID sign provider from Active Login. Declaration public static IServiceCollection AddBankIdSign(this IServiceCollection services, Action<IBankIdSignBuilder> bankId) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Action < IBankIdSignBuilder > bankId BankID configuration. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Examples .AddBankIdSign(builder => { builder .AddSameDevice() .AddOtherDevice(); });"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.BankIdCancelUrlInvalidStateHandler.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.BankIdCancelUrlInvalidStateHandler.html",
    "title": "Class BankIdCancelUrlInvalidStateHandler | Active Login",
    "keywords": "Class BankIdCancelUrlInvalidStateHandler Redirect to the cancel return url if the state is invalid. Inheritance System.Object BankIdCancelUrlInvalidStateHandler Implements IBankIdInvalidStateHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.StateHandling Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdCancelUrlInvalidStateHandler : IBankIdInvalidStateHandler Constructors | Improve this Doc View Source BankIdCancelUrlInvalidStateHandler(IHttpContextAccessor) Declaration public BankIdCancelUrlInvalidStateHandler(IHttpContextAccessor httpContextAccessor) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Methods | Improve this Doc View Source HandleAsync(BankIdInvalidStateContext) Declaration public Task HandleAsync(BankIdInvalidStateContext invalidStateContext) Parameters Type Name Description BankIdInvalidStateContext invalidStateContext Returns Type Description Task Implements IBankIdInvalidStateHandler"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.BankIdInvalidStateContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.BankIdInvalidStateContext.html",
    "title": "Class BankIdInvalidStateContext | Active Login",
    "keywords": "Class BankIdInvalidStateContext Inheritance System.Object BankIdInvalidStateContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.StateHandling Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdInvalidStateContext Constructors | Improve this Doc View Source BankIdInvalidStateContext(String) Declaration public BankIdInvalidStateContext(string cancelReturnUrl) Parameters Type Name Description System.String cancelReturnUrl Properties | Improve this Doc View Source CancelReturnUrl Declaration public string CancelReturnUrl { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.StateHandling | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.StateHandling Classes BankIdCancelUrlInvalidStateHandler Redirect to the cancel return url if the state is invalid. BankIdInvalidStateContext Interfaces IBankIdInvalidStateHandler Interface for handling invalid BankID state. This can happen when the user goes to the BankID login page without having a valid state cookie which usually is set as part of the auth challenge step."
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.IBankIdInvalidStateHandler.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.StateHandling.IBankIdInvalidStateHandler.html",
    "title": "Interface IBankIdInvalidStateHandler | Active Login",
    "keywords": "Interface IBankIdInvalidStateHandler Interface for handling invalid BankID state. This can happen when the user goes to the BankID login page without having a valid state cookie which usually is set as part of the auth challenge step. Namespace : ActiveLogin.Authentication.BankId.AspNetCore.StateHandling Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public interface IBankIdInvalidStateHandler Methods | Improve this Doc View Source HandleAsync(BankIdInvalidStateContext) Declaration Task HandleAsync(BankIdInvalidStateContext invalidStateContext) Parameters Type Name Description BankIdInvalidStateContext invalidStateContext Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice.BankIdSupportedDeviceDetector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice.BankIdSupportedDeviceDetector.html",
    "title": "Class BankIdSupportedDeviceDetector | Active Login",
    "keywords": "Class BankIdSupportedDeviceDetector Inheritance System.Object BankIdSupportedDeviceDetector Implements IBankIdSupportedDeviceDetector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdSupportedDeviceDetector : IBankIdSupportedDeviceDetector Constructors | Improve this Doc View Source BankIdSupportedDeviceDetector(IHttpContextAccessor, IBankIdSupportedDeviceDetectorByUserAgent) Declaration public BankIdSupportedDeviceDetector(IHttpContextAccessor httpContextAccessor, IBankIdSupportedDeviceDetectorByUserAgent bankIdSupportedDeviceDetectorByUserAgent) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor IBankIdSupportedDeviceDetectorByUserAgent bankIdSupportedDeviceDetectorByUserAgent Methods | Improve this Doc View Source Detect() Declaration public BankIdSupportedDevice Detect() Returns Type Description BankIdSupportedDevice Implements IBankIdSupportedDeviceDetector"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.SupportedDevice Classes BankIdSupportedDeviceDetector"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.UserContext.BankIdRemoteIpAddressEndUserIpResolver.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.UserContext.BankIdRemoteIpAddressEndUserIpResolver.html",
    "title": "Class BankIdRemoteIpAddressEndUserIpResolver | Active Login",
    "keywords": "Class BankIdRemoteIpAddressEndUserIpResolver Resolves the end user ip of the user from RemoteIpAddress of the connection. Inheritance System.Object BankIdRemoteIpAddressEndUserIpResolver Implements IBankIdEndUserIpResolver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AspNetCore.UserContext Assembly : ActiveLogin.Authentication.BankId.AspNetCore.dll Syntax public class BankIdRemoteIpAddressEndUserIpResolver : IBankIdEndUserIpResolver Constructors | Improve this Doc View Source BankIdRemoteIpAddressEndUserIpResolver(IHttpContextAccessor) Declaration public BankIdRemoteIpAddressEndUserIpResolver(IHttpContextAccessor httpContextAccessor) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Methods | Improve this Doc View Source GetEndUserIp() Declaration public string GetEndUserIp() Returns Type Description System.String Implements IBankIdEndUserIpResolver"
  },
  "api/ActiveLogin.Authentication.BankId.AspNetCore.UserContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AspNetCore.UserContext.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.UserContext | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AspNetCore.UserContext Classes BankIdRemoteIpAddressEndUserIpResolver Resolves the end user ip of the user from RemoteIpAddress of the connection."
  },
  "api/ActiveLogin.Authentication.BankId.AzureKeyVault.BankIdBuilderAzureKeyVaultExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureKeyVault.BankIdBuilderAzureKeyVaultExtensions.html",
    "title": "Class BankIdBuilderAzureKeyVaultExtensions | Active Login",
    "keywords": "Class BankIdBuilderAzureKeyVaultExtensions Inheritance System.Object BankIdBuilderAzureKeyVaultExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AzureKeyVault Assembly : ActiveLogin.Authentication.BankId.AzureKeyVault.dll Syntax public static class BankIdBuilderAzureKeyVaultExtensions Methods | Improve this Doc View Source AddClientCertificateFromAzureKeyVault(IBankIdBuilder, Action<ClientCertificateFromAzureKeyVaultOptions>) Add client certificate for authenticating against the BankID API from Azure KeyVault. Declaration public static IBankIdBuilder AddClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, Action<ClientCertificateFromAzureKeyVaultOptions> configureOptions) Parameters Type Name Description IBankIdBuilder builder Action < ClientCertificateFromAzureKeyVaultOptions > configureOptions Callback to configure the Key Vault options. Returns Type Description IBankIdBuilder | Improve this Doc View Source AddClientCertificateFromAzureKeyVault(IBankIdBuilder, ClientCertificateFromAzureKeyVaultOptions) Add client certificate for authenticating against the BankID API from Azure Key Vault. Declaration public static IBankIdBuilder AddClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, ClientCertificateFromAzureKeyVaultOptions options) Parameters Type Name Description IBankIdBuilder builder ClientCertificateFromAzureKeyVaultOptions options The Key Vault options. Returns Type Description IBankIdBuilder | Improve this Doc View Source AddClientCertificateFromAzureKeyVault(IBankIdBuilder, IConfigurationSection) Add client certificate for authenticating against the BankID API from Azure Key Vault. Declaration public static IBankIdBuilder AddClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, IConfigurationSection configurationSection) Parameters Type Name Description IBankIdBuilder builder Microsoft.Extensions.Configuration.IConfigurationSection configurationSection Configuration section to bind the Key Vault options from. Returns Type Description IBankIdBuilder | Improve this Doc View Source UseClientCertificateFromAzureKeyVault(IBankIdBuilder, Action<ClientCertificateFromAzureKeyVaultOptions>) Use client certificate for authenticating against the BankID API from Azure KeyVault. Declaration public static IBankIdBuilder UseClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, Action<ClientCertificateFromAzureKeyVaultOptions> configureOptions) Parameters Type Name Description IBankIdBuilder builder Action < ClientCertificateFromAzureKeyVaultOptions > configureOptions Callback to configure the Key Vault options. Returns Type Description IBankIdBuilder | Improve this Doc View Source UseClientCertificateFromAzureKeyVault(IBankIdBuilder, ClientCertificateFromAzureKeyVaultOptions) Use client certificate for authenticating against the BankID API from Azure Key Vault. Declaration public static IBankIdBuilder UseClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, ClientCertificateFromAzureKeyVaultOptions options) Parameters Type Name Description IBankIdBuilder builder ClientCertificateFromAzureKeyVaultOptions options The Key Vault options. Returns Type Description IBankIdBuilder | Improve this Doc View Source UseClientCertificateFromAzureKeyVault(IBankIdBuilder, IConfigurationSection) Use client certificate for authenticating against the BankID API from Azure Key Vault. Declaration public static IBankIdBuilder UseClientCertificateFromAzureKeyVault(this IBankIdBuilder builder, IConfigurationSection configurationSection) Parameters Type Name Description IBankIdBuilder builder Microsoft.Extensions.Configuration.IConfigurationSection configurationSection Configuration section to bind the Key Vault options from. Returns Type Description IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.AzureKeyVault.ClientCertificateFromAzureKeyVaultOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureKeyVault.ClientCertificateFromAzureKeyVaultOptions.html",
    "title": "Class ClientCertificateFromAzureKeyVaultOptions | Active Login",
    "keywords": "Class ClientCertificateFromAzureKeyVaultOptions Inheritance System.Object ClientCertificateFromAzureKeyVaultOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AzureKeyVault Assembly : ActiveLogin.Authentication.BankId.AzureKeyVault.dll Syntax public class ClientCertificateFromAzureKeyVaultOptions Properties | Improve this Doc View Source AzureAdClientId Declaration public string AzureAdClientId { get; set; } Property Value Type Description System.String | Improve this Doc View Source AzureAdClientSecret Declaration public string AzureAdClientSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source AzureAdTenantId Declaration public string AzureAdTenantId { get; set; } Property Value Type Description System.String | Improve this Doc View Source AzureKeyVaultSecretName Declaration public string AzureKeyVaultSecretName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AzureKeyVaultUri Declaration public string AzureKeyVaultUri { get; set; } Property Value Type Description System.String | Improve this Doc View Source AzureManagedIdentityClientId Declaration public string AzureManagedIdentityClientId { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.AzureKeyVault.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureKeyVault.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AzureKeyVault | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AzureKeyVault Classes BankIdBuilderAzureKeyVaultExtensions ClientCertificateFromAzureKeyVaultOptions"
  },
  "api/ActiveLogin.Authentication.BankId.AzureMonitor.ApplicationInsightsBankIdEventListenerOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureMonitor.ApplicationInsightsBankIdEventListenerOptions.html",
    "title": "Class ApplicationInsightsBankIdEventListenerOptions | Active Login",
    "keywords": "Class ApplicationInsightsBankIdEventListenerOptions Inheritance System.Object ApplicationInsightsBankIdEventListenerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AzureMonitor Assembly : ActiveLogin.Authentication.BankId.AzureMonitor.dll Syntax public class ApplicationInsightsBankIdEventListenerOptions Properties | Improve this Doc View Source LogCertificateDates If certificate dates (not before, not after) should be logged. Declaration public bool LogCertificateDates { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogDeviceIpAddress If ip address of the device should be logged. Declaration public bool LogDeviceIpAddress { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogUserDevice If detected user device should be logged (browser, os, os version, type). Declaration public bool LogUserDevice { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogUserNames If names (name, given name and surname) should be logged. Declaration public bool LogUserNames { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogUserPersonalIdentityNumber If personal identity number (personnummer) should be logged. Declaration public bool LogUserPersonalIdentityNumber { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogUserPersonalIdentityNumberHints If anonymized hints such as birthdate and gender should be logged from the personal identity number (personnummer). Declaration public bool LogUserPersonalIdentityNumberHints { get; set; } Property Value Type Description System.Boolean"
  },
  "api/ActiveLogin.Authentication.BankId.AzureMonitor.BankIdApplicationInsightsEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureMonitor.BankIdApplicationInsightsEventListener.html",
    "title": "Class BankIdApplicationInsightsEventListener | Active Login",
    "keywords": "Class BankIdApplicationInsightsEventListener Listen for all events and write them to Application Insights Inheritance System.Object BankIdTypedEventListener BankIdApplicationInsightsEventListener Implements IBankIdEventListener Inherited Members BankIdTypedEventListener.HandleAsync(BankIdEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AzureMonitor Assembly : ActiveLogin.Authentication.BankId.AzureMonitor.dll Syntax public class BankIdApplicationInsightsEventListener : BankIdTypedEventListener, IBankIdEventListener Constructors | Improve this Doc View Source BankIdApplicationInsightsEventListener(TelemetryClient, ApplicationInsightsBankIdEventListenerOptions) Declaration public BankIdApplicationInsightsEventListener(TelemetryClient telemetryClient, ApplicationInsightsBankIdEventListenerOptions options) Parameters Type Name Description TelemetryClient telemetryClient ApplicationInsightsBankIdEventListenerOptions options Methods | Improve this Doc View Source HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) Declaration public override Task HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent e) Parameters Type Name Description BankIdAspNetAuthenticateFailureEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) | Improve this Doc View Source HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) Declaration public override Task HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent e) Parameters Type Name Description BankIdAspNetAuthenticateSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) | Improve this Doc View Source HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) Declaration public override Task HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent e) Parameters Type Name Description BankIdAspNetChallengeSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) | Improve this Doc View Source HandleCancelFailureEvent(BankIdCancelErrorEvent) Declaration public override Task HandleCancelFailureEvent(BankIdCancelErrorEvent e) Parameters Type Name Description BankIdCancelErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCancelFailureEvent(BankIdCancelErrorEvent) | Improve this Doc View Source HandleCancelSuccessEvent(BankIdCancelSuccessEvent) Declaration public override Task HandleCancelSuccessEvent(BankIdCancelSuccessEvent e) Parameters Type Name Description BankIdCancelSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCancelSuccessEvent(BankIdCancelSuccessEvent) | Improve this Doc View Source HandleCollectCompletedEvent(BankIdCollectCompletedEvent) Declaration public override Task HandleCollectCompletedEvent(BankIdCollectCompletedEvent e) Parameters Type Name Description BankIdCollectCompletedEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectCompletedEvent(BankIdCollectCompletedEvent) | Improve this Doc View Source HandleCollectErrorEvent(BankIdCollectErrorEvent) Declaration public override Task HandleCollectErrorEvent(BankIdCollectErrorEvent e) Parameters Type Name Description BankIdCollectErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectErrorEvent(BankIdCollectErrorEvent) | Improve this Doc View Source HandleCollectFailureEvent(BankIdCollectFailureEvent) Declaration public override Task HandleCollectFailureEvent(BankIdCollectFailureEvent e) Parameters Type Name Description BankIdCollectFailureEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectFailureEvent(BankIdCollectFailureEvent) | Improve this Doc View Source HandleCollectPendingEvent(BankIdCollectPendingEvent) Declaration public override Task HandleCollectPendingEvent(BankIdCollectPendingEvent e) Parameters Type Name Description BankIdCollectPendingEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectPendingEvent(BankIdCollectPendingEvent) | Improve this Doc View Source HandleFailureEvent(BankIdInitializeErrorEvent) Declaration public override Task HandleFailureEvent(BankIdInitializeErrorEvent e) Parameters Type Name Description BankIdInitializeErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleFailureEvent(BankIdInitializeErrorEvent) | Improve this Doc View Source HandleSignFailureEvent(BankIdSignFailureEvent) Declaration public override Task HandleSignFailureEvent(BankIdSignFailureEvent e) Parameters Type Name Description BankIdSignFailureEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleSignFailureEvent(BankIdSignFailureEvent) | Improve this Doc View Source HandleSignSuccessEvent(BankIdSignSuccessEvent) Declaration public override Task HandleSignSuccessEvent(BankIdSignSuccessEvent e) Parameters Type Name Description BankIdSignSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleSignSuccessEvent(BankIdSignSuccessEvent) | Improve this Doc View Source HandleSuccessEvent(BankIdInitializeSuccessEvent) Declaration public override Task HandleSuccessEvent(BankIdInitializeSuccessEvent e) Parameters Type Name Description BankIdInitializeSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleSuccessEvent(BankIdInitializeSuccessEvent) Implements IBankIdEventListener"
  },
  "api/ActiveLogin.Authentication.BankId.AzureMonitor.BankIdBuilderAzureMonitorExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureMonitor.BankIdBuilderAzureMonitorExtensions.html",
    "title": "Class BankIdBuilderAzureMonitorExtensions | Active Login",
    "keywords": "Class BankIdBuilderAzureMonitorExtensions Inheritance System.Object BankIdBuilderAzureMonitorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.AzureMonitor Assembly : ActiveLogin.Authentication.BankId.AzureMonitor.dll Syntax public static class BankIdBuilderAzureMonitorExtensions Methods | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder) Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder, Action<ApplicationInsightsBankIdEventListenerOptions>) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder, Action<ApplicationInsightsBankIdEventListenerOptions> configureOptions) Parameters Type Name Description IBankIdBuilder builder Action < ApplicationInsightsBankIdEventListenerOptions > configureOptions Configure logging options Returns Type Description IBankIdBuilder | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder, ApplicationInsightsBankIdEventListenerOptions) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder, ApplicationInsightsBankIdEventListenerOptions options) Parameters Type Name Description IBankIdBuilder builder ApplicationInsightsBankIdEventListenerOptions options Logging options Returns Type Description IBankIdBuilder | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder, String) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder, string connectionString) Parameters Type Name Description IBankIdBuilder builder System.String connectionString Application Insights connection string Returns Type Description IBankIdBuilder | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder, String, Action<ApplicationInsightsBankIdEventListenerOptions>) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder, string connectionString, Action<ApplicationInsightsBankIdEventListenerOptions> configureOptions) Parameters Type Name Description IBankIdBuilder builder System.String connectionString Application Insights connection string Action < ApplicationInsightsBankIdEventListenerOptions > configureOptions Configure logging options Returns Type Description IBankIdBuilder | Improve this Doc View Source AddApplicationInsightsEventListener(IBankIdBuilder, String, ApplicationInsightsBankIdEventListenerOptions) Adds an event listener that will listen for all events and write them to Application Insights Declaration public static IBankIdBuilder AddApplicationInsightsEventListener(this IBankIdBuilder builder, string connectionString, ApplicationInsightsBankIdEventListenerOptions options) Parameters Type Name Description IBankIdBuilder builder System.String connectionString Application Insights connection string ApplicationInsightsBankIdEventListenerOptions options Logging options Returns Type Description IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.AzureMonitor.html": {
    "href": "api/ActiveLogin.Authentication.BankId.AzureMonitor.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.AzureMonitor | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.AzureMonitor Classes ApplicationInsightsBankIdEventListenerOptions BankIdApplicationInsightsEventListener Listen for all events and write them to Application Insights BankIdBuilderAzureMonitorExtensions"
  },
  "api/ActiveLogin.Authentication.BankId.Core.BankIdActiveLoginContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.BankIdActiveLoginContext.html",
    "title": "Class BankIdActiveLoginContext | Active Login",
    "keywords": "Class BankIdActiveLoginContext Inheritance System.Object BankIdActiveLoginContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdActiveLoginContext Properties | Improve this Doc View Source ActiveLoginProductName Declaration public string ActiveLoginProductName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ActiveLoginProductVersion Declaration public string ActiveLoginProductVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdApiEnvironment Declaration public string BankIdApiEnvironment { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdApiVersion Declaration public string BankIdApiVersion { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetAuthenticateFailureEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetAuthenticateFailureEvent.html",
    "title": "Class BankIdAspNetAuthenticateFailureEvent | Active Login",
    "keywords": "Class BankIdAspNetAuthenticateFailureEvent Event for when handling the ASP.NET authentication fails. Inheritance System.Object BankIdEvent BankIdAspNetAuthenticateFailureEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAspNetAuthenticateFailureEvent : BankIdEvent Constructors | Improve this Doc View Source BankIdAspNetAuthenticateFailureEvent(String, BankIdSupportedDevice) Declaration public BankIdAspNetAuthenticateFailureEvent(string errorReason, BankIdSupportedDevice detectedUserDevice) Parameters Type Name Description System.String errorReason BankIdSupportedDevice detectedUserDevice Properties | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source ErrorReason Declaration public string ErrorReason { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetAuthenticateSuccessEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetAuthenticateSuccessEvent.html",
    "title": "Class BankIdAspNetAuthenticateSuccessEvent | Active Login",
    "keywords": "Class BankIdAspNetAuthenticateSuccessEvent Event for creating an ASP.NET authentication ticket. Inheritance System.Object BankIdEvent BankIdAspNetAuthenticateSuccessEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAspNetAuthenticateSuccessEvent : BankIdEvent Constructors | Improve this Doc View Source BankIdAspNetAuthenticateSuccessEvent(PersonalIdentityNumber, BankIdSupportedDevice) Declaration public BankIdAspNetAuthenticateSuccessEvent(PersonalIdentityNumber personalIdentityNumber, BankIdSupportedDevice detectedUserDevice) Parameters Type Name Description PersonalIdentityNumber personalIdentityNumber BankIdSupportedDevice detectedUserDevice Properties | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source PersonalIdentityNumber Declaration public PersonalIdentityNumber PersonalIdentityNumber { get; } Property Value Type Description PersonalIdentityNumber"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetChallengeSuccessEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdAspNetChallengeSuccessEvent.html",
    "title": "Class BankIdAspNetChallengeSuccessEvent | Active Login",
    "keywords": "Class BankIdAspNetChallengeSuccessEvent Event for creating an ASP.NET authentication ticket. Inheritance System.Object BankIdEvent BankIdAspNetChallengeSuccessEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAspNetChallengeSuccessEvent : BankIdEvent Constructors | Improve this Doc View Source BankIdAspNetChallengeSuccessEvent(BankIdSupportedDevice, BankIdFlowOptions) Declaration public BankIdAspNetChallengeSuccessEvent(BankIdSupportedDevice detectedUserDevice, BankIdFlowOptions bankIdOptions) Parameters Type Name Description BankIdSupportedDevice detectedUserDevice BankIdFlowOptions bankIdOptions Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCancelErrorEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCancelErrorEvent.html",
    "title": "Class BankIdCancelErrorEvent | Active Login",
    "keywords": "Class BankIdCancelErrorEvent Event for canceling authentication order failed. Inheritance System.Object BankIdEvent BankIdCancelErrorEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCancelErrorEvent : BankIdEvent Properties | Improve this Doc View Source BankIdApiException Declaration public BankIdApiException BankIdApiException { get; } Property Value Type Description BankIdApiException | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCancelSuccessEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCancelSuccessEvent.html",
    "title": "Class BankIdCancelSuccessEvent | Active Login",
    "keywords": "Class BankIdCancelSuccessEvent Event for successfully canceling authentication order. Inheritance System.Object BankIdEvent BankIdCancelSuccessEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCancelSuccessEvent : BankIdEvent Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectCompletedEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectCompletedEvent.html",
    "title": "Class BankIdCollectCompletedEvent | Active Login",
    "keywords": "Class BankIdCollectCompletedEvent Event for collect complete authentication order. Inheritance System.Object BankIdEvent BankIdCollectCompletedEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCollectCompletedEvent : BankIdEvent Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source CompletionData Declaration public CompletionData CompletionData { get; } Property Value Type Description CompletionData | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectErrorEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectErrorEvent.html",
    "title": "Class BankIdCollectErrorEvent | Active Login",
    "keywords": "Class BankIdCollectErrorEvent Event for collect error. Inheritance System.Object BankIdEvent BankIdCollectErrorEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCollectErrorEvent : BankIdEvent Properties | Improve this Doc View Source BankIdApiException Declaration public BankIdApiException BankIdApiException { get; } Property Value Type Description BankIdApiException | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectFailureEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectFailureEvent.html",
    "title": "Class BankIdCollectFailureEvent | Active Login",
    "keywords": "Class BankIdCollectFailureEvent Event for collect failed authentication order. Inheritance System.Object BankIdEvent BankIdCollectFailureEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCollectFailureEvent : BankIdEvent Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source HintCode Declaration public CollectHintCode HintCode { get; } Property Value Type Description CollectHintCode | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectPendingEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdCollectPendingEvent.html",
    "title": "Class BankIdCollectPendingEvent | Active Login",
    "keywords": "Class BankIdCollectPendingEvent Event for collect pending authentication order. Inheritance System.Object BankIdEvent BankIdCollectPendingEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdCollectPendingEvent : BankIdEvent Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source HintCode Declaration public CollectHintCode HintCode { get; } Property Value Type Description CollectHintCode | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdInitializeErrorEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdInitializeErrorEvent.html",
    "title": "Class BankIdInitializeErrorEvent | Active Login",
    "keywords": "Class BankIdInitializeErrorEvent Event for failed initiation of auth and sign orders. Inheritance System.Object BankIdEvent BankIdInitializeErrorEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdInitializeErrorEvent : BankIdEvent Properties | Improve this Doc View Source BankIdApiException Declaration public BankIdApiException BankIdApiException { get; } Property Value Type Description BankIdApiException | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source PersonalIdentityNumber Declaration public PersonalIdentityNumber? PersonalIdentityNumber { get; } Property Value Type Description System.Nullable < PersonalIdentityNumber >"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdInitializeSuccessEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdInitializeSuccessEvent.html",
    "title": "Class BankIdInitializeSuccessEvent | Active Login",
    "keywords": "Class BankIdInitializeSuccessEvent Event for successful initiation of authentication order. Inheritance System.Object BankIdEvent BankIdInitializeSuccessEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdInitializeSuccessEvent : BankIdEvent Properties | Improve this Doc View Source BankIdOptions Declaration public BankIdFlowOptions BankIdOptions { get; } Property Value Type Description BankIdFlowOptions | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source OrderRef Declaration public string OrderRef { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber Declaration public PersonalIdentityNumber? PersonalIdentityNumber { get; } Property Value Type Description System.Nullable < PersonalIdentityNumber >"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdSignFailureEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdSignFailureEvent.html",
    "title": "Class BankIdSignFailureEvent | Active Login",
    "keywords": "Class BankIdSignFailureEvent Event for when handling the sign fails. Inheritance System.Object BankIdEvent BankIdSignFailureEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdSignFailureEvent : BankIdEvent Constructors | Improve this Doc View Source BankIdSignFailureEvent(String, BankIdSupportedDevice) Declaration public BankIdSignFailureEvent(string errorReason, BankIdSupportedDevice detectedUserDevice) Parameters Type Name Description System.String errorReason BankIdSupportedDevice detectedUserDevice Properties | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source ErrorReason Declaration public string ErrorReason { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdSignSuccessEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.BankIdSignSuccessEvent.html",
    "title": "Class BankIdSignSuccessEvent | Active Login",
    "keywords": "Class BankIdSignSuccessEvent Event for creating an ASP.NET authentication ticket. Inheritance System.Object BankIdEvent BankIdSignSuccessEvent Inherited Members BankIdEvent.EventTypeId BankIdEvent.EventTypeName BankIdEvent.EventSeverity BankIdEvent.ActiveLoginProductName BankIdEvent.ActiveLoginProductVersion BankIdEvent.BankIdApiEnvironment BankIdEvent.BankIdApiVersion System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdSignSuccessEvent : BankIdEvent Constructors | Improve this Doc View Source BankIdSignSuccessEvent(PersonalIdentityNumber, BankIdSupportedDevice) Declaration public BankIdSignSuccessEvent(PersonalIdentityNumber personalIdentityNumber, BankIdSupportedDevice detectedUserDevice) Parameters Type Name Description PersonalIdentityNumber personalIdentityNumber BankIdSupportedDevice detectedUserDevice Properties | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source PersonalIdentityNumber Declaration public PersonalIdentityNumber PersonalIdentityNumber { get; } Property Value Type Description PersonalIdentityNumber"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Events | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Events Classes BankIdAspNetAuthenticateFailureEvent Event for when handling the ASP.NET authentication fails. BankIdAspNetAuthenticateSuccessEvent Event for creating an ASP.NET authentication ticket. BankIdAspNetChallengeSuccessEvent Event for creating an ASP.NET authentication ticket. BankIdCancelErrorEvent Event for canceling authentication order failed. BankIdCancelSuccessEvent Event for successfully canceling authentication order. BankIdCollectCompletedEvent Event for collect complete authentication order. BankIdCollectErrorEvent Event for collect error. BankIdCollectFailureEvent Event for collect failed authentication order. BankIdCollectPendingEvent Event for collect pending authentication order. BankIdInitializeErrorEvent Event for failed initiation of auth and sign orders. BankIdInitializeSuccessEvent Event for successful initiation of authentication order. BankIdSignFailureEvent Event for when handling the sign fails. BankIdSignSuccessEvent Event for creating an ASP.NET authentication ticket."
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdDebugEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdDebugEventListener.html",
    "title": "Class BankIdDebugEventListener | Active Login",
    "keywords": "Class BankIdDebugEventListener Inheritance System.Object BankIdDebugEventListener Implements IBankIdEventListener Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdDebugEventListener : IBankIdEventListener Constructors | Improve this Doc View Source BankIdDebugEventListener(ILogger<BankIdDebugEventListener>) Declaration public BankIdDebugEventListener(ILogger<BankIdDebugEventListener> logger) Parameters Type Name Description ILogger < BankIdDebugEventListener > logger Methods | Improve this Doc View Source HandleAsync(BankIdEvent) Declaration public Task HandleAsync(BankIdEvent bankIdEvent) Parameters Type Name Description BankIdEvent bankIdEvent Returns Type Description Task Implements IBankIdEventListener"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdEvent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdEvent.html",
    "title": "Class BankIdEvent | Active Login",
    "keywords": "Class BankIdEvent Inheritance System.Object BankIdEvent BankIdAspNetAuthenticateFailureEvent BankIdAspNetAuthenticateSuccessEvent BankIdAspNetChallengeSuccessEvent BankIdCancelErrorEvent BankIdCancelSuccessEvent BankIdCollectCompletedEvent BankIdCollectErrorEvent BankIdCollectFailureEvent BankIdCollectPendingEvent BankIdInitializeErrorEvent BankIdInitializeSuccessEvent BankIdSignFailureEvent BankIdSignSuccessEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public abstract class BankIdEvent Constructors | Improve this Doc View Source BankIdEvent(Int32, String, BankIdEventSeverity) Declaration protected BankIdEvent(int eventTypeId, string eventTypeName, BankIdEventSeverity eventSeverity) Parameters Type Name Description System.Int32 eventTypeId System.String eventTypeName BankIdEventSeverity eventSeverity Properties | Improve this Doc View Source ActiveLoginProductName Product name of the product/component ActiveLogin.BankId. Declaration public string ActiveLoginProductName { get; } Property Value Type Description System.String | Improve this Doc View Source ActiveLoginProductVersion Product version of the product/component ActiveLogin.BankId. Declaration public string ActiveLoginProductVersion { get; } Property Value Type Description System.String | Improve this Doc View Source BankIdApiEnvironment BankId environment targeted. Declaration public string BankIdApiEnvironment { get; } Property Value Type Description System.String | Improve this Doc View Source BankIdApiVersion BankId API version targeted. Declaration public string BankIdApiVersion { get; } Property Value Type Description System.String | Improve this Doc View Source EventSeverity Event severity. Declaration public BankIdEventSeverity EventSeverity { get; } Property Value Type Description BankIdEventSeverity | Improve this Doc View Source EventTypeId Unique id for this event type. Declaration public int EventTypeId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source EventTypeName Unique name for this event type. Declaration public string EventTypeName { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdEventSeverity.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdEventSeverity.html",
    "title": "Enum BankIdEventSeverity | Active Login",
    "keywords": "Enum BankIdEventSeverity BankId event severity. Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public enum BankIdEventSeverity Fields Name Description Error Error event. Failure Failure event. Information Information event. Success Success event."
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdLoggerEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdLoggerEventListener.html",
    "title": "Class BankIdLoggerEventListener | Active Login",
    "keywords": "Class BankIdLoggerEventListener Logs event to Inheritance System.Object BankIdTypedEventListener BankIdLoggerEventListener Implements IBankIdEventListener Inherited Members BankIdTypedEventListener.HandleAsync(BankIdEvent) BankIdTypedEventListener.HandleSignFailureEvent(BankIdSignFailureEvent) BankIdTypedEventListener.HandleSignSuccessEvent(BankIdSignSuccessEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdLoggerEventListener : BankIdTypedEventListener, IBankIdEventListener Constructors | Improve this Doc View Source BankIdLoggerEventListener(ILogger<BankIdLoggerEventListener>) Declaration public BankIdLoggerEventListener(ILogger<BankIdLoggerEventListener> logger) Parameters Type Name Description ILogger < BankIdLoggerEventListener > logger Methods | Improve this Doc View Source HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) Declaration public override Task HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent e) Parameters Type Name Description BankIdAspNetAuthenticateFailureEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) | Improve this Doc View Source HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) Declaration public override Task HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent e) Parameters Type Name Description BankIdAspNetAuthenticateSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) | Improve this Doc View Source HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) Declaration public override Task HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent e) Parameters Type Name Description BankIdAspNetChallengeSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) | Improve this Doc View Source HandleCancelFailureEvent(BankIdCancelErrorEvent) Declaration public override Task HandleCancelFailureEvent(BankIdCancelErrorEvent e) Parameters Type Name Description BankIdCancelErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCancelFailureEvent(BankIdCancelErrorEvent) | Improve this Doc View Source HandleCancelSuccessEvent(BankIdCancelSuccessEvent) Declaration public override Task HandleCancelSuccessEvent(BankIdCancelSuccessEvent e) Parameters Type Name Description BankIdCancelSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCancelSuccessEvent(BankIdCancelSuccessEvent) | Improve this Doc View Source HandleCollectCompletedEvent(BankIdCollectCompletedEvent) Declaration public override Task HandleCollectCompletedEvent(BankIdCollectCompletedEvent e) Parameters Type Name Description BankIdCollectCompletedEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectCompletedEvent(BankIdCollectCompletedEvent) | Improve this Doc View Source HandleCollectErrorEvent(BankIdCollectErrorEvent) Declaration public override Task HandleCollectErrorEvent(BankIdCollectErrorEvent e) Parameters Type Name Description BankIdCollectErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectErrorEvent(BankIdCollectErrorEvent) | Improve this Doc View Source HandleCollectFailureEvent(BankIdCollectFailureEvent) Declaration public override Task HandleCollectFailureEvent(BankIdCollectFailureEvent e) Parameters Type Name Description BankIdCollectFailureEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectFailureEvent(BankIdCollectFailureEvent) | Improve this Doc View Source HandleCollectPendingEvent(BankIdCollectPendingEvent) Declaration public override Task HandleCollectPendingEvent(BankIdCollectPendingEvent e) Parameters Type Name Description BankIdCollectPendingEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectPendingEvent(BankIdCollectPendingEvent) | Improve this Doc View Source HandleFailureEvent(BankIdInitializeErrorEvent) Declaration public override Task HandleFailureEvent(BankIdInitializeErrorEvent e) Parameters Type Name Description BankIdInitializeErrorEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleFailureEvent(BankIdInitializeErrorEvent) | Improve this Doc View Source HandleSuccessEvent(BankIdInitializeSuccessEvent) Declaration public override Task HandleSuccessEvent(BankIdInitializeSuccessEvent e) Parameters Type Name Description BankIdInitializeSuccessEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleSuccessEvent(BankIdInitializeSuccessEvent) Implements IBankIdEventListener"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdResultStoreEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdResultStoreEventListener.html",
    "title": "Class BankIdResultStoreEventListener | Active Login",
    "keywords": "Class BankIdResultStoreEventListener To comply with BankID Technical requirement RFT5 you need to store the data in completion data. Inheritance System.Object BankIdTypedEventListener BankIdResultStoreEventListener Implements IBankIdEventListener Inherited Members BankIdTypedEventListener.HandleAsync(BankIdEvent) BankIdTypedEventListener.HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) BankIdTypedEventListener.HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) BankIdTypedEventListener.HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) BankIdTypedEventListener.HandleSuccessEvent(BankIdInitializeSuccessEvent) BankIdTypedEventListener.HandleFailureEvent(BankIdInitializeErrorEvent) BankIdTypedEventListener.HandleCancelSuccessEvent(BankIdCancelSuccessEvent) BankIdTypedEventListener.HandleCancelFailureEvent(BankIdCancelErrorEvent) BankIdTypedEventListener.HandleCollectPendingEvent(BankIdCollectPendingEvent) BankIdTypedEventListener.HandleCollectFailureEvent(BankIdCollectFailureEvent) BankIdTypedEventListener.HandleCollectErrorEvent(BankIdCollectErrorEvent) BankIdTypedEventListener.HandleSignFailureEvent(BankIdSignFailureEvent) BankIdTypedEventListener.HandleSignSuccessEvent(BankIdSignSuccessEvent) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdResultStoreEventListener : BankIdTypedEventListener, IBankIdEventListener Constructors | Improve this Doc View Source BankIdResultStoreEventListener(IEnumerable<IBankIdResultStore>) Declaration public BankIdResultStoreEventListener(IEnumerable<IBankIdResultStore> bankIdResultStores) Parameters Type Name Description IEnumerable < IBankIdResultStore > bankIdResultStores Methods | Improve this Doc View Source HandleCollectCompletedEvent(BankIdCollectCompletedEvent) Declaration public override async Task HandleCollectCompletedEvent(BankIdCollectCompletedEvent e) Parameters Type Name Description BankIdCollectCompletedEvent e Returns Type Description Task Overrides BankIdTypedEventListener.HandleCollectCompletedEvent(BankIdCollectCompletedEvent) Implements IBankIdEventListener"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdTypedEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.BankIdTypedEventListener.html",
    "title": "Class BankIdTypedEventListener | Active Login",
    "keywords": "Class BankIdTypedEventListener Base class that allows you to override specific known events. Inheritance System.Object BankIdTypedEventListener BankIdApplicationInsightsEventListener BankIdLoggerEventListener BankIdResultStoreEventListener Implements IBankIdEventListener Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public abstract class BankIdTypedEventListener : IBankIdEventListener Methods | Improve this Doc View Source HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent) Declaration public virtual Task HandleAspNetAuthenticateErrorEvent(BankIdAspNetAuthenticateFailureEvent e) Parameters Type Name Description BankIdAspNetAuthenticateFailureEvent e Returns Type Description Task | Improve this Doc View Source HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent) Declaration public virtual Task HandleAspNetAuthenticateSuccessEvent(BankIdAspNetAuthenticateSuccessEvent e) Parameters Type Name Description BankIdAspNetAuthenticateSuccessEvent e Returns Type Description Task | Improve this Doc View Source HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent) Declaration public virtual Task HandleAspNetChallengeSuccessEvent(BankIdAspNetChallengeSuccessEvent e) Parameters Type Name Description BankIdAspNetChallengeSuccessEvent e Returns Type Description Task | Improve this Doc View Source HandleAsync(BankIdEvent) Declaration public Task HandleAsync(BankIdEvent bankIdEvent) Parameters Type Name Description BankIdEvent bankIdEvent Returns Type Description Task | Improve this Doc View Source HandleCancelFailureEvent(BankIdCancelErrorEvent) Declaration public virtual Task HandleCancelFailureEvent(BankIdCancelErrorEvent e) Parameters Type Name Description BankIdCancelErrorEvent e Returns Type Description Task | Improve this Doc View Source HandleCancelSuccessEvent(BankIdCancelSuccessEvent) Declaration public virtual Task HandleCancelSuccessEvent(BankIdCancelSuccessEvent e) Parameters Type Name Description BankIdCancelSuccessEvent e Returns Type Description Task | Improve this Doc View Source HandleCollectCompletedEvent(BankIdCollectCompletedEvent) Declaration public virtual Task HandleCollectCompletedEvent(BankIdCollectCompletedEvent e) Parameters Type Name Description BankIdCollectCompletedEvent e Returns Type Description Task | Improve this Doc View Source HandleCollectErrorEvent(BankIdCollectErrorEvent) Declaration public virtual Task HandleCollectErrorEvent(BankIdCollectErrorEvent e) Parameters Type Name Description BankIdCollectErrorEvent e Returns Type Description Task | Improve this Doc View Source HandleCollectFailureEvent(BankIdCollectFailureEvent) Declaration public virtual Task HandleCollectFailureEvent(BankIdCollectFailureEvent e) Parameters Type Name Description BankIdCollectFailureEvent e Returns Type Description Task | Improve this Doc View Source HandleCollectPendingEvent(BankIdCollectPendingEvent) Declaration public virtual Task HandleCollectPendingEvent(BankIdCollectPendingEvent e) Parameters Type Name Description BankIdCollectPendingEvent e Returns Type Description Task | Improve this Doc View Source HandleFailureEvent(BankIdInitializeErrorEvent) Declaration public virtual Task HandleFailureEvent(BankIdInitializeErrorEvent e) Parameters Type Name Description BankIdInitializeErrorEvent e Returns Type Description Task | Improve this Doc View Source HandleSignFailureEvent(BankIdSignFailureEvent) Declaration public virtual Task HandleSignFailureEvent(BankIdSignFailureEvent e) Parameters Type Name Description BankIdSignFailureEvent e Returns Type Description Task | Improve this Doc View Source HandleSignSuccessEvent(BankIdSignSuccessEvent) Declaration public virtual Task HandleSignSuccessEvent(BankIdSignSuccessEvent e) Parameters Type Name Description BankIdSignSuccessEvent e Returns Type Description Task | Improve this Doc View Source HandleSuccessEvent(BankIdInitializeSuccessEvent) Declaration public virtual Task HandleSuccessEvent(BankIdInitializeSuccessEvent e) Parameters Type Name Description BankIdInitializeSuccessEvent e Returns Type Description Task Implements IBankIdEventListener"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Events.Infrastructure | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Classes BankIdDebugEventListener BankIdEvent BankIdLoggerEventListener Logs event to BankIdResultStoreEventListener To comply with BankID Technical requirement RFT5 you need to store the data in completion data. BankIdTypedEventListener Base class that allows you to override specific known events. Interfaces IBankIdEventListener IBankIdEventTrigger Trigger an event. Enums BankIdEventSeverity BankId event severity."
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.IBankIdEventListener.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.IBankIdEventListener.html",
    "title": "Interface IBankIdEventListener | Active Login",
    "keywords": "Interface IBankIdEventListener Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdEventListener Methods | Improve this Doc View Source HandleAsync(BankIdEvent) Declaration Task HandleAsync(BankIdEvent bankIdEvent) Parameters Type Name Description BankIdEvent bankIdEvent Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.IBankIdEventTrigger.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Events.Infrastructure.IBankIdEventTrigger.html",
    "title": "Interface IBankIdEventTrigger | Active Login",
    "keywords": "Interface IBankIdEventTrigger Trigger an event. Namespace : ActiveLogin.Authentication.BankId.Core.Events.Infrastructure Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdEventTrigger Methods | Improve this Doc View Source TriggerAsync(BankIdEvent) Declaration Task TriggerAsync(BankIdEvent bankIdEvent) Parameters Type Name Description BankIdEvent bankIdEvent Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResult.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResult.html",
    "title": "Class BankIdFlowCollectResult | Active Login",
    "keywords": "Class BankIdFlowCollectResult Inheritance System.Object BankIdFlowCollectResult BankIdFlowCollectResultComplete BankIdFlowCollectResultFailure BankIdFlowCollectResultPending BankIdFlowCollectResultRetry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public abstract class BankIdFlowCollectResult"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultComplete.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultComplete.html",
    "title": "Class BankIdFlowCollectResultComplete | Active Login",
    "keywords": "Class BankIdFlowCollectResultComplete Inheritance System.Object BankIdFlowCollectResult BankIdFlowCollectResultComplete Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowCollectResultComplete : BankIdFlowCollectResult Constructors | Improve this Doc View Source BankIdFlowCollectResultComplete(CompletionData) Declaration public BankIdFlowCollectResultComplete(CompletionData completionData) Parameters Type Name Description CompletionData completionData Properties | Improve this Doc View Source CompletionData Declaration public CompletionData CompletionData { get; set; } Property Value Type Description CompletionData"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultFailure.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultFailure.html",
    "title": "Class BankIdFlowCollectResultFailure | Active Login",
    "keywords": "Class BankIdFlowCollectResultFailure Inheritance System.Object BankIdFlowCollectResult BankIdFlowCollectResultFailure Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowCollectResultFailure : BankIdFlowCollectResult Constructors | Improve this Doc View Source BankIdFlowCollectResultFailure(String) Declaration public BankIdFlowCollectResultFailure(string statusMessage) Parameters Type Name Description System.String statusMessage Properties | Improve this Doc View Source StatusMessage Declaration public string StatusMessage { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultPending.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultPending.html",
    "title": "Class BankIdFlowCollectResultPending | Active Login",
    "keywords": "Class BankIdFlowCollectResultPending Inheritance System.Object BankIdFlowCollectResult BankIdFlowCollectResultPending Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowCollectResultPending : BankIdFlowCollectResult Constructors | Improve this Doc View Source BankIdFlowCollectResultPending(String) Declaration public BankIdFlowCollectResultPending(string statusMessage) Parameters Type Name Description System.String statusMessage Properties | Improve this Doc View Source StatusMessage Declaration public string StatusMessage { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultRetry.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowCollectResultRetry.html",
    "title": "Class BankIdFlowCollectResultRetry | Active Login",
    "keywords": "Class BankIdFlowCollectResultRetry Inheritance System.Object BankIdFlowCollectResult BankIdFlowCollectResultRetry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowCollectResultRetry : BankIdFlowCollectResult Constructors | Improve this Doc View Source BankIdFlowCollectResultRetry(String) Declaration public BankIdFlowCollectResultRetry(string statusMessage) Parameters Type Name Description System.String statusMessage Properties | Improve this Doc View Source StatusMessage Declaration public string StatusMessage { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchType.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchType.html",
    "title": "Class BankIdFlowInitializeLaunchType | Active Login",
    "keywords": "Class BankIdFlowInitializeLaunchType Inheritance System.Object BankIdFlowInitializeLaunchType BankIdFlowInitializeLaunchTypeOtherDevice BankIdFlowInitializeLaunchTypeSameDevice Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public abstract class BankIdFlowInitializeLaunchType"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchTypeOtherDevice.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchTypeOtherDevice.html",
    "title": "Class BankIdFlowInitializeLaunchTypeOtherDevice | Active Login",
    "keywords": "Class BankIdFlowInitializeLaunchTypeOtherDevice Inheritance System.Object BankIdFlowInitializeLaunchType BankIdFlowInitializeLaunchTypeOtherDevice Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowInitializeLaunchTypeOtherDevice : BankIdFlowInitializeLaunchType Constructors | Improve this Doc View Source BankIdFlowInitializeLaunchTypeOtherDevice(BankIdQrStartState, String) Declaration public BankIdFlowInitializeLaunchTypeOtherDevice(BankIdQrStartState qrStartState, string qrCodeBase64Encoded) Parameters Type Name Description BankIdQrStartState qrStartState System.String qrCodeBase64Encoded Properties | Improve this Doc View Source QrCodeBase64Encoded Declaration public string QrCodeBase64Encoded { get; set; } Property Value Type Description System.String | Improve this Doc View Source QrStartState Declaration public BankIdQrStartState QrStartState { get; set; } Property Value Type Description BankIdQrStartState"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchTypeSameDevice.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeLaunchTypeSameDevice.html",
    "title": "Class BankIdFlowInitializeLaunchTypeSameDevice | Active Login",
    "keywords": "Class BankIdFlowInitializeLaunchTypeSameDevice Inheritance System.Object BankIdFlowInitializeLaunchType BankIdFlowInitializeLaunchTypeSameDevice Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowInitializeLaunchTypeSameDevice : BankIdFlowInitializeLaunchType Constructors | Improve this Doc View Source BankIdFlowInitializeLaunchTypeSameDevice(BankIdLaunchInfo) Declaration public BankIdFlowInitializeLaunchTypeSameDevice(BankIdLaunchInfo bankIdLaunchInfo) Parameters Type Name Description BankIdLaunchInfo bankIdLaunchInfo Properties | Improve this Doc View Source BankIdLaunchInfo Declaration public BankIdLaunchInfo BankIdLaunchInfo { get; set; } Property Value Type Description BankIdLaunchInfo"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeResult.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowInitializeResult.html",
    "title": "Class BankIdFlowInitializeResult | Active Login",
    "keywords": "Class BankIdFlowInitializeResult Inheritance System.Object BankIdFlowInitializeResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowInitializeResult Constructors | Improve this Doc View Source BankIdFlowInitializeResult(Response, BankIdSupportedDevice, BankIdFlowInitializeLaunchType) Declaration public BankIdFlowInitializeResult(Response bankIdResponse, BankIdSupportedDevice detectedUserDevice, BankIdFlowInitializeLaunchType launchType) Parameters Type Name Description Response bankIdResponse BankIdSupportedDevice detectedUserDevice BankIdFlowInitializeLaunchType launchType Properties | Improve this Doc View Source BankIdResponse Declaration public Response BankIdResponse { get; set; } Property Value Type Description Response | Improve this Doc View Source DetectedUserDevice Declaration public BankIdSupportedDevice DetectedUserDevice { get; set; } Property Value Type Description BankIdSupportedDevice | Improve this Doc View Source LaunchType Declaration public BankIdFlowInitializeLaunchType LaunchType { get; set; } Property Value Type Description BankIdFlowInitializeLaunchType"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowService.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowService.html",
    "title": "Class BankIdFlowService | Active Login",
    "keywords": "Class BankIdFlowService Inheritance System.Object BankIdFlowService Implements IBankIdFlowService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowService : IBankIdFlowService Constructors | Improve this Doc View Source BankIdFlowService(IBankIdApiClient, IBankIdFlowSystemClock, IBankIdEventTrigger, IBankIdUserMessage, IBankIdUserMessageLocalizer, IBankIdSupportedDeviceDetector, IBankIdEndUserIpResolver, IBankIdAuthRequestUserDataResolver, IBankIdQrCodeGenerator, IBankIdLauncher) Declaration public BankIdFlowService(IBankIdApiClient bankIdApiClient, IBankIdFlowSystemClock bankIdFlowSystemClock, IBankIdEventTrigger bankIdEventTrigger, IBankIdUserMessage bankIdUserMessage, IBankIdUserMessageLocalizer bankIdUserMessageLocalizer, IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector, IBankIdEndUserIpResolver bankIdEndUserIpResolver, IBankIdAuthRequestUserDataResolver bankIdAuthUserDataResolver, IBankIdQrCodeGenerator bankIdQrCodeGenerator, IBankIdLauncher bankIdLauncher) Parameters Type Name Description IBankIdApiClient bankIdApiClient IBankIdFlowSystemClock bankIdFlowSystemClock IBankIdEventTrigger bankIdEventTrigger IBankIdUserMessage bankIdUserMessage IBankIdUserMessageLocalizer bankIdUserMessageLocalizer IBankIdSupportedDeviceDetector bankIdSupportedDeviceDetector IBankIdEndUserIpResolver bankIdEndUserIpResolver IBankIdAuthRequestUserDataResolver bankIdAuthUserDataResolver IBankIdQrCodeGenerator bankIdQrCodeGenerator IBankIdLauncher bankIdLauncher Methods | Improve this Doc View Source Cancel(String, BankIdFlowOptions) Declaration public async Task Cancel(string orderRef, BankIdFlowOptions flowOptions) Parameters Type Name Description System.String orderRef BankIdFlowOptions flowOptions Returns Type Description Task | Improve this Doc View Source Collect(String, Int32, BankIdFlowOptions) Declaration public async Task<BankIdFlowCollectResult> Collect(string orderRef, int autoStartAttempts, BankIdFlowOptions flowOptions) Parameters Type Name Description System.String orderRef System.Int32 autoStartAttempts BankIdFlowOptions flowOptions Returns Type Description Task < BankIdFlowCollectResult > | Improve this Doc View Source GetQrCodeAsBase64(BankIdQrStartState) Declaration public string GetQrCodeAsBase64(BankIdQrStartState qrStartState) Parameters Type Name Description BankIdQrStartState qrStartState Returns Type Description System.String | Improve this Doc View Source InitializeAuth(BankIdFlowOptions, String) Declaration public async Task<BankIdFlowInitializeResult> InitializeAuth(BankIdFlowOptions flowOptions, string returnRedirectUrl) Parameters Type Name Description BankIdFlowOptions flowOptions System.String returnRedirectUrl Returns Type Description Task < BankIdFlowInitializeResult > | Improve this Doc View Source InitializeSign(BankIdFlowOptions, BankIdSignData, String) Declaration public async Task<BankIdFlowInitializeResult> InitializeSign(BankIdFlowOptions flowOptions, BankIdSignData bankIdSignData, string returnRedirectUrl) Parameters Type Name Description BankIdFlowOptions flowOptions BankIdSignData bankIdSignData System.String returnRedirectUrl Returns Type Description Task < BankIdFlowInitializeResult > Implements IBankIdFlowService"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowSystemClock.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.BankIdFlowSystemClock.html",
    "title": "Class BankIdFlowSystemClock | Active Login",
    "keywords": "Class BankIdFlowSystemClock Inheritance System.Object BankIdFlowSystemClock Implements IBankIdFlowSystemClock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowSystemClock : IBankIdFlowSystemClock Properties | Improve this Doc View Source UtcNow Declaration public DateTimeOffset UtcNow { get; } Property Value Type Description DateTimeOffset Implements IBankIdFlowSystemClock"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Flow | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Flow Classes BankIdFlowCollectResult BankIdFlowCollectResultComplete BankIdFlowCollectResultFailure BankIdFlowCollectResultPending BankIdFlowCollectResultRetry BankIdFlowInitializeLaunchType BankIdFlowInitializeLaunchTypeOtherDevice BankIdFlowInitializeLaunchTypeSameDevice BankIdFlowInitializeResult BankIdFlowService BankIdFlowSystemClock Interfaces IBankIdFlowService IBankIdFlowSystemClock"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.IBankIdFlowService.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.IBankIdFlowService.html",
    "title": "Interface IBankIdFlowService | Active Login",
    "keywords": "Interface IBankIdFlowService Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdFlowService Methods | Improve this Doc View Source Cancel(String, BankIdFlowOptions) Declaration Task Cancel(string orderRef, BankIdFlowOptions flowOptions) Parameters Type Name Description System.String orderRef BankIdFlowOptions flowOptions Returns Type Description Task | Improve this Doc View Source Collect(String, Int32, BankIdFlowOptions) Declaration Task<BankIdFlowCollectResult> Collect(string orderRef, int autoStartAttempts, BankIdFlowOptions flowOptions) Parameters Type Name Description System.String orderRef System.Int32 autoStartAttempts BankIdFlowOptions flowOptions Returns Type Description Task < BankIdFlowCollectResult > | Improve this Doc View Source GetQrCodeAsBase64(BankIdQrStartState) Declaration string GetQrCodeAsBase64(BankIdQrStartState qrStartState) Parameters Type Name Description BankIdQrStartState qrStartState Returns Type Description System.String | Improve this Doc View Source InitializeAuth(BankIdFlowOptions, String) Declaration Task<BankIdFlowInitializeResult> InitializeAuth(BankIdFlowOptions flowOptions, string returnRedirectUrl) Parameters Type Name Description BankIdFlowOptions flowOptions System.String returnRedirectUrl Returns Type Description Task < BankIdFlowInitializeResult > | Improve this Doc View Source InitializeSign(BankIdFlowOptions, BankIdSignData, String) Declaration Task<BankIdFlowInitializeResult> InitializeSign(BankIdFlowOptions flowOptions, BankIdSignData bankIdSignData, string returnRedirectUrl) Parameters Type Name Description BankIdFlowOptions flowOptions BankIdSignData bankIdSignData System.String returnRedirectUrl Returns Type Description Task < BankIdFlowInitializeResult >"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Flow.IBankIdFlowSystemClock.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Flow.IBankIdFlowSystemClock.html",
    "title": "Interface IBankIdFlowSystemClock | Active Login",
    "keywords": "Interface IBankIdFlowSystemClock Namespace : ActiveLogin.Authentication.BankId.Core.Flow Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdFlowSystemClock Properties | Improve this Doc View Source UtcNow Declaration DateTimeOffset UtcNow { get; } Property Value Type Description DateTimeOffset"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Helpers.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Helpers.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Helpers | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Helpers Classes QueryStringGenerator"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Helpers.QueryStringGenerator.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Helpers.QueryStringGenerator.html",
    "title": "Class QueryStringGenerator | Active Login",
    "keywords": "Class QueryStringGenerator Inheritance System.Object QueryStringGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Helpers Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public static class QueryStringGenerator Methods | Improve this Doc View Source ToQueryString(IEnumerable<KeyValuePair<String, String>>) Declaration public static string ToQueryString(IEnumerable<KeyValuePair<string, string>> parameters) Parameters Type Name Description IEnumerable < KeyValuePair < System.String , System.String >> parameters Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core Classes BankIdActiveLoginContext IBankIdBuilderExtensions ServiceCollectionBankIdExtensions Interfaces IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.Core.IBankIdBuilder.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.IBankIdBuilder.html",
    "title": "Interface IBankIdBuilder | Active Login",
    "keywords": "Interface IBankIdBuilder Namespace : ActiveLogin.Authentication.BankId.Core Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdBuilder Properties | Improve this Doc View Source Services Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Methods | Improve this Doc View Source ConfigureHttpClient(Action<IServiceProvider, HttpClient>) Configure the used for making calls to the BankID API. Declaration void ConfigureHttpClient(Action<IServiceProvider, HttpClient> configureHttpClient) Parameters Type Name Description Action < IServiceProvider , HttpClient > configureHttpClient | Improve this Doc View Source ConfigureHttpClientHandler(Action<IServiceProvider, SocketsHttpHandler>) Configure the used by for making calls to the BankID API. Declaration void ConfigureHttpClientHandler(Action<IServiceProvider, SocketsHttpHandler> configureHttpClientHandler) Parameters Type Name Description Action < IServiceProvider , SocketsHttpHandler > configureHttpClientHandler Extension Methods BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder, Action<ApplicationInsightsBankIdEventListenerOptions>) BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder) BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder, ApplicationInsightsBankIdEventListenerOptions) BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder, String, Action<ApplicationInsightsBankIdEventListenerOptions>) BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder, String) BankIdBuilderAzureMonitorExtensions.AddApplicationInsightsEventListener(IBankIdBuilder, String, ApplicationInsightsBankIdEventListenerOptions) IBankIdBuilderExtensions.AddClientCertificate(IBankIdBuilder, Func<X509Certificate2>) IBankIdBuilderExtensions.UseClientCertificate(IBankIdBuilder, Func<X509Certificate2>) IBankIdBuilderExtensions.UseRootCaCertificate(IBankIdBuilder, Func<X509Certificate2>) IBankIdBuilderExtensions.UseRootCaCertificate(IBankIdBuilder, String) IBankIdBuilderExtensions.AddEventListener<TBankIdEventListenerImplementation>(IBankIdBuilder) IBankIdBuilderExtensions.AddDebugEventListener(IBankIdBuilder) IBankIdBuilderExtensions.AddResultStore<TResultStoreImplementation>(IBankIdBuilder) IBankIdBuilderExtensions.UseTestEnvironment(IBankIdBuilder, Boolean, Boolean) IBankIdBuilderExtensions.UseProductionEnvironment(IBankIdBuilder, Boolean) IBankIdBuilderExtensions.UseSimulatedEnvironment(IBankIdBuilder) IBankIdBuilderExtensions.UseSimulatedEnvironment(IBankIdBuilder, String, String) IBankIdBuilderExtensions.UseSimulatedEnvironment(IBankIdBuilder, String, String, String) BankIdBuilderQrCoderExtensions.UseQrCoderQrCodeGenerator(IBankIdBuilder) BankIdBuilderAzureKeyVaultExtensions.UseClientCertificateFromAzureKeyVault(IBankIdBuilder, IConfigurationSection) BankIdBuilderAzureKeyVaultExtensions.UseClientCertificateFromAzureKeyVault(IBankIdBuilder, Action<ClientCertificateFromAzureKeyVaultOptions>) BankIdBuilderAzureKeyVaultExtensions.UseClientCertificateFromAzureKeyVault(IBankIdBuilder, ClientCertificateFromAzureKeyVaultOptions) BankIdBuilderAzureKeyVaultExtensions.AddClientCertificateFromAzureKeyVault(IBankIdBuilder, IConfigurationSection) BankIdBuilderAzureKeyVaultExtensions.AddClientCertificateFromAzureKeyVault(IBankIdBuilder, Action<ClientCertificateFromAzureKeyVaultOptions>) BankIdBuilderAzureKeyVaultExtensions.AddClientCertificateFromAzureKeyVault(IBankIdBuilder, ClientCertificateFromAzureKeyVaultOptions) BankIdBuilderUaParserExtensions.UseUaParserDeviceDetection(IBankIdBuilder)"
  },
  "api/ActiveLogin.Authentication.BankId.Core.IBankIdBuilderExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.IBankIdBuilderExtensions.html",
    "title": "Class IBankIdBuilderExtensions | Active Login",
    "keywords": "Class IBankIdBuilderExtensions Inheritance System.Object IBankIdBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public static class IBankIdBuilderExtensions Methods | Improve this Doc View Source AddClientCertificate(IBankIdBuilder, Func<X509Certificate2>) Use client certificate for authenticating against the BankID API. Declaration public static IBankIdBuilder AddClientCertificate(this IBankIdBuilder builder, Func<X509Certificate2> configureClientCertificate) Parameters Type Name Description IBankIdBuilder builder Func < System.Security.Cryptography.X509Certificates.X509Certificate2 > configureClientCertificate The certificate to use. Returns Type Description IBankIdBuilder | Improve this Doc View Source AddDebugEventListener(IBankIdBuilder) Add an event listener that will serialize and write all events to debug. Declaration public static IBankIdBuilder AddDebugEventListener(this IBankIdBuilder builder) Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder | Improve this Doc View Source AddEventListener<TBankIdEventListenerImplementation>(IBankIdBuilder) Add a custom event listener. Declaration public static IBankIdBuilder AddEventListener<TBankIdEventListenerImplementation>(this IBankIdBuilder builder) where TBankIdEventListenerImplementation : class, IBankIdEventListener Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder Type Parameters Name Description TBankIdEventListenerImplementation | Improve this Doc View Source AddResultStore<TResultStoreImplementation>(IBankIdBuilder) Adds a class that will be called when BankID returns a valid signed in user. Declaration public static IBankIdBuilder AddResultStore<TResultStoreImplementation>(this IBankIdBuilder builder) where TResultStoreImplementation : class, IBankIdResultStore Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder Type Parameters Name Description TResultStoreImplementation | Improve this Doc View Source UseClientCertificate(IBankIdBuilder, Func<X509Certificate2>) Add client certificate for authenticating against the BankID API to the list of available certificates for the http client handler to choose from. Declaration public static IBankIdBuilder UseClientCertificate(this IBankIdBuilder builder, Func<X509Certificate2> configureClientCertificate) Parameters Type Name Description IBankIdBuilder builder Func < System.Security.Cryptography.X509Certificates.X509Certificate2 > configureClientCertificate The certificate to add. Returns Type Description IBankIdBuilder | Improve this Doc View Source UseProductionEnvironment(IBankIdBuilder, Boolean) Use the BankID production environment ( https://appapi2.bankid.com/rp/vX/ ) Declaration public static IBankIdBuilder UseProductionEnvironment(this IBankIdBuilder builder, bool useBankIdRootCertificate = true) Parameters Type Name Description IBankIdBuilder builder System.Boolean useBankIdRootCertificate Use the BankID root certificate (for production) from the BankID documentation. Returns Type Description IBankIdBuilder | Improve this Doc View Source UseRootCaCertificate(IBankIdBuilder, Func<X509Certificate2>) Use this root certificate for verifying the certificate of BankID API. Use only if the root certificate can't be installed on the machine. Declaration public static IBankIdBuilder UseRootCaCertificate(this IBankIdBuilder builder, Func<X509Certificate2> configureRootCaCertificate) Parameters Type Name Description IBankIdBuilder builder Func < System.Security.Cryptography.X509Certificates.X509Certificate2 > configureRootCaCertificate The root certificate provided by BankID (*.crt) Returns Type Description IBankIdBuilder | Improve this Doc View Source UseRootCaCertificate(IBankIdBuilder, String) Use this root certificate for verifying the certificate of BankID API. Use only if the root certificate can't be installed on the machine. Declaration public static IBankIdBuilder UseRootCaCertificate(this IBankIdBuilder builder, string certificateFilePath) Parameters Type Name Description IBankIdBuilder builder System.String certificateFilePath The file path to the root certificate provided by BankID (*.crt) Returns Type Description IBankIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IBankIdBuilder) Use simulated (in memory) environment. To be used for automated testing. Declaration public static IBankIdBuilder UseSimulatedEnvironment(this IBankIdBuilder builder) Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IBankIdBuilder, String, String) Use simulated (in memory) environment. To be used for automated testing. Declaration public static IBankIdBuilder UseSimulatedEnvironment(this IBankIdBuilder builder, string givenName, string surname) Parameters Type Name Description IBankIdBuilder builder System.String givenName Fake given name System.String surname Fake surname Returns Type Description IBankIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IBankIdBuilder, String, String, String) Use simulated (in memory) environment. To be used for automated testing. Declaration public static IBankIdBuilder UseSimulatedEnvironment(this IBankIdBuilder builder, string givenName, string surname, string personalIdentityNumber) Parameters Type Name Description IBankIdBuilder builder System.String givenName Fake given name System.String surname Fake surname System.String personalIdentityNumber Fake personal identity number Returns Type Description IBankIdBuilder | Improve this Doc View Source UseTestEnvironment(IBankIdBuilder, Boolean, Boolean) Use the BankID test environment ( https://appapi2.test.bankid.com/rp/vX/ ) Declaration public static IBankIdBuilder UseTestEnvironment(this IBankIdBuilder builder, bool useBankIdRootCertificate = true, bool useBankIdClientCertificate = true) Parameters Type Name Description IBankIdBuilder builder System.Boolean useBankIdRootCertificate Use the BankID root certificate (for test) from the BankID documentation. System.Boolean useBankIdClientCertificate Use the BankID client certificate (for test) from the BankID documentation. Returns Type Description IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Launcher.BankIdLaunchInfo.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Launcher.BankIdLaunchInfo.html",
    "title": "Class BankIdLaunchInfo | Active Login",
    "keywords": "Class BankIdLaunchInfo Inheritance System.Object BankIdLaunchInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Launcher Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdLaunchInfo Constructors | Improve this Doc View Source BankIdLaunchInfo(String, Boolean, Boolean) Declaration public BankIdLaunchInfo(string launchUrl, bool deviceMightRequireUserInteractionToLaunchBankIdApp, bool deviceWillReloadPageOnReturnFromBankIdApp) Parameters Type Name Description System.String launchUrl System.Boolean deviceMightRequireUserInteractionToLaunchBankIdApp System.Boolean deviceWillReloadPageOnReturnFromBankIdApp Properties | Improve this Doc View Source DeviceMightRequireUserInteractionToLaunchBankIdApp If the device/browser might require user interaction, such as button click, to launch a third party app. Declaration public bool DeviceMightRequireUserInteractionToLaunchBankIdApp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DeviceWillReloadPageOnReturnFromBankIdApp If the device/browser will reload the page on return from the BankID app. Declaration public bool DeviceWillReloadPageOnReturnFromBankIdApp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LaunchUrl Returns the url used to launch the BankID app. Declaration public string LaunchUrl { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Launcher.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Launcher.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Launcher | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Launcher Classes BankIdLaunchInfo LaunchUrlRequest Interfaces IBankIdLauncher Resolves launch information to start the BankID app"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Launcher.IBankIdLauncher.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Launcher.IBankIdLauncher.html",
    "title": "Interface IBankIdLauncher | Active Login",
    "keywords": "Interface IBankIdLauncher Resolves launch information to start the BankID app Namespace : ActiveLogin.Authentication.BankId.Core.Launcher Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdLauncher Methods | Improve this Doc View Source GetLaunchInfo(LaunchUrlRequest) Get info on how to launch the BankID app given the current HttpContext. Use (for example) User Agent to detect device. Declaration BankIdLaunchInfo GetLaunchInfo(LaunchUrlRequest request) Parameters Type Name Description LaunchUrlRequest request Launch info Returns Type Description BankIdLaunchInfo"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Launcher.LaunchUrlRequest.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Launcher.LaunchUrlRequest.html",
    "title": "Class LaunchUrlRequest | Active Login",
    "keywords": "Class LaunchUrlRequest Inheritance System.Object LaunchUrlRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Launcher Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class LaunchUrlRequest Constructors | Improve this Doc View Source LaunchUrlRequest(String, String) Declaration public LaunchUrlRequest(string redirectUrl, string autoStartToken) Parameters Type Name Description System.String redirectUrl System.String autoStartToken | Improve this Doc View Source LaunchUrlRequest(String, String, String) Declaration public LaunchUrlRequest(string redirectUrl, string autoStartToken, string relyingPartyReference) Parameters Type Name Description System.String redirectUrl System.String autoStartToken System.String relyingPartyReference Properties | Improve this Doc View Source AutoStartToken Declaration public string AutoStartToken { get; } Property Value Type Description System.String | Improve this Doc View Source RedirectUrl Declaration public string RedirectUrl { get; } Property Value Type Description System.String | Improve this Doc View Source RelyingPartyReference Declaration public string RelyingPartyReference { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdFlowOptions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdFlowOptions.html",
    "title": "Class BankIdFlowOptions | Active Login",
    "keywords": "Class BankIdFlowOptions Inheritance System.Object BankIdFlowOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Models Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdFlowOptions Constructors | Improve this Doc View Source BankIdFlowOptions(List<String>, Boolean, Boolean) Declaration public BankIdFlowOptions(List<string> certificatePolicies, bool sameDevice, bool allowBiometric) Parameters Type Name Description List < System.String > certificatePolicies System.Boolean sameDevice System.Boolean allowBiometric Properties | Improve this Doc View Source AllowBiometric Declaration public bool AllowBiometric { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CertificatePolicies Declaration public List<string> CertificatePolicies { get; } Property Value Type Description List < System.String > | Improve this Doc View Source SameDevice Declaration public bool SameDevice { get; } Property Value Type Description System.Boolean"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdQrStartState.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdQrStartState.html",
    "title": "Class BankIdQrStartState | Active Login",
    "keywords": "Class BankIdQrStartState Inheritance System.Object BankIdQrStartState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Models Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdQrStartState Constructors | Improve this Doc View Source BankIdQrStartState(DateTimeOffset, String, String) Declaration public BankIdQrStartState(DateTimeOffset qrStartTime, string qrStartToken, string qrStartSecret) Parameters Type Name Description DateTimeOffset qrStartTime System.String qrStartToken System.String qrStartSecret Properties | Improve this Doc View Source QrStartSecret Declaration public string QrStartSecret { get; } Property Value Type Description System.String | Improve this Doc View Source QrStartTime Declaration public DateTimeOffset QrStartTime { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source QrStartToken Declaration public string QrStartToken { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdSignData.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Models.BankIdSignData.html",
    "title": "Class BankIdSignData | Active Login",
    "keywords": "Class BankIdSignData Inheritance System.Object BankIdSignData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Models Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdSignData Constructors | Improve this Doc View Source BankIdSignData(String) Declaration public BankIdSignData(string userVisibleData) Parameters Type Name Description System.String userVisibleData Properties | Improve this Doc View Source Items Declaration public IDictionary<string, string> Items { get; set; } Property Value Type Description IDictionary < System.String , System.String > | Improve this Doc View Source UserNonVisibleData Declaration public byte[] UserNonVisibleData { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source UserVisibleData Declaration public string UserVisibleData { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserVisibleDataFormat Declaration public string UserVisibleDataFormat { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Models.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Models.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Models Classes BankIdFlowOptions BankIdQrStartState BankIdSignData"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Qr.BankIdMissingQrCodeGenerator.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Qr.BankIdMissingQrCodeGenerator.html",
    "title": "Class BankIdMissingQrCodeGenerator | Active Login",
    "keywords": "Class BankIdMissingQrCodeGenerator Inheritance System.Object BankIdMissingQrCodeGenerator Implements IBankIdQrCodeGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.Qr Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdMissingQrCodeGenerator : IBankIdQrCodeGenerator Methods | Improve this Doc View Source GenerateQrCodeAsBase64(String) Declaration public string GenerateQrCodeAsBase64(string content) Parameters Type Name Description System.String content Returns Type Description System.String Implements IBankIdQrCodeGenerator"
  },
  "api/ActiveLogin.Authentication.BankId.Core.Qr.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Qr.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.Qr | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.Qr Classes BankIdMissingQrCodeGenerator Interfaces IBankIdQrCodeGenerator This interface is used to generate QR codes for BankID."
  },
  "api/ActiveLogin.Authentication.BankId.Core.Qr.IBankIdQrCodeGenerator.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.Qr.IBankIdQrCodeGenerator.html",
    "title": "Interface IBankIdQrCodeGenerator | Active Login",
    "keywords": "Interface IBankIdQrCodeGenerator This interface is used to generate QR codes for BankID. Namespace : ActiveLogin.Authentication.BankId.Core.Qr Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdQrCodeGenerator Methods | Improve this Doc View Source GenerateQrCodeAsBase64(String) Generates a Base64 encoded QR code Declaration string GenerateQrCodeAsBase64(string content) Parameters Type Name Description System.String content The BankID autoStartToken to base the QR code on. Returns Type Description System.String Base64 encoded QR code"
  },
  "api/ActiveLogin.Authentication.BankId.Core.ResultStore.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.ResultStore.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.ResultStore | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.ResultStore Interfaces IBankIdResultStore To comply with BankID Technical requirement RFT5 you need to store the data in CompletionData ."
  },
  "api/ActiveLogin.Authentication.BankId.Core.ResultStore.IBankIdResultStore.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.ResultStore.IBankIdResultStore.html",
    "title": "Interface IBankIdResultStore | Active Login",
    "keywords": "Interface IBankIdResultStore To comply with BankID Technical requirement RFT5 you need to store the data in CompletionData . Namespace : ActiveLogin.Authentication.BankId.Core.ResultStore Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdResultStore Methods | Improve this Doc View Source StoreCollectCompletedCompletionData(String, CompletionData) Declaration Task StoreCollectCompletedCompletionData(string orderRef, CompletionData completionData) Parameters Type Name Description System.String orderRef CompletionData completionData Returns Type Description Task"
  },
  "api/ActiveLogin.Authentication.BankId.Core.ServiceCollectionBankIdExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.ServiceCollectionBankIdExtensions.html",
    "title": "Class ServiceCollectionBankIdExtensions | Active Login",
    "keywords": "Class ServiceCollectionBankIdExtensions Inheritance System.Object ServiceCollectionBankIdExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public static class ServiceCollectionBankIdExtensions Methods | Improve this Doc View Source AddBankId(IServiceCollection, Action<IBankIdBuilder>) Add BankID authentication provider from Active Login. Declaration public static IServiceCollection AddBankId(this IServiceCollection services, Action<IBankIdBuilder> bankId) Parameters Type Name Description IServiceCollection services Action < IBankIdBuilder > bankId BankID configuration. Returns Type Description IServiceCollection Examples .AddBankId(bankId => { bankId .UseProductionEnvironment() .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate\")) .UseQrCoderQrCodeGenerator(); });"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDevice.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDevice.html",
    "title": "Class BankIdSupportedDevice | Active Login",
    "keywords": "Class BankIdSupportedDevice Information about the device that is supported by Active Login. Inheritance System.Object BankIdSupportedDevice Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdSupportedDevice Constructors | Improve this Doc View Source BankIdSupportedDevice(BankIdSupportedDeviceType, BankIdSupportedDeviceOs, BankIdSupportedDeviceBrowser, BankIdSupportedDeviceOsVersion) Declaration public BankIdSupportedDevice(BankIdSupportedDeviceType deviceType, BankIdSupportedDeviceOs deviceOs, BankIdSupportedDeviceBrowser deviceBrowser, BankIdSupportedDeviceOsVersion deviceOsVersion) Parameters Type Name Description BankIdSupportedDeviceType deviceType BankIdSupportedDeviceOs deviceOs BankIdSupportedDeviceBrowser deviceBrowser BankIdSupportedDeviceOsVersion deviceOsVersion Fields | Improve this Doc View Source Unknown Declaration public static BankIdSupportedDevice Unknown Field Value Type Description BankIdSupportedDevice Properties | Improve this Doc View Source DeviceBrowser Device browser (Chrome, Firefox, Safari, Edge etc) Declaration public BankIdSupportedDeviceBrowser DeviceBrowser { get; } Property Value Type Description BankIdSupportedDeviceBrowser | Improve this Doc View Source DeviceOs Device OS (Windows, iOS, Android etc) Declaration public BankIdSupportedDeviceOs DeviceOs { get; } Property Value Type Description BankIdSupportedDeviceOs | Improve this Doc View Source DeviceOsVersion Device OS version (9.0.0, 1.0 etc). Declaration public BankIdSupportedDeviceOsVersion DeviceOsVersion { get; } Property Value Type Description BankIdSupportedDeviceOsVersion | Improve this Doc View Source DeviceType Device type (desktop, mobile) Declaration public BankIdSupportedDeviceType DeviceType { get; } Property Value Type Description BankIdSupportedDeviceType"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceBrowser.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceBrowser.html",
    "title": "Enum BankIdSupportedDeviceBrowser | Active Login",
    "keywords": "Enum BankIdSupportedDeviceBrowser Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public enum BankIdSupportedDeviceBrowser Fields Name Description Chrome Edge Firefox Opera Safari SamsungBrowser Unknown"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceOs.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceOs.html",
    "title": "Enum BankIdSupportedDeviceOs | Active Login",
    "keywords": "Enum BankIdSupportedDeviceOs Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public enum BankIdSupportedDeviceOs Fields Name Description Android Ios MacOs Unknown Windows WindowsPhone"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceOsVersion.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceOsVersion.html",
    "title": "Class BankIdSupportedDeviceOsVersion | Active Login",
    "keywords": "Class BankIdSupportedDeviceOsVersion Inheritance System.Object BankIdSupportedDeviceOsVersion Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdSupportedDeviceOsVersion Constructors | Improve this Doc View Source BankIdSupportedDeviceOsVersion(Int32) Declaration public BankIdSupportedDeviceOsVersion(int majorVersion) Parameters Type Name Description System.Int32 majorVersion | Improve this Doc View Source BankIdSupportedDeviceOsVersion(Int32, Int32) Declaration public BankIdSupportedDeviceOsVersion(int majorVersion, int minorVersion) Parameters Type Name Description System.Int32 majorVersion System.Int32 minorVersion | Improve this Doc View Source BankIdSupportedDeviceOsVersion(Int32, Int32, Int32) Declaration public BankIdSupportedDeviceOsVersion(int majorVersion, int minorVersion, int patch) Parameters Type Name Description System.Int32 majorVersion System.Int32 minorVersion System.Int32 patch Fields | Improve this Doc View Source Empty Declaration public static BankIdSupportedDeviceOsVersion Empty Field Value Type Description BankIdSupportedDeviceOsVersion Properties | Improve this Doc View Source MajorVersion Declaration public int? MajorVersion { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source MinorVersion Declaration public int? MinorVersion { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Patch Declaration public int? Patch { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceType.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.BankIdSupportedDeviceType.html",
    "title": "Enum BankIdSupportedDeviceType | Active Login",
    "keywords": "Enum BankIdSupportedDeviceType Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public enum BankIdSupportedDeviceType Fields Name Description Desktop Mobile Unknown"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.SupportedDevice | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.SupportedDevice Classes BankIdSupportedDevice Information about the device that is supported by Active Login. BankIdSupportedDeviceOsVersion Interfaces IBankIdSupportedDeviceDetector Detect if the device requesting is one of the supported platforms for BankID. IBankIdSupportedDeviceDetectorByUserAgent Detect if the device requesting is one of the supported platforms for BankID given a specific user agent. Enums BankIdSupportedDeviceBrowser BankIdSupportedDeviceOs BankIdSupportedDeviceType"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.IBankIdSupportedDeviceDetector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.IBankIdSupportedDeviceDetector.html",
    "title": "Interface IBankIdSupportedDeviceDetector | Active Login",
    "keywords": "Interface IBankIdSupportedDeviceDetector Detect if the device requesting is one of the supported platforms for BankID. Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdSupportedDeviceDetector Methods | Improve this Doc View Source Detect() Detect the current device. Declaration BankIdSupportedDevice Detect() Returns Type Description BankIdSupportedDevice"
  },
  "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.IBankIdSupportedDeviceDetectorByUserAgent.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.SupportedDevice.IBankIdSupportedDeviceDetectorByUserAgent.html",
    "title": "Interface IBankIdSupportedDeviceDetectorByUserAgent | Active Login",
    "keywords": "Interface IBankIdSupportedDeviceDetectorByUserAgent Detect if the device requesting is one of the supported platforms for BankID given a specific user agent. Namespace : ActiveLogin.Authentication.BankId.Core.SupportedDevice Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdSupportedDeviceDetectorByUserAgent Methods | Improve this Doc View Source Detect(String) Detect the current device. Declaration BankIdSupportedDevice Detect(string userAgent) Parameters Type Name Description System.String userAgent Returns Type Description BankIdSupportedDevice"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserContext.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.UserContext | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.UserContext Interfaces IBankIdEndUserIpResolver Resolves end user ip for the user."
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserContext.IBankIdEndUserIpResolver.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserContext.IBankIdEndUserIpResolver.html",
    "title": "Interface IBankIdEndUserIpResolver | Active Login",
    "keywords": "Interface IBankIdEndUserIpResolver Resolves end user ip for the user. Namespace : ActiveLogin.Authentication.BankId.Core.UserContext Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdEndUserIpResolver Methods | Improve this Doc View Source GetEndUserIp() Return the end user IP for the user. Declaration string GetEndUserIp() Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestContext.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestContext.html",
    "title": "Class BankIdAuthRequestContext | Active Login",
    "keywords": "Class BankIdAuthRequestContext Inheritance System.Object BankIdAuthRequestContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.UserData Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAuthRequestContext Constructors | Improve this Doc View Source BankIdAuthRequestContext(String, Requirement) Declaration public BankIdAuthRequestContext(string endUserIp, Requirement requirement) Parameters Type Name Description System.String endUserIp Requirement requirement Properties | Improve this Doc View Source EndUserIp Declaration public string EndUserIp { get; } Property Value Type Description System.String | Improve this Doc View Source Requirement Declaration public Requirement Requirement { get; } Property Value Type Description Requirement"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestEmptyUserDataResolver.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestEmptyUserDataResolver.html",
    "title": "Class BankIdAuthRequestEmptyUserDataResolver | Active Login",
    "keywords": "Class BankIdAuthRequestEmptyUserDataResolver Inheritance System.Object BankIdAuthRequestEmptyUserDataResolver Implements IBankIdAuthRequestUserDataResolver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.UserData Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAuthRequestEmptyUserDataResolver : IBankIdAuthRequestUserDataResolver Methods | Improve this Doc View Source GetUserDataAsync(BankIdAuthRequestContext) Declaration public async Task<BankIdAuthUserData> GetUserDataAsync(BankIdAuthRequestContext authRequestContext) Parameters Type Name Description BankIdAuthRequestContext authRequestContext Returns Type Description Task < BankIdAuthUserData > Implements IBankIdAuthRequestUserDataResolver"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestStaticUserDataResolver.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthRequestStaticUserDataResolver.html",
    "title": "Class BankIdAuthRequestStaticUserDataResolver | Active Login",
    "keywords": "Class BankIdAuthRequestStaticUserDataResolver Inheritance System.Object BankIdAuthRequestStaticUserDataResolver Implements IBankIdAuthRequestUserDataResolver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.UserData Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAuthRequestStaticUserDataResolver : IBankIdAuthRequestUserDataResolver Constructors | Improve this Doc View Source BankIdAuthRequestStaticUserDataResolver(BankIdAuthUserData) Declaration public BankIdAuthRequestStaticUserDataResolver(BankIdAuthUserData authUserData) Parameters Type Name Description BankIdAuthUserData authUserData Methods | Improve this Doc View Source GetUserDataAsync(BankIdAuthRequestContext) Declaration public async Task<BankIdAuthUserData> GetUserDataAsync(BankIdAuthRequestContext authRequestContext) Parameters Type Name Description BankIdAuthRequestContext authRequestContext Returns Type Description Task < BankIdAuthUserData > Implements IBankIdAuthRequestUserDataResolver"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthUserData.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.BankIdAuthUserData.html",
    "title": "Class BankIdAuthUserData | Active Login",
    "keywords": "Class BankIdAuthUserData Inheritance System.Object BankIdAuthUserData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.UserData Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdAuthUserData Properties | Improve this Doc View Source UserNonVisibleData Declaration public byte[] UserNonVisibleData { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source UserVisibleData Declaration public string UserVisibleData { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserVisibleDataFormat Declaration public string UserVisibleDataFormat { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.UserData | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.UserData Classes BankIdAuthRequestContext BankIdAuthRequestEmptyUserDataResolver BankIdAuthRequestStaticUserDataResolver BankIdAuthUserData Interfaces IBankIdAuthRequestUserDataResolver Resolve auth request user data."
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserData.IBankIdAuthRequestUserDataResolver.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserData.IBankIdAuthRequestUserDataResolver.html",
    "title": "Interface IBankIdAuthRequestUserDataResolver | Active Login",
    "keywords": "Interface IBankIdAuthRequestUserDataResolver Resolve auth request user data. Namespace : ActiveLogin.Authentication.BankId.Core.UserData Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdAuthRequestUserDataResolver Methods | Improve this Doc View Source GetUserDataAsync(BankIdAuthRequestContext) Returns the user data for the current context/request. Declaration Task<BankIdAuthUserData> GetUserDataAsync(BankIdAuthRequestContext authRequestContext) Parameters Type Name Description BankIdAuthRequestContext authRequestContext BankID auth request context. Returns Type Description Task < BankIdAuthUserData >"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserMessage.BankIdUserMessageLocalizer.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserMessage.BankIdUserMessageLocalizer.html",
    "title": "Class BankIdUserMessageLocalizer | Active Login",
    "keywords": "Class BankIdUserMessageLocalizer Inheritance System.Object BankIdUserMessageLocalizer Implements IBankIdUserMessageLocalizer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.Core.UserMessage Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public class BankIdUserMessageLocalizer : IBankIdUserMessageLocalizer Methods | Improve this Doc View Source GetLocalizedString(MessageShortName) Declaration public string GetLocalizedString(MessageShortName messageShortName) Parameters Type Name Description MessageShortName messageShortName Returns Type Description System.String Implements IBankIdUserMessageLocalizer"
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserMessage.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserMessage.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.Core.UserMessage | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.Core.UserMessage Classes BankIdUserMessageLocalizer Interfaces IBankIdUserMessageLocalizer Resolves localized texts for the different BankID messages."
  },
  "api/ActiveLogin.Authentication.BankId.Core.UserMessage.IBankIdUserMessageLocalizer.html": {
    "href": "api/ActiveLogin.Authentication.BankId.Core.UserMessage.IBankIdUserMessageLocalizer.html",
    "title": "Interface IBankIdUserMessageLocalizer | Active Login",
    "keywords": "Interface IBankIdUserMessageLocalizer Resolves localized texts for the different BankID messages. Namespace : ActiveLogin.Authentication.BankId.Core.UserMessage Assembly : ActiveLogin.Authentication.BankId.Core.dll Syntax public interface IBankIdUserMessageLocalizer Methods | Improve this Doc View Source GetLocalizedString(MessageShortName) Returns a localized string. Declaration string GetLocalizedString(MessageShortName messageShortName) Parameters Type Name Description MessageShortName messageShortName The message identifier. Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.BankId.QrCoder.BankIdBuilderQrCoderExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.QrCoder.BankIdBuilderQrCoderExtensions.html",
    "title": "Class BankIdBuilderQrCoderExtensions | Active Login",
    "keywords": "Class BankIdBuilderQrCoderExtensions Inheritance System.Object BankIdBuilderQrCoderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.QrCoder Assembly : ActiveLogin.Authentication.BankId.QRCoder.dll Syntax public static class BankIdBuilderQrCoderExtensions Methods | Improve this Doc View Source UseQrCoderQrCodeGenerator(IBankIdBuilder) Use QrCoder as the QR Code generator library. Declaration public static IBankIdBuilder UseQrCoderQrCodeGenerator(this IBankIdBuilder builder) Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.QrCoder.html": {
    "href": "api/ActiveLogin.Authentication.BankId.QrCoder.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.QrCoder | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.QrCoder Classes BankIdBuilderQrCoderExtensions QrCoderBankIdQrCodeGenerator This class generates QR codes for BankID"
  },
  "api/ActiveLogin.Authentication.BankId.QrCoder.QrCoderBankIdQrCodeGenerator.html": {
    "href": "api/ActiveLogin.Authentication.BankId.QrCoder.QrCoderBankIdQrCodeGenerator.html",
    "title": "Class QrCoderBankIdQrCodeGenerator | Active Login",
    "keywords": "Class QrCoderBankIdQrCodeGenerator This class generates QR codes for BankID Inheritance System.Object QrCoderBankIdQrCodeGenerator Implements IBankIdQrCodeGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.QrCoder Assembly : ActiveLogin.Authentication.BankId.QRCoder.dll Syntax public class QrCoderBankIdQrCodeGenerator : IBankIdQrCodeGenerator Remarks It uses the QR Coder library to generate the codes Methods | Improve this Doc View Source GenerateQrCodeAsBase64(String) Generates a QR code for BankID using the auto start token. Declaration public string GenerateQrCodeAsBase64(string content) Parameters Type Name Description System.String content Returns Type Description System.String A base 64 representation of the QR code Remarks First the token is added to the BankID URL for auto start and then the QR code is generated from the resulting URL. Implements IBankIdQrCodeGenerator"
  },
  "api/ActiveLogin.Authentication.BankId.UaParser.BankIdBuilderUaParserExtensions.html": {
    "href": "api/ActiveLogin.Authentication.BankId.UaParser.BankIdBuilderUaParserExtensions.html",
    "title": "Class BankIdBuilderUaParserExtensions | Active Login",
    "keywords": "Class BankIdBuilderUaParserExtensions Inheritance System.Object BankIdBuilderUaParserExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.UaParser Assembly : ActiveLogin.Authentication.BankId.UAParser.dll Syntax public static class BankIdBuilderUaParserExtensions Methods | Improve this Doc View Source UseUaParserDeviceDetection(IBankIdBuilder) Use UAParserDeviceDetector instead of the default device detector BankIdSupportedDeviceDetector. Declaration public static IBankIdBuilder UseUaParserDeviceDetection(this IBankIdBuilder builder) Parameters Type Name Description IBankIdBuilder builder Returns Type Description IBankIdBuilder"
  },
  "api/ActiveLogin.Authentication.BankId.UaParser.html": {
    "href": "api/ActiveLogin.Authentication.BankId.UaParser.html",
    "title": "Namespace ActiveLogin.Authentication.BankId.UaParser | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.BankId.UaParser Classes BankIdBuilderUaParserExtensions UAParserDeviceDetector This class is used for device and browser detection to support requirements in the BankID Relaying party Guidelines (e.g. use of different launch URLs for the BankID app for different devices and browsers)."
  },
  "api/ActiveLogin.Authentication.BankId.UaParser.UAParserDeviceDetector.html": {
    "href": "api/ActiveLogin.Authentication.BankId.UaParser.UAParserDeviceDetector.html",
    "title": "Class UAParserDeviceDetector | Active Login",
    "keywords": "Class UAParserDeviceDetector This class is used for device and browser detection to support requirements in the BankID Relaying party Guidelines (e.g. use of different launch URLs for the BankID app for different devices and browsers). Inheritance System.Object UAParserDeviceDetector Implements IBankIdSupportedDeviceDetectorByUserAgent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.BankId.UaParser Assembly : ActiveLogin.Authentication.BankId.UAParser.dll Syntax public class UAParserDeviceDetector : IBankIdSupportedDeviceDetectorByUserAgent Remarks It uses the ua_parser C# library for user agent parsing. Methods | Improve this Doc View Source Detect(String) Declaration public BankIdSupportedDevice Detect(string userAgent) Parameters Type Name Description System.String userAgent Returns Type Description BankIdSupportedDevice Implements IBankIdSupportedDeviceDetectorByUserAgent"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClient.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClient.html",
    "title": "Class GrandIdApiClient | Active Login",
    "keywords": "Class GrandIdApiClient HTTP based client for the GrandId REST API. Inheritance System.Object GrandIdApiClient Implements IGrandIdApiClient Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class GrandIdApiClient : object, IGrandIdApiClient Constructors | Improve this Doc View Source GrandIdApiClient(HttpClient, GrandIdApiClientConfiguration) Declaration public GrandIdApiClient(HttpClient httpClient, GrandIdApiClientConfiguration configuration) Parameters Type Name Description HttpClient httpClient GrandIdApiClientConfiguration configuration Methods | Improve this Doc View Source BankIdFederatedLoginAsync(BankIdFederatedLoginRequest) This is the function to log in using an apiKey, authenticateServiceKey and a callbackUrl. The return value will be a sessionid and a return URL. Declaration public async Task<BankIdFederatedLoginResponse> BankIdFederatedLoginAsync(BankIdFederatedLoginRequest request) Parameters Type Name Description BankIdFederatedLoginRequest request Returns Type Description Task < BankIdFederatedLoginResponse > If the request is successful, the redirectUrl and sessionId is returned | Improve this Doc View Source BankIdGetSessionAsync(BankIdGetSessionRequest) Fetches the currents Session Data for a sessionId. Declaration public async Task<BankIdGetSessionResponse> BankIdGetSessionAsync(BankIdGetSessionRequest request) Parameters Type Name Description BankIdGetSessionRequest request Returns Type Description Task < BankIdGetSessionResponse > If the request is successful, the sessionData is returned | Improve this Doc View Source LogoutAsync(LogoutRequest) This is the function to logout a user from an IDP. Declaration public async Task<LogoutResponse> LogoutAsync(LogoutRequest request) Parameters Type Name Description LogoutRequest request Returns Type Description Task < LogoutResponse > Implements IGrandIdApiClient"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClientConfiguration.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClientConfiguration.html",
    "title": "Class GrandIdApiClientConfiguration | Active Login",
    "keywords": "Class GrandIdApiClientConfiguration Inheritance System.Object GrandIdApiClientConfiguration Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class GrandIdApiClientConfiguration : object Constructors | Improve this Doc View Source GrandIdApiClientConfiguration(String, Nullable<String>) Declaration public GrandIdApiClientConfiguration(string apiKey, string? bankIdServiceKey = null) Parameters Type Name Description System.String apiKey System.Nullable < System.String > bankIdServiceKey Properties | Improve this Doc View Source ApiKey Declaration public string ApiKey { get; } Property Value Type Description System.String | Improve this Doc View Source BankIdServiceKey Declaration public string? BankIdServiceKey { get; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClientExtensions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiClientExtensions.html",
    "title": "Class GrandIdApiClientExtensions | Active Login",
    "keywords": "Class GrandIdApiClientExtensions Extensions to enable easier access to common api scenarios. Inheritance System.Object GrandIdApiClientExtensions Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public static class GrandIdApiClientExtensions : object Methods | Improve this Doc View Source BankIdFederatedLoginAsync(IGrandIdApiClient, Nullable<String>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<String>) Declaration public static Task<BankIdFederatedLoginResponse> BankIdFederatedLoginAsync(this IGrandIdApiClient apiClient, string? callbackUrl = null, bool? useChooseDevice = null, bool? useSameDevice = null, bool? askForPersonalIdentityNumber = null, string? personalIdentityNumber = null, bool? requireMobileBankId = null, string? customerUrl = null, bool? showGui = null, string? signUserVisibleData = null, string? signUserNonVisibleData = null) Parameters Type Name Description IGrandIdApiClient apiClient System.Nullable < System.String > callbackUrl System.Nullable < System.Boolean > useChooseDevice System.Nullable < System.Boolean > useSameDevice System.Nullable < System.Boolean > askForPersonalIdentityNumber System.Nullable < System.String > personalIdentityNumber System.Nullable < System.Boolean > requireMobileBankId System.Nullable < System.String > customerUrl System.Nullable < System.Boolean > showGui System.Nullable < System.String > signUserVisibleData System.Nullable < System.String > signUserNonVisibleData Returns Type Description Task < BankIdFederatedLoginResponse > | Improve this Doc View Source BankIdGetSessionAsync(IGrandIdApiClient, String) Declaration public static Task<BankIdGetSessionResponse> BankIdGetSessionAsync(this IGrandIdApiClient apiClient, string sessionId) Parameters Type Name Description IGrandIdApiClient apiClient System.String sessionId Returns Type Description Task < BankIdGetSessionResponse > | Improve this Doc View Source LogoutAsync(IGrandIdApiClient, String) Declaration public static Task<LogoutResponse> LogoutAsync(this IGrandIdApiClient apiClient, string sessionId) Parameters Type Name Description IGrandIdApiClient apiClient System.String sessionId Returns Type Description Task < LogoutResponse >"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiException.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdApiException.html",
    "title": "Class GrandIdApiException | Active Login",
    "keywords": "Class GrandIdApiException Exception that wraps any error returned by the GrandID API. Inheritance System.Object GrandIdApiException Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class GrandIdApiException : HttpRequestException Properties | Improve this Doc View Source ErrorCode The category of error. Declaration public ErrorCode ErrorCode { get; } Property Value Type Description ErrorCode | Improve this Doc View Source ErrorDetails Details about the error. Declaration public string ErrorDetails { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdSimulatedApiClient.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdSimulatedApiClient.html",
    "title": "Class GrandIdSimulatedApiClient | Active Login",
    "keywords": "Class GrandIdSimulatedApiClient Dummy implementation that simulates the GrandID API. Can be used for development and testing purposes. Inheritance System.Object GrandIdSimulatedApiClient Implements IGrandIdApiClient Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class GrandIdSimulatedApiClient : object, IGrandIdApiClient Constructors | Improve this Doc View Source GrandIdSimulatedApiClient() Declaration public GrandIdSimulatedApiClient() | Improve this Doc View Source GrandIdSimulatedApiClient(String, String) Declaration public GrandIdSimulatedApiClient(string givenName, string surname) Parameters Type Name Description System.String givenName System.String surname | Improve this Doc View Source GrandIdSimulatedApiClient(String, String, String) Declaration public GrandIdSimulatedApiClient(string givenName, string surname, string personalIdentityNumber) Parameters Type Name Description System.String givenName System.String surname System.String personalIdentityNumber Properties | Improve this Doc View Source Delay Declaration public TimeSpan Delay { get; set; } Property Value Type Description TimeSpan Methods | Improve this Doc View Source BankIdFederatedLoginAsync(BankIdFederatedLoginRequest) Declaration public async Task<BankIdFederatedLoginResponse> BankIdFederatedLoginAsync(BankIdFederatedLoginRequest request) Parameters Type Name Description BankIdFederatedLoginRequest request Returns Type Description Task < BankIdFederatedLoginResponse > | Improve this Doc View Source BankIdGetSessionAsync(BankIdGetSessionRequest) Declaration public async Task<BankIdGetSessionResponse> BankIdGetSessionAsync(BankIdGetSessionRequest request) Parameters Type Name Description BankIdGetSessionRequest request Returns Type Description Task < BankIdGetSessionResponse > | Improve this Doc View Source LogoutAsync(LogoutRequest) Declaration public async Task<LogoutResponse> LogoutAsync(LogoutRequest request) Parameters Type Name Description LogoutRequest request Returns Type Description Task < LogoutResponse > Implements IGrandIdApiClient"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.GrandIdUrls.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.GrandIdUrls.html",
    "title": "Class GrandIdUrls | Active Login",
    "keywords": "Class GrandIdUrls URLs for GrandID REST API. Inheritance System.Object GrandIdUrls Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public static class GrandIdUrls : object Fields | Improve this Doc View Source ProductionApiBaseUrl Base url for production API. Declaration public static readonly Uri ProductionApiBaseUrl Field Value Type Description Uri | Improve this Doc View Source TestApiBaseUrl Base url for test API. Declaration public static readonly Uri TestApiBaseUrl Field Value Type Description Uri"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.html",
    "title": "Namespace ActiveLogin.Authentication.GrandId.Api | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.GrandId.Api Classes GrandIdApiClient HTTP based client for the GrandId REST API. GrandIdApiClientConfiguration GrandIdApiClientExtensions Extensions to enable easier access to common api scenarios. GrandIdApiException Exception that wraps any error returned by the GrandID API. GrandIdSimulatedApiClient Dummy implementation that simulates the GrandID API. Can be used for development and testing purposes. GrandIdUrls URLs for GrandID REST API. Interfaces IGrandIdApiClient GrandD API Client that defines the supported methods."
  },
  "api/ActiveLogin.Authentication.GrandId.Api.IGrandIdApiClient.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.IGrandIdApiClient.html",
    "title": "Interface IGrandIdApiClient | Active Login",
    "keywords": "Interface IGrandIdApiClient GrandD API Client that defines the supported methods. Namespace : ActiveLogin.Authentication.GrandId.Api Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public interface IGrandIdApiClient Methods | Improve this Doc View Source BankIdFederatedLoginAsync(BankIdFederatedLoginRequest) Login using GrandID BankID. This is the function to log in using an apiKey, authenticateServiceKey and a callbackUrl. The return value will be a sessionid and a return URL. Declaration Task<BankIdFederatedLoginResponse> BankIdFederatedLoginAsync(BankIdFederatedLoginRequest request) Parameters Type Name Description BankIdFederatedLoginRequest request Returns Type Description Task < BankIdFederatedLoginResponse > If the request is successful, the redirectUrl and sessionId is returned | Improve this Doc View Source BankIdGetSessionAsync(BankIdGetSessionRequest) Fetches the currents Session Data for a BankID sessionId. Declaration Task<BankIdGetSessionResponse> BankIdGetSessionAsync(BankIdGetSessionRequest request) Parameters Type Name Description BankIdGetSessionRequest request Returns Type Description Task < BankIdGetSessionResponse > If the request is successful, the sessionData is returned | Improve this Doc View Source LogoutAsync(LogoutRequest) This is the function to logout a user from an IDP. Declaration Task<LogoutResponse> LogoutAsync(LogoutRequest request) Parameters Type Name Description LogoutRequest request Returns Type Description Task < LogoutResponse > Extension Methods GrandIdApiClientExtensions.BankIdFederatedLoginAsync(IGrandIdApiClient, Nullable<String>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<String>) GrandIdApiClientExtensions.BankIdGetSessionAsync(IGrandIdApiClient, String) GrandIdApiClientExtensions.LogoutAsync(IGrandIdApiClient, String)"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdFederatedLoginRequest.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdFederatedLoginRequest.html",
    "title": "Class BankIdFederatedLoginRequest | Active Login",
    "keywords": "Class BankIdFederatedLoginRequest Inheritance System.Object BankIdFederatedLoginRequest Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class BankIdFederatedLoginRequest : object Constructors | Improve this Doc View Source BankIdFederatedLoginRequest(Nullable<String>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<Boolean>, Nullable<String>, Nullable<String>) Declaration public BankIdFederatedLoginRequest(string? callbackUrl = null, bool? useChooseDevice = null, bool? useSameDevice = null, bool? askForPersonalIdentityNumber = null, string? personalIdentityNumber = null, bool? requireMobileBankId = null, string? customerUrl = null, bool? showGui = null, string? signUserVisibleData = null, string? signUserNonVisibleData = null) Parameters Type Name Description System.Nullable < System.String > callbackUrl System.Nullable < System.Boolean > useChooseDevice System.Nullable < System.Boolean > useSameDevice System.Nullable < System.Boolean > askForPersonalIdentityNumber System.Nullable < System.String > personalIdentityNumber System.Nullable < System.Boolean > requireMobileBankId System.Nullable < System.String > customerUrl System.Nullable < System.Boolean > showGui System.Nullable < System.String > signUserVisibleData System.Nullable < System.String > signUserNonVisibleData Properties | Improve this Doc View Source AskForPersonalIdentityNumber Ask the user for a personal identity number. PersonalIdentityNumber overrides this, but is required when \"UseSameDevice\" is false. Declaration public bool? AskForPersonalIdentityNumber { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source CallbackUrl The url to return the user to. Declaration public string? CallbackUrl { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source CustomerUrl If wanted, this parameter can be set to a URL that will be shown as the \"backwards\" link on all screens. Declaration public string? CustomerUrl { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PersonalIdentityNumber The users 12 digit personal number without spaces, dashes or extra characters. Will be validated by checksum before proceeding. Declaration public string? PersonalIdentityNumber { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source RequireMobileBankId If set to true, only mobile certificates will be allowed to be used (mobile apps). Declaration public bool? RequireMobileBankId { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ShowGui When set to false instead of a redirectUrl, returns \"autoStartToken\" which is used to (possibly) start BankId yourself. When an personal identity number is passed, no special launching except informing the user about starting bankid is required. Declaration public bool? ShowGui { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source SignUserNonVisibleData The string to actually sign in the background. If not set, the value in userVisibleData is copied. Declaration public string? SignUserNonVisibleData { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source SignUserVisibleData A string to show the user when signing. If set signing is enabled if available instead of authentication. Declaration public string? SignUserVisibleData { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source UseChooseDevice Present the user with a menu choice between \"this device\" and \"other device\" (this corresponds to setting \"UseSameDevice\" to true or false). Declaration public bool? UseChooseDevice { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source UseSameDevice Try to launch bankid automatically on the device the user is using. This can interfer with setting \"RequireMobileBankId\". Declaration public bool? UseSameDevice { get; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdFederatedLoginResponse.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdFederatedLoginResponse.html",
    "title": "Class BankIdFederatedLoginResponse | Active Login",
    "keywords": "Class BankIdFederatedLoginResponse Inheritance System.Object FederatedLoginResponseBase BankIdFederatedLoginResponse Inherited Members FederatedLoginResponseBase.SessionId FederatedLoginResponseBase.RedirectUrl Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class BankIdFederatedLoginResponse : FederatedLoginResponseBase Constructors | Improve this Doc View Source BankIdFederatedLoginResponse(String, String) Declaration public BankIdFederatedLoginResponse(string sessionId, string redirectUrl) Parameters Type Name Description System.String sessionId System.String redirectUrl"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionRequest.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionRequest.html",
    "title": "Class BankIdGetSessionRequest | Active Login",
    "keywords": "Class BankIdGetSessionRequest Inheritance System.Object BankIdGetSessionRequest Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class BankIdGetSessionRequest : object Constructors | Improve this Doc View Source BankIdGetSessionRequest(String) Declaration public BankIdGetSessionRequest(string sessionId) Parameters Type Name Description System.String sessionId Properties | Improve this Doc View Source SessionId Declaration public string SessionId { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse.html",
    "title": "Class BankIdGetSessionResponse | Active Login",
    "keywords": "Class BankIdGetSessionResponse Inheritance System.Object GetSessionResponseBase BankIdGetSessionResponse Inherited Members GetSessionResponseBase.SessionId GetSessionResponseBase.Username Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class BankIdGetSessionResponse : GetSessionResponseBase Constructors | Improve this Doc View Source BankIdGetSessionResponse(Nullable<String>, Nullable<String>, BankIdGetSessionUserAttributes) Declaration public BankIdGetSessionResponse(string? sessionId, string? username, BankIdGetSessionUserAttributes userAttributes) Parameters Type Name Description System.Nullable < System.String > sessionId System.Nullable < System.String > username BankIdGetSessionUserAttributes userAttributes Properties | Improve this Doc View Source UserAttributes Declaration public BankIdGetSessionUserAttributes UserAttributes { get; } Property Value Type Description BankIdGetSessionUserAttributes"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionUserAttributes.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionUserAttributes.html",
    "title": "Class BankIdGetSessionUserAttributes | Active Login",
    "keywords": "Class BankIdGetSessionUserAttributes Inheritance System.Object BankIdGetSessionUserAttributes Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class BankIdGetSessionUserAttributes : object Constructors | Improve this Doc View Source BankIdGetSessionUserAttributes(String, String, String, String, String, String, String, String, String) Declaration public BankIdGetSessionUserAttributes(string signature, string ocspResponse, string givenName, string surname, string name, string personalIdentityNumber, string notBefore, string notAfter, string ipAddress) Parameters Type Name Description System.String signature System.String ocspResponse System.String givenName System.String surname System.String name System.String personalIdentityNumber System.String notBefore System.String notAfter System.String ipAddress Properties | Improve this Doc View Source GivenName Declaration public string GivenName { get; } Property Value Type Description System.String | Improve this Doc View Source IpAddress Declaration public string IpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NotAfter Declaration public string NotAfter { get; } Property Value Type Description System.String | Improve this Doc View Source NotBefore Declaration public string NotBefore { get; } Property Value Type Description System.String | Improve this Doc View Source OcspResponse Declaration public string OcspResponse { get; } Property Value Type Description System.String | Improve this Doc View Source PersonalIdentityNumber Declaration public string PersonalIdentityNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Signature Declaration public string Signature { get; } Property Value Type Description System.String | Improve this Doc View Source Surname Declaration public string Surname { get; } Property Value Type Description System.String Extension Methods BankIdGetSessionUserAttributesExtensions.GetSignatureXml(BankIdGetSessionUserAttributes) BankIdGetSessionUserAttributesExtensions.GetNotBeforeDateTime(BankIdGetSessionUserAttributes) BankIdGetSessionUserAttributesExtensions.GetNotAfterDateTime(BankIdGetSessionUserAttributes)"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionUserAttributesExtensions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionUserAttributesExtensions.html",
    "title": "Class BankIdGetSessionUserAttributesExtensions | Active Login",
    "keywords": "Class BankIdGetSessionUserAttributesExtensions Inheritance System.Object BankIdGetSessionUserAttributesExtensions Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public static class BankIdGetSessionUserAttributesExtensions : object Methods | Improve this Doc View Source GetNotAfterDateTime(BankIdGetSessionUserAttributes) Declaration public static DateTime GetNotAfterDateTime(this BankIdGetSessionUserAttributes userAttributes) Parameters Type Name Description BankIdGetSessionUserAttributes userAttributes Returns Type Description DateTime | Improve this Doc View Source GetNotBeforeDateTime(BankIdGetSessionUserAttributes) Declaration public static DateTime GetNotBeforeDateTime(this BankIdGetSessionUserAttributes userAttributes) Parameters Type Name Description BankIdGetSessionUserAttributes userAttributes Returns Type Description DateTime | Improve this Doc View Source GetSignatureXml(BankIdGetSessionUserAttributes) Declaration public static string GetSignatureXml(this BankIdGetSessionUserAttributes userAttributes) Parameters Type Name Description BankIdGetSessionUserAttributes userAttributes Returns Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.ErrorCode.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.ErrorCode.html",
    "title": "Enum ErrorCode | Active Login",
    "keywords": "Enum ErrorCode Possible values of error codes returned from an error response. Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public enum ErrorCode : int Fields Name Description Already_In_Progress Already in progress: Another session is currently trying to authenticate this personal number / certificate. Can happen if not all requests are completed before re-trying. ApiKeyNotValid01 The provided apiKey and AuthenticateServiceKey could not be validated: Authentication keys are wrong (FederatedLogin). Cancel1 User canceled: Incorrect input data or error from BankID. Cancel2 User canceled: BankID is incorrectly installed or user aborted. Expired_Transaction Transaction expired before user authenticated: The transaction was expired by bankid before it was completed on GrandIDs end. FieldsNotValid Incorrect combination of authentication keys: Authentication keys are wrong (GetSession). Unknown Unknown error. Unknown_Formatting Error message was malformed: Error message was malformed."
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.FederatedLoginResponseBase.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.FederatedLoginResponseBase.html",
    "title": "Class FederatedLoginResponseBase | Active Login",
    "keywords": "Class FederatedLoginResponseBase Inheritance System.Object FederatedLoginResponseBase BankIdFederatedLoginResponse Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public abstract class FederatedLoginResponseBase : object Properties | Improve this Doc View Source RedirectUrl Declaration public string? RedirectUrl { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source SessionId Declaration public string? SessionId { get; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.GetSessionResponseBase.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.GetSessionResponseBase.html",
    "title": "Class GetSessionResponseBase | Active Login",
    "keywords": "Class GetSessionResponseBase Inheritance System.Object GetSessionResponseBase BankIdGetSessionResponse Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public abstract class GetSessionResponseBase : object Properties | Improve this Doc View Source SessionId Declaration public string? SessionId { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Username Declaration public string? Username { get; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.html",
    "title": "Namespace ActiveLogin.Authentication.GrandId.Api.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.GrandId.Api.Models Classes BankIdFederatedLoginRequest BankIdFederatedLoginResponse BankIdGetSessionRequest BankIdGetSessionResponse BankIdGetSessionUserAttributes BankIdGetSessionUserAttributesExtensions FederatedLoginResponseBase GetSessionResponseBase LogoutRequest LogoutResponse Enums ErrorCode Possible values of error codes returned from an error response."
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.LogoutRequest.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.LogoutRequest.html",
    "title": "Class LogoutRequest | Active Login",
    "keywords": "Class LogoutRequest Inheritance System.Object LogoutRequest Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class LogoutRequest : object Constructors | Improve this Doc View Source LogoutRequest(String) Declaration public LogoutRequest(string sessionId) Parameters Type Name Description System.String sessionId Properties | Improve this Doc View Source SessionId Declaration public string SessionId { get; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.Api.Models.LogoutResponse.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.Api.Models.LogoutResponse.html",
    "title": "Class LogoutResponse | Active Login",
    "keywords": "Class LogoutResponse Inheritance System.Object LogoutResponse Namespace : ActiveLogin.Authentication.GrandId.Api.Models Assembly : ActiveLogin.Authentication.GrandId.Api.dll Syntax public class LogoutResponse : object Constructors | Improve this Doc View Source LogoutResponse(Boolean) Declaration public LogoutResponse(bool sessionDeleted) Parameters Type Name Description System.Boolean sessionDeleted Properties | Improve this Doc View Source SessionDeleted Declaration public bool SessionDeleted { get; } Property Value Type Description System.Boolean"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdHandler.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdHandler.html",
    "title": "Class GrandIdBankIdHandler | Active Login",
    "keywords": "Class GrandIdBankIdHandler Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationHandler < GrandIdBankIdOptions > Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler < GrandIdBankIdOptions > GrandIdHandler < GrandIdBankIdOptions , BankIdGetSessionResponse > GrandIdBankIdHandler Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler Inherited Members GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>.HandleRemoteAuthenticateAsync() GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>.GetSessionResponseAsync(String) GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>.GetClaims(BankIdGetSessionResponse) GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>.HandleChallengeAsync(AuthenticationProperties) GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>.GetRedirectUrlAsync(AuthenticationProperties, String) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.CreateEventsAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ShouldHandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleRemoteAuthenticateAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleAuthenticateAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Events Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.InitializeEventsAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.InitializeHandlerAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.BuildRedirectUri(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ResolveTarget(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.AuthenticateAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleAuthenticateOnceAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleAuthenticateOnceSafeAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Scheme Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Options Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Context Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Request Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Response Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.OriginalPath Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.OriginalPathBase Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Logger Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.UrlEncoder Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.Clock Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.OptionsMonitor Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions>.CurrentUri System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class GrandIdBankIdHandler : GrandIdHandler<GrandIdBankIdOptions, BankIdGetSessionResponse>, IAuthenticationRequestHandler, IAuthenticationHandler Constructors | Improve this Doc View Source GrandIdBankIdHandler(IOptionsMonitor<GrandIdBankIdOptions>, ILoggerFactory, UrlEncoder, ISystemClock, ILogger<GrandIdBankIdHandler>, IGrandIdApiClient) Declaration public GrandIdBankIdHandler(IOptionsMonitor<GrandIdBankIdOptions> options, ILoggerFactory loggerFactory, UrlEncoder encoder, ISystemClock clock, ILogger<GrandIdBankIdHandler> logger, IGrandIdApiClient grandIdApiClient) Parameters Type Name Description Microsoft.Extensions.Options.IOptionsMonitor < GrandIdBankIdOptions > options Microsoft.Extensions.Logging.ILoggerFactory loggerFactory System.Text.Encodings.Web.UrlEncoder encoder Microsoft.AspNetCore.Authentication.ISystemClock clock Microsoft.Extensions.Logging.ILogger < GrandIdBankIdHandler > logger IGrandIdApiClient grandIdApiClient Methods | Improve this Doc View Source GetClaims(BankIdGetSessionResponse) Declaration protected override IEnumerable<Claim> GetClaims(BankIdGetSessionResponse loginResult) Parameters Type Name Description BankIdGetSessionResponse loginResult Returns Type Description System.Collections.Generic.IEnumerable < System.Security.Claims.Claim > Overrides ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions, ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse>.GetClaims(ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse) | Improve this Doc View Source GetRedirectUrlAsync(AuthenticationProperties, String) Declaration protected override async Task<string> GetRedirectUrlAsync(AuthenticationProperties properties, string absoluteReturnUrl) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties properties System.String absoluteReturnUrl Returns Type Description System.Threading.Tasks.Task < System.String > Overrides ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions, ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse>.GetRedirectUrlAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) | Improve this Doc View Source GetSessionResponseAsync(String) Declaration protected override async Task<BankIdGetSessionResponse> GetSessionResponseAsync(string sessionId) Parameters Type Name Description System.String sessionId Returns Type Description System.Threading.Tasks.Task < BankIdGetSessionResponse > Overrides ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdHandler<ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions, ActiveLogin.Authentication.GrandId.Api.Models.BankIdGetSessionResponse>.GetSessionResponseAsync(System.String) Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdOptions.html",
    "title": "Class GrandIdBankIdOptions | Active Login",
    "keywords": "Class GrandIdBankIdOptions Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions GrandIdOptions GrandIdBankIdOptions Inherited Members GrandIdOptions.TokenExpiresIn GrandIdOptions.IssueAuthenticationMethodClaim GrandIdOptions.IssueIdentityProviderClaim GrandIdOptions.IdentityProviderName GrandIdOptions.StateDataFormat GrandIdOptions.StateCookie Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(System.String) Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate() Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelHttpHandler Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Backchannel Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.DataProtectionProvider Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.AccessDeniedPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.ReturnUrlParameter Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.RemoteAuthenticationTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Events Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SaveTokens Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CorrelationCookie Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.EventsType Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefault Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardAuthenticate Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardChallenge Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardForbid Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignIn Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignOut Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefaultSelector System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class GrandIdBankIdOptions : GrandIdOptions Properties | Improve this Doc View Source AuthenticationMethodName Declaration public override string AuthenticationMethodName { get; set; } Property Value Type Description System.String Overrides GrandIdOptions.AuthenticationMethodName | Improve this Doc View Source IssueBirthdateClaim Whether or not to issue birthday claim based on Swedish Personal Identity Number. See https://github.com/ActiveLogin/ActiveLogin.Identity for more info and limitations. Declaration public bool IssueBirthdateClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IssueGenderClaim Whether or not to issue gender claim based on Swedish Personal Identity Number. See https://github.com/ActiveLogin/ActiveLogin.Identity for more info and limitations. Declaration public bool IssueGenderClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RequireMobileBankId If set to true, only mobile certificates will be allowed to be used (mobile apps). Declaration public bool RequireMobileBankId { get; } Property Value Type Description System.Boolean"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdPostConfigureOptions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBankIdPostConfigureOptions.html",
    "title": "Class GrandIdBankIdPostConfigureOptions | Active Login",
    "keywords": "Class GrandIdBankIdPostConfigureOptions Inheritance System.Object GrandIdPostConfigureOptions < GrandIdBankIdOptions , GrandIdBankIdHandler > GrandIdBankIdPostConfigureOptions Implements Microsoft.Extensions.Options.IPostConfigureOptions < GrandIdBankIdOptions > Inherited Members GrandIdPostConfigureOptions<GrandIdBankIdOptions, GrandIdBankIdHandler>.PostConfigure(String, GrandIdBankIdOptions) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class GrandIdBankIdPostConfigureOptions : GrandIdPostConfigureOptions<GrandIdBankIdOptions, GrandIdBankIdHandler>, IPostConfigureOptions<GrandIdBankIdOptions> Constructors | Improve this Doc View Source GrandIdBankIdPostConfigureOptions(IDataProtectionProvider) Declaration public GrandIdBankIdPostConfigureOptions(IDataProtectionProvider dataProtection) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionProvider dataProtection Implements Microsoft.Extensions.Options.IPostConfigureOptions<TOptions>"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilder.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilder.html",
    "title": "Class GrandIdBuilder | Active Login",
    "keywords": "Class GrandIdBuilder Inheritance System.Object GrandIdBuilder Implements IGrandIdBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class GrandIdBuilder : IGrandIdBuilder Constructors | Improve this Doc View Source GrandIdBuilder(AuthenticationBuilder) Declaration public GrandIdBuilder(AuthenticationBuilder authenticationBuilder) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder authenticationBuilder Properties | Improve this Doc View Source AuthenticationBuilder Declaration public AuthenticationBuilder AuthenticationBuilder { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder Methods | Improve this Doc View Source ConfigureHttpClient(Action<HttpClient>) Declaration public void ConfigureHttpClient(Action<HttpClient> configureHttpClient) Parameters Type Name Description System.Action < System.Net.Http.HttpClient > configureHttpClient | Improve this Doc View Source ConfigureHttpClientHandler(Action<SocketsHttpHandler>) Declaration public void ConfigureHttpClientHandler(Action<SocketsHttpHandler> configureHttpClientHandler) Parameters Type Name Description System.Action < System.Net.Http.SocketsHttpHandler > configureHttpClientHandler | Improve this Doc View Source EnableHttpClient() Declaration public void EnableHttpClient() Implements IGrandIdBuilder Extension Methods GrandIdBuilderEnvironmentExtensions.UseTestEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) GrandIdBuilderEnvironmentExtensions.UseProductionEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder, String, String) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder, String, String, String) GrandIdBuilderSchemeExtensions.ConfigureBankId(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>)"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilderEnvironmentExtensions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilderEnvironmentExtensions.html",
    "title": "Class GrandIdBuilderEnvironmentExtensions | Active Login",
    "keywords": "Class GrandIdBuilderEnvironmentExtensions Inheritance System.Object GrandIdBuilderEnvironmentExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdBuilderEnvironmentExtensions Methods | Improve this Doc View Source UseProductionEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) Configures the GrandID client to use the production endpoint of GrandID REST API. Declaration public static IGrandIdBuilder UseProductionEnvironment(this IGrandIdBuilder builder, Action<IGrandIdEnvironmentConfiguration> configuration) Parameters Type Name Description IGrandIdBuilder builder System.Action < IGrandIdEnvironmentConfiguration > configuration Configure GrandID. Returns Type Description IGrandIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IGrandIdBuilder) Configures the GrandID client to a simulated, in memory implementation for development and/or test purposes. Declaration public static IGrandIdBuilder UseSimulatedEnvironment(this IGrandIdBuilder builder) Parameters Type Name Description IGrandIdBuilder builder Returns Type Description IGrandIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IGrandIdBuilder, String, String) Declaration public static IGrandIdBuilder UseSimulatedEnvironment(this IGrandIdBuilder builder, string givenName, string surname) Parameters Type Name Description IGrandIdBuilder builder System.String givenName System.String surname Returns Type Description IGrandIdBuilder | Improve this Doc View Source UseSimulatedEnvironment(IGrandIdBuilder, String, String, String) Declaration public static IGrandIdBuilder UseSimulatedEnvironment(this IGrandIdBuilder builder, string givenName, string surname, string personalIdentityNumber) Parameters Type Name Description IGrandIdBuilder builder System.String givenName System.String surname System.String personalIdentityNumber Returns Type Description IGrandIdBuilder | Improve this Doc View Source UseTestEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) Configures the GrandID client to use the test endpoint of GrandID REST API. Declaration public static IGrandIdBuilder UseTestEnvironment(this IGrandIdBuilder builder, Action<IGrandIdEnvironmentConfiguration> configuration) Parameters Type Name Description IGrandIdBuilder builder System.Action < IGrandIdEnvironmentConfiguration > configuration Configure GrandID. Returns Type Description IGrandIdBuilder"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilderSchemeExtensions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdBuilderSchemeExtensions.html",
    "title": "Class GrandIdBuilderSchemeExtensions | Active Login",
    "keywords": "Class GrandIdBuilderSchemeExtensions Inheritance System.Object GrandIdBuilderSchemeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdBuilderSchemeExtensions Methods | Improve this Doc View Source AddBankIdChooseDevice(IGrandIdBuilder) Declaration public static IGrandIdBuilder AddBankIdChooseDevice(this IGrandIdBuilder builder) Parameters Type Name Description IGrandIdBuilder builder Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdChooseDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdChooseDevice(this IGrandIdBuilder builder, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdChooseDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdChooseDevice(this IGrandIdBuilder builder, string authenticationScheme, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdChooseDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdChooseDevice(this IGrandIdBuilder builder, string authenticationScheme, string displayName, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.String displayName System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdOtherDevice(IGrandIdBuilder) Declaration public static IGrandIdBuilder AddBankIdOtherDevice(this IGrandIdBuilder builder) Parameters Type Name Description IGrandIdBuilder builder Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdOtherDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdOtherDevice(this IGrandIdBuilder builder, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdOtherDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdOtherDevice(this IGrandIdBuilder builder, string authenticationScheme, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdOtherDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdOtherDevice(this IGrandIdBuilder builder, string authenticationScheme, string displayName, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.String displayName System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdSameDevice(IGrandIdBuilder) Declaration public static IGrandIdBuilder AddBankIdSameDevice(this IGrandIdBuilder builder) Parameters Type Name Description IGrandIdBuilder builder Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdSameDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdSameDevice(this IGrandIdBuilder builder, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdSameDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdSameDevice(this IGrandIdBuilder builder, string authenticationScheme, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source AddBankIdSameDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) Declaration public static IGrandIdBuilder AddBankIdSameDevice(this IGrandIdBuilder builder, string authenticationScheme, string displayName, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.String authenticationScheme System.String displayName System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder | Improve this Doc View Source ConfigureBankId(IGrandIdBuilder, Action<GrandIdBankIdOptions>) Configures options that will apply to all GrandID BankID schemes. Declaration public static IGrandIdBuilder ConfigureBankId(this IGrandIdBuilder builder, Action<GrandIdBankIdOptions> configureOptions) Parameters Type Name Description IGrandIdBuilder builder System.Action < GrandIdBankIdOptions > configureOptions Returns Type Description IGrandIdBuilder"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdClaimTypes.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdClaimTypes.html",
    "title": "Class GrandIdClaimTypes | Active Login",
    "keywords": "Class GrandIdClaimTypes Inheritance System.Object GrandIdClaimTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdClaimTypes Fields | Improve this Doc View Source AuthenticationMethod Declaration public const string AuthenticationMethod = \"amr\" Field Value Type Description System.String | Improve this Doc View Source Birthdate Declaration public const string Birthdate = \"birthdate\" Field Value Type Description System.String | Improve this Doc View Source Expires Declaration public const string Expires = \"exp\" Field Value Type Description System.String | Improve this Doc View Source FamilyName Declaration public const string FamilyName = \"family_name\" Field Value Type Description System.String | Improve this Doc View Source Gender Declaration public const string Gender = \"gender\" Field Value Type Description System.String | Improve this Doc View Source GivenName Declaration public const string GivenName = \"given_name\" Field Value Type Description System.String | Improve this Doc View Source IdentityProvider Declaration public const string IdentityProvider = \"idp\" Field Value Type Description System.String | Improve this Doc View Source Name Declaration public const string Name = \"name\" Field Value Type Description System.String | Improve this Doc View Source Role Declaration public const string Role = \"role\" Field Value Type Description System.String | Improve this Doc View Source Subject Declaration public const string Subject = \"sub\" Field Value Type Description System.String | Improve this Doc View Source SwedishPersonalIdentityNumber Declaration public const string SwedishPersonalIdentityNumber = \"swedish_personal_identity_number\" Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdConstants.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdConstants.html",
    "title": "Class GrandIdConstants | Active Login",
    "keywords": "Class GrandIdConstants Inheritance System.Object GrandIdConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdConstants Fields | Improve this Doc View Source AuthenticationPropertyItemSwedishPersonalIdentityNumber Declaration public const string AuthenticationPropertyItemSwedishPersonalIdentityNumber = \"swedishPersonalIdentityNumber\" Field Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdDefaults.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdDefaults.html",
    "title": "Class GrandIdDefaults | Active Login",
    "keywords": "Class GrandIdDefaults Inheritance System.Object GrandIdDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdDefaults Fields | Improve this Doc View Source BankIdAuthenticationMethodName Declaration public const string BankIdAuthenticationMethodName = \"grandid-bankid\" Field Value Type Description System.String | Improve this Doc View Source BankIdChooseDeviceAuthenticationScheme Declaration public const string BankIdChooseDeviceAuthenticationScheme = \"grandid-bankid-choosedevice\" Field Value Type Description System.String | Improve this Doc View Source BankIdChooseDeviceCallbackPath Declaration public static readonly PathString BankIdChooseDeviceCallbackPath Field Value Type Description Microsoft.AspNetCore.Http.PathString | Improve this Doc View Source BankIdChooseDeviceDisplayName Declaration public const string BankIdChooseDeviceDisplayName = \"BankID\" Field Value Type Description System.String | Improve this Doc View Source BankIdOtherDeviceAuthenticationScheme Declaration public const string BankIdOtherDeviceAuthenticationScheme = \"grandid-bankid-otherdevice\" Field Value Type Description System.String | Improve this Doc View Source BankIdOtherDeviceCallbackPath Declaration public static readonly PathString BankIdOtherDeviceCallbackPath Field Value Type Description Microsoft.AspNetCore.Http.PathString | Improve this Doc View Source BankIdOtherDeviceDisplayName Declaration public const string BankIdOtherDeviceDisplayName = \"BankID (Annan enhet)\" Field Value Type Description System.String | Improve this Doc View Source BankIdSameDeviceAuthenticationScheme Declaration public const string BankIdSameDeviceAuthenticationScheme = \"grandid-bankid-samedevice\" Field Value Type Description System.String | Improve this Doc View Source BankIdSameDeviceCallbackPath Declaration public static readonly PathString BankIdSameDeviceCallbackPath Field Value Type Description Microsoft.AspNetCore.Http.PathString | Improve this Doc View Source BankIdSameDeviceDisplayName Declaration public const string BankIdSameDeviceDisplayName = \"BankID (Denna enhet)\" Field Value Type Description System.String | Improve this Doc View Source IdentityProviderName Declaration public const string IdentityProviderName = \"GrandID\" Field Value Type Description System.String | Improve this Doc View Source MaximumSessionLifespan Declaration public static readonly TimeSpan MaximumSessionLifespan Field Value Type Description System.TimeSpan"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdExtensions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdExtensions.html",
    "title": "Class GrandIdExtensions | Active Login",
    "keywords": "Class GrandIdExtensions Inheritance System.Object GrandIdExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public static class GrandIdExtensions Methods | Improve this Doc View Source AddGrandId(AuthenticationBuilder, Action<IGrandIdBuilder>) Declaration public static AuthenticationBuilder AddGrandId(this AuthenticationBuilder builder, Action<IGrandIdBuilder> grandId) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder System.Action < IGrandIdBuilder > grandId Returns Type Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdHandler-2.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdHandler-2.html",
    "title": "Class GrandIdHandler<TOptions, TGetSessionResponse> | Active Login",
    "keywords": "Class GrandIdHandler<TOptions, TGetSessionResponse> Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationHandler <TOptions> Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler <TOptions> GrandIdHandler<TOptions, TGetSessionResponse> GrandIdBankIdHandler Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler Inherited Members Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.CreateEventsAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ShouldHandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleRequestAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAuthenticateAsync() Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.Events Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext) Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeEventsAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeHandlerAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ResolveTarget(System.String) Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceSafeAsync() Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Scheme Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Options Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Context Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Request Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Response Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPath Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPathBase Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Logger Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Clock Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OptionsMonitor Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.CurrentUri System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public abstract class GrandIdHandler<TOptions, TGetSessionResponse> : RemoteAuthenticationHandler<TOptions>, IAuthenticationRequestHandler, IAuthenticationHandler where TOptions : GrandIdOptions, new() Type Parameters Name Description TOptions TGetSessionResponse Constructors | Improve this Doc View Source GrandIdHandler(IOptionsMonitor<TOptions>, ILoggerFactory, UrlEncoder, ISystemClock) Declaration protected GrandIdHandler(IOptionsMonitor<TOptions> options, ILoggerFactory loggerFactory, UrlEncoder encoder, ISystemClock clock) Parameters Type Name Description Microsoft.Extensions.Options.IOptionsMonitor <TOptions> options Microsoft.Extensions.Logging.ILoggerFactory loggerFactory System.Text.Encodings.Web.UrlEncoder encoder Microsoft.AspNetCore.Authentication.ISystemClock clock Methods | Improve this Doc View Source GetClaims(TGetSessionResponse) Declaration protected abstract IEnumerable<Claim> GetClaims(TGetSessionResponse loginResult) Parameters Type Name Description TGetSessionResponse loginResult Returns Type Description System.Collections.Generic.IEnumerable < System.Security.Claims.Claim > | Improve this Doc View Source GetRedirectUrlAsync(AuthenticationProperties, String) Declaration protected abstract Task<string> GetRedirectUrlAsync(AuthenticationProperties properties, string absoluteReturnUrl) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties properties System.String absoluteReturnUrl Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source GetSessionResponseAsync(String) Declaration protected abstract Task<TGetSessionResponse> GetSessionResponseAsync(string sessionId) Parameters Type Name Description System.String sessionId Returns Type Description System.Threading.Tasks.Task <TGetSessionResponse> | Improve this Doc View Source HandleChallengeAsync(AuthenticationProperties) Declaration protected override async Task HandleChallengeAsync(AuthenticationProperties properties) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties properties Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties) | Improve this Doc View Source HandleRemoteAuthenticateAsync() Declaration protected override async Task<HandleRequestResult> HandleRemoteAuthenticateAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Authentication.HandleRequestResult > Overrides Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleRemoteAuthenticateAsync() Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdOptions.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdOptions.html",
    "title": "Class GrandIdOptions | Active Login",
    "keywords": "Class GrandIdOptions Inheritance System.Object Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions GrandIdOptions GrandIdBankIdOptions Inherited Members Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(System.String) Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate() Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.BackchannelHttpHandler Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Backchannel Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.DataProtectionProvider Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.AccessDeniedPath Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.ReturnUrlParameter Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SignInScheme Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.RemoteAuthenticationTimeout Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Events Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.SaveTokens Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CorrelationCookie Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ClaimsIssuer Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.EventsType Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefault Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardAuthenticate Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardChallenge Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardForbid Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignIn Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardSignOut Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ForwardDefaultSelector System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public abstract class GrandIdOptions : RemoteAuthenticationOptions Properties | Improve this Doc View Source AuthenticationMethodName Declaration public abstract string AuthenticationMethodName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IdentityProviderName Declaration public string IdentityProviderName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IssueAuthenticationMethodClaim Declaration public bool IssueAuthenticationMethodClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IssueIdentityProviderClaim Declaration public bool IssueIdentityProviderClaim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StateCookie Declaration public CookieBuilder StateCookie { get; set; } Property Value Type Description Microsoft.AspNetCore.Http.CookieBuilder | Improve this Doc View Source StateDataFormat Declaration public ISecureDataFormat<GrandIdState> StateDataFormat { get; set; } Property Value Type Description Microsoft.AspNetCore.Authentication.ISecureDataFormat < GrandIdState > | Improve this Doc View Source TokenExpiresIn Declaration public TimeSpan? TokenExpiresIn { get; set; } Property Value Type Description System.Nullable < System.TimeSpan >"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdPostConfigureOptions-2.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.GrandIdPostConfigureOptions-2.html",
    "title": "Class GrandIdPostConfigureOptions<TOptions, THandler> | Active Login",
    "keywords": "Class GrandIdPostConfigureOptions<TOptions, THandler> Inheritance System.Object GrandIdPostConfigureOptions<TOptions, THandler> GrandIdBankIdPostConfigureOptions Implements Microsoft.Extensions.Options.IPostConfigureOptions <TOptions> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public abstract class GrandIdPostConfigureOptions<TOptions, THandler> : IPostConfigureOptions<TOptions> where TOptions : GrandIdOptions Type Parameters Name Description TOptions THandler Constructors | Improve this Doc View Source GrandIdPostConfigureOptions(IDataProtectionProvider) Declaration protected GrandIdPostConfigureOptions(IDataProtectionProvider dataProtection) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionProvider dataProtection Methods | Improve this Doc View Source PostConfigure(String, TOptions) Declaration public void PostConfigure(string name, TOptions options) Parameters Type Name Description System.String name TOptions options Implements Microsoft.Extensions.Options.IPostConfigureOptions<TOptions>"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.html",
    "title": "Namespace ActiveLogin.Authentication.GrandId.AspNetCore | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.GrandId.AspNetCore Classes GrandIdBankIdHandler GrandIdBankIdOptions GrandIdBankIdPostConfigureOptions GrandIdBuilder GrandIdBuilderEnvironmentExtensions GrandIdBuilderSchemeExtensions GrandIdClaimTypes GrandIdConstants GrandIdDefaults GrandIdExtensions GrandIdHandler<TOptions, TGetSessionResponse> GrandIdOptions GrandIdPostConfigureOptions<TOptions, THandler> IncompatibleSerializationVersion Interfaces IGrandIdBuilder IGrandIdEnvironmentConfiguration"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.IGrandIdBuilder.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.IGrandIdBuilder.html",
    "title": "Interface IGrandIdBuilder | Active Login",
    "keywords": "Interface IGrandIdBuilder Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public interface IGrandIdBuilder Properties | Improve this Doc View Source AuthenticationBuilder Declaration AuthenticationBuilder AuthenticationBuilder { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.AuthenticationBuilder Methods | Improve this Doc View Source ConfigureHttpClient(Action<HttpClient>) Declaration void ConfigureHttpClient(Action<HttpClient> configureHttpClient) Parameters Type Name Description System.Action < System.Net.Http.HttpClient > configureHttpClient | Improve this Doc View Source ConfigureHttpClientHandler(Action<SocketsHttpHandler>) Declaration void ConfigureHttpClientHandler(Action<SocketsHttpHandler> configureHttpClientHandler) Parameters Type Name Description System.Action < System.Net.Http.SocketsHttpHandler > configureHttpClientHandler | Improve this Doc View Source EnableHttpClient() Declaration void EnableHttpClient() Extension Methods GrandIdBuilderEnvironmentExtensions.UseTestEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) GrandIdBuilderEnvironmentExtensions.UseProductionEnvironment(IGrandIdBuilder, Action<IGrandIdEnvironmentConfiguration>) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder, String, String) GrandIdBuilderEnvironmentExtensions.UseSimulatedEnvironment(IGrandIdBuilder, String, String, String) GrandIdBuilderSchemeExtensions.ConfigureBankId(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdSameDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdOtherDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, String, Action<GrandIdBankIdOptions>) GrandIdBuilderSchemeExtensions.AddBankIdChooseDevice(IGrandIdBuilder, String, String, Action<GrandIdBankIdOptions>)"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.IGrandIdEnvironmentConfiguration.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.IGrandIdEnvironmentConfiguration.html",
    "title": "Interface IGrandIdEnvironmentConfiguration | Active Login",
    "keywords": "Interface IGrandIdEnvironmentConfiguration Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public interface IGrandIdEnvironmentConfiguration Properties | Improve this Doc View Source ApiKey Declaration string ApiKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source BankIdServiceKey Declaration string BankIdServiceKey { get; set; } Property Value Type Description System.String"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.IncompatibleSerializationVersion.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.IncompatibleSerializationVersion.html",
    "title": "Class IncompatibleSerializationVersion | Active Login",
    "keywords": "Class IncompatibleSerializationVersion Inheritance System.Object System.Exception IncompatibleSerializationVersion Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ActiveLogin.Authentication.GrandId.AspNetCore Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class IncompatibleSerializationVersion : Exception, ISerializable Constructors | Improve this Doc View Source IncompatibleSerializationVersion(String) Declaration public IncompatibleSerializationVersion(string type) Parameters Type Name Description System.String type Implements System.Runtime.Serialization.ISerializable"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.Models.GrandIdState.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.Models.GrandIdState.html",
    "title": "Class GrandIdState | Active Login",
    "keywords": "Class GrandIdState Inheritance System.Object GrandIdState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ActiveLogin.Authentication.GrandId.AspNetCore.Models Assembly : ActiveLogin.Authentication.GrandId.AspNetCore.dll Syntax public class GrandIdState Constructors | Improve this Doc View Source GrandIdState(AuthenticationProperties) Declaration public GrandIdState(AuthenticationProperties authenticationProperties) Parameters Type Name Description Microsoft.AspNetCore.Authentication.AuthenticationProperties authenticationProperties Properties | Improve this Doc View Source AuthenticationProperties Declaration public AuthenticationProperties AuthenticationProperties { get; } Property Value Type Description Microsoft.AspNetCore.Authentication.AuthenticationProperties"
  },
  "api/ActiveLogin.Authentication.GrandId.AspNetCore.Models.html": {
    "href": "api/ActiveLogin.Authentication.GrandId.AspNetCore.Models.html",
    "title": "Namespace ActiveLogin.Authentication.GrandId.AspNetCore.Models | Active Login",
    "keywords": "Namespace ActiveLogin.Authentication.GrandId.AspNetCore.Models Classes GrandIdState"
  },
  "articles/bankid.html": {
    "href": "articles/bankid.html",
    "title": "ActiveLogin.Authentication.BankId | Active Login",
    "keywords": "ActiveLogin.Authentication.BankId ActiveLogin.Authentication enables an application to support Swedish BankID (svenskt BankID) authentication and signing in .NET. The most common scenbario is to use Active Login for BankID auth/login, so most of the concepts will be described from that perspective. We've designed sign to follow the same patterns and amke sure we can share things like certificate handling etc. Table of contents Getting started 1. Preparation 2. Read the documentation 3. Install the NuGet package 3. Prepare your project 4. Get started in development 5. Use test or production environments 6. Monitoring Environments Simulated environment Simulated environment with no config Simulated environment with custom person info Test environment Production environment Full sample for production Sign Basic configuration samples Using client certificate from Azure KeyVault Using client certificate from custom source Adding schemas Customizing schemas Custom schema Customizing BankID options Concepts Storing certificates in Azure Claims Issuing BankID Certificate Policies Return URL for cancellation Handle missing or invalid state cookie Multi tenant scenario Customize the UI Event listeners Store data on auth completion Resolve the end user ip Resolve user data on Auth request Custom QR code generation Custom browser detection and launch info Use api wrapper only Running on Linux Localization Names of the person might be capitalized Cookies issued Browser support Getting started 1. Preparation Certificates BankID requires you to use a client certificate and trust a specific root CA-certificate. Read through the BankID Relying Party Guidelines . This ensures you have a basic understanding of the terminology as well as how the flow and security works. For test: We have (with the permission from BankID) embedded the SSL certificate ( FPTestcert3_20200618.pfx ) in the library. For production: Contact a reseller to get your very own client certificate for production. This will probably take a few business days to get sorted. Please ask for \"Direktupphandlad BankID\" as they otherwise might refer you to a broker/partner. If you haven't decided on using BankID, but want to try it out anyway there are test- and simulation possibilities. See Environments below. The root CA-certificates specified in BankID Relying Party Guidelines (#7 for Production and #8 for Test environment) needs to be trusted at the computer where the app will run. We have (with the permission from BankID) embedded these in the library for easy verification. 2. Read the documentation It is expected that you have a basic understanding of how ASP.NET , ASP.NET MVC and ASP.NET Authentication works before getting started. Active Login is designed to make it very easy to get started with BankID, but in the end you are responsible for making sure that you are complient with the technical guidelines and/or legal agreements. Therefore, before you start using Active Login, please read the documentation relevant to your needs. This will also make sure you understand the concepts better. BankID (Swedish) BankID (English) 3. Install the NuGet package ActiveLogin.Authentication is distributed as packages on NuGet , install using the tool of your choice, for example dotnet cli . dotnet add package ActiveLogin.Authentication.BankId.AspNetCore 3. Prepare your project The authentication modules for BankID is registered in your Program.cs . Depending on your setup, you will probably have to configure challenge and callbacks in AccountController.cs or similar. For the UI to work, it expects there to be a _Layout.cshtml available so that it can render within at @RenderBody() . The BankID packages have UI is not dependent on any UI library, but the samples uses Bootstrap , please make sure these styles are available in the _Layout.cshtml . Our Samples might give you an inspiration on how to do all these. 4. Get started in development BankID requires you to sign an agreement and receive a certificate used to identity you as a company. To get started and try it out the experience there is a simulated environment options available that uses an in-memory implementation. Great for development and testing. services .AddBankId(bankId => { bankId .AddDebugEventListener() .UseSimulatedEnvironment(); }); services .AddAuthentication() .AddBankIdAuth(bankId => { bankId .AddSameDevice(); }); 5. Use test or production environments To authenticate using a real BankID you need to receive the certificate. See details under Preperation above. Samples on how to use them in production are: services .AddBankId(bankId => { bankId .AddApplicationInsightsEventListener(options => { options.LogUserPersonalIdentityNumberHints = true; options.LogCertificateDates = true; }) .UseProductionEnvironment() .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate\")) .AddSameDevice() .AddOtherDevice() .UseQrCoderQrCodeGenerator() .UseUaParserDeviceDetection(); }); services .AddAuthentication() .AddBankIdAuth(bankId => { bankId .UseProductionEnvironment(); }); Note: .AddApplicationInsightsEventListener() requires the ActiveLogin.Authentication.BankId.AzureMonitor package. Note: .UseQrCoderQrCodeGenerator() requires the ActiveLogin.Authentication.BankId.QRCoder package. Note: .UseUaParserDeviceDetection() requires the ActiveLogin.Authentication.BankId.UAParser package. 6. Monitoring Active Login provides a structured way of generating and logging events. These coould be monitored to get statistics and health status of your BankID login method. Read more on the topic in Active Login Monitor . Environments Simulated environment For trying out quickly (without the need of certificates) you can use an in-memory implementation of the API by using .UseSimulatedEnvironment() . This could also be good when writing tests. Simulated environment with no config services .AddBankId(bankId => { bankId.UseSimulatedEnvironment(); }); Simulated environment with custom person info The faked name and personal identity number can also be customized like this. services .AddBankId(bankId => { bankId.UseSimulatedEnvironment(\"Alice\", \"Smith\", \"199908072391\") }); Test environment This will use the real REST API for BankID, connecting to the Test environment. It will automatically register both the root and client certificate, even though this behaviour can be disabled. A scenario might be that you want to use the same flow for both test and prod and therefore make sure that fetching the certificate from KeyVault works by trying that out for test. services .AddBankId(bankId => { bankId.UseTestEnvironment(); }); Disable adding the certificates: services .AddBankId(bankId => { bankId.UseTestEnvironment(useBankIdRootCertificate: false, useBankIdClientCertificate: false); }); Production environment This will use the real REST API for BankID, connecting to the Production environment. It requires you to have the client certificates described under Preparation above. services .AddBankId(bankId => { bankId.UseProductionEnvironment(); }); Disable adding the root certificates: services .AddBankId(bankId => { bankId.UseProductionEnvironment(useBankIdRootCertificate: false); }); Full sample for production Finally, a full sample on how to use BankID in production with client certificate from Azure KeyVault and trusting a custom root certificate. services .AddBankId(bankId => { .UseProductionEnvironment() .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate\")) .UseQrCoderQrCodeGenerator() .UseUaParserDeviceDetection(); }); services .AddAuthentication() .AddBankIdAuth(bankId => { bankId .AddSameDevice() .AddOtherDevice(); }); Sign Sign works very similar to auth, but canät utilize the \"built in\" support for schemes etc. So there are some differences. At first, you need to register both the common BankID logic (environment, cert etc) as well as the sign specific configration (devices). // Add Active Login - BankID services .AddBankId(bankId => { bankId.AddDebugEventListener(); bankId.UseQrCoderQrCodeGenerator(); bankId.UseUaParserDeviceDetection(); bankId.UseSimulatedEnvironment(); }); // Add Active Login - Sign services .AddBankIdSign(bankId => { bankId.AddSameDevice(BankIdSignDefaults.SameDeviceConfigKey, \"BankID (SameDevice)\", options => { }); bankId.AddOtherDevice(BankIdSignDefaults.OtherDeviceConfigKey, \"BankID (OtherDevice)\", options => { }); }); Once that is done you will be able to use these services in your application, for example in your controller: IBankIdSignConfigurationProvider : List the registered configuraitons (SameDevice / Other Device) IBankIdSignService : Initiate and resulve the result of sign flow Here is a minimal sample. See Standalone.MvcSample for more details. [AllowAnonymous] public class SignController : Controller { private readonly IBankIdSignConfigurationProvider _bankIdSignConfigurationProvider; private readonly IBankIdSignService _bankIdSignService; public SignController(IBankIdSignConfigurationProvider bankIdSignConfigurationProvider, IBankIdSignService bankIdSignService) { _bankIdSignConfigurationProvider = bankIdSignConfigurationProvider; _bankIdSignService = bankIdSignService; } public async Task<IActionResult> Index() { var configurations = await _bankIdSignConfigurationProvider.GetAllConfigurationsAsync(); var providers = configurations .Where(x => x.DisplayName != null) .Select(x => new ExternalProvider(x.DisplayName ?? x.Key, x.Key)); var viewModel = new BankIdViewModel(providers, \"~/\"); return View(viewModel); } public IActionResult Sign(string provider) { var props = new BankIdSignProperties(\"The info displayed for the user\") // The user visible data { UserNonVisibleData = new byte[1024], // Whataver data you want to sign UserVisibleDataFormat = BankIdUserVisibleDataFormats.SimpleMarkdownV1, // The format of the user visible data, use empty or the markwodn constant Items = { {\"returnUrl\", \"~/\"}, {\"scheme\", provider} } }; var returnPath = $\"{Url.Action(nameof(Callback))}?provider={provider}\"; return this.BankIdInitiateSign(props, returnPath, provider); } [HttpPost] public async Task<IActionResult> Callback(string provider) { var result = await _bankIdSignService.GetSignResultAsync(provider); if (result?.Succeeded != true) { throw new Exception(\"Sign error\"); } // Parse these to store the signed values var ocspResponse = result.BankIdCompletionData?.OcspResponse; var signature = result.BankIdCompletionData?.Signature; return Redirect(result.Properties?.Items[\"returnUrl\"] ?? \"~/\"); } } Basic configuration samples Using client certificate from Azure KeyVault services.AddBankId(bankId => { bankId .UseProductionEnvironment() .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate\")) ... }); Using client certificate from custom source services.AddBankId(bankId => { bankId .UseProductionEnvironment() .UseClientCertificate(() => new X509Certificate2( ... )) ... }); Adding schemas Same device : Launches the BankID app on the same device, no need to enter any personal identity number. Other device : The user manually launches the app the smartphone and scans the QR code. services .AddAuthentication() .AddBankIdAuth(bankId => { bankId .AddSameDevice() .AddOtherDevice(); }); Customizing schemas By default, Add*Device will use predefined schemas and display names, but they can be changed. services .AddAuthentication() .AddBankIdAuth(bankId => { bankId .AddSameDevice(\"custom-auth-scheme\", \"Custom display name\", options => { ... }) .AddOtherDevice(BankIdDefaults.OtherDeviceAuthenticationScheme, \"Custom display name\", options => { ... }); }); Customizing BankID options BankId options allows you to set and override some options such as these. .AddOtherDevice(options => { // If the user can use biometric identification such as fingerprint or face recognition options.BankIdAllowBiometric = false; // Limit possible login methods to, for example, only allow BankID on smartcard. options.BankIdCertificatePolicies = BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(...); }); If you want to apply some options for all BankID schemes, you can do so by using .Configure(...) . .Configure(options => { options.BankIdCertificatePolicies = BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(...); }); Concepts Storing certificates in Azure These are only necessary if you plan to store your certificates in Azure KeyVault (recommended) and use the extension for easy integration with BankID. Deploy Azure KeyVault to your subscription. The ARM-template available in AzureProvisioningSample contains configuration that creates a KeyVault and enables Managed Service Identity for the App Service. Import the certificates to your Azure Key Vault. Add the following to your config, the secret identifier and auth settings. { \"ActiveLogin:BankId:ClientCertificate\": { \"AzureKeyVaultUri\": \"TODO-ADD-YOUR-VALUE\", \"AzureKeyVaultSecretName\": \"TODO-ADD-YOUR-VALUE\" } } Certificates are secrets When configuring the AzureKeyVaultSecretName, the name is retrieved from the Certificates rather than Secrets in the Azure Portal. It is called a secret in the API since this is how Azure Key Vault exposes certificates with private keys. You can read more about the reasoning behind this in this blog post or in the very extensive official documentation . KeyVault credentials By default, the DefaultAzureCredential will be used as credentials. For info on how to use that, see Microsoft docs . The minimal configuration then looks like this: { \"ActiveLogin:BankId:ClientCertificate\" { \"AzureKeyVaultUri\": \"TODO-ADD-YOUR-VALUE\", \"AzureKeyVaultSecretName\": \"TODO-ADD-YOUR-VALUE\" } } You can override the specific managed identity client id to use: { \"ActiveLogin:BankId:ClientCertificate\" { \"AzureKeyVaultUri\": \"TODO-ADD-YOUR-VALUE\", \"AzureKeyVaultSecretName\": \"TODO-ADD-YOUR-VALUE\", \"AzureManagedIdentityClientId\": \"\" } } You can also override to use client credentials: { \"ActiveLogin:BankId:ClientCertificate\" { \"AzureKeyVaultUri\": \"TODO-ADD-YOUR-VALUE\", \"AzureKeyVaultSecretName\": \"TODO-ADD-YOUR-VALUE\", \"AzureAdTenantId\": \"\", \"AzureAdClientId\": \"\", \"AzureAdClientSecret\": \"\" } } They will be evaluated in the order: ClientSecretCredential with AzureAdTenantId + AzureAdClientId + AzureAdClientSecret (if specified) DefaultAzureCredential with AzureManagedIdentityClientId (if specified) DefaultAzureCredential Claims Issuing Active Login aims to issue the most relevant claims that can be extracted from the information provided by BankID. There are scenarios where you might like to change issued claims or add new ones yourself. We've made the claims issuing pipeline pluggable so you can add your own transformer. All of the default claims behaviour are implemented in BankIdDefaultClaimsTransformer and this is the only transformer added by default. Implementing IBankIdClaimsTransformer You are also able to create your own transformer by inheriting it from the interface IBankIdClaimsTransformer . BankIdClaimsTransformationContext will contain the relevant context, and also the already issued list of claims that you can transform. Once implemented, register your implementation using: services .AddAuthentication() .AddBankIdAuth(bankId => { bankId.AddSameDevice(); bankId.AddClaimsTransformer<BankIdYourCustomClaimsTransformer>(); }); The claims beeing issued by default have the names/keys specified in the public class BankIdClaimTypes so you can refer to them by these constants. Example: Add orderref as txn claim If the application that uses ActiveLogin BankId needs to keep an audit trail of the sign-in, the txn claim could preferably be used for this. From OpenId Connect for Identity Assurance : The txn Claim as defined in [RFC8417] is used in the context of this extension to build audit trails across the parties involved in an OpenID Connect transaction. public class BankIdTxnClaimsTransformer : IBankIdClaimsTransformer { public Task TransformClaims(BankIdClaimsTransformationContext context) { context.AddClaim(\"txn\", context.BankIdOrderRef); return Task.CompletedTask; } } Note: If the txn claim is issued, you are responsible for making sure to keep relevant audit informaiton given that session. See the OpenId Connect spec linked above for more information. Example: Add birthdate and gender claims It is possible to extract some information from the swedish personal identity number. In previous versions of Active Login this was a built in feature, but is now removed from the default set of claims beeing issued. If you still are interested in such functionality, you can easily implement the functionality using the code below. See information on the limitations of hint information in the ActiveLogin.Identity readme . public class BankIdPinHintClaimsTransformer : IBankIdClaimsTransformer { private const string GenderJwtType = \"gender\"; private const string BirthdateJwtType = \"birthdate\"; public Task TransformClaims(BankIdClaimsTransformationContext context) { var personalIdentityNumber = PersonalIdentityNumber.Parse(context.PersonalIdentityNumber); // Add gender from gender hint // See https://github.com/ActiveLogin/ActiveLogin.Identity#hints for limitations var jwtGender = GetJwtGender(personalIdentityNumber.GetGenderHint()); if (!string.IsNullOrEmpty(jwtGender)) { context.AddClaim(GenderJwtType, jwtGender); } // Add birthdate from birthdate hint // See https://github.com/ActiveLogin/ActiveLogin.Identity#hints for limitations var jwtBirthdate = GetJwtBirthdate(personalIdentityNumber.GetDateOfBirthHint()); context.AddClaim(BirthdateJwtType, jwtBirthdate); return Task.CompletedTask; } private static string GetJwtGender(Gender gender) { // Specified in: http://openid.net/specs/openid-connect-core-1_0.html#rfc.section.5.1 return gender switch { Gender.Female => \"female\", Gender.Male => \"male\", _ => string.Empty, }; } private static string GetJwtBirthdate(DateTime birthdate) { // Specified in: http://openid.net/specs/openid-connect-core-1_0.html#rfc.section.5.1 return birthdate.Date.ToString(\"yyyy-MM-dd\"); } } BankID Certificate Policies BankId options allows you to set a list of certificate policies and there is a class available to help you out with this. .AddOtherDevice(options => { options.BankIdCertificatePolicies = BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(BankIdCertificatePolicy.BankIdOnFile, BankIdCertificatePolicy.MobileBankId); }); Because the policies have different values for test and production environment, you need to use either .GetPoliciesForProductionEnvironment() or .GetPoliciesForTestEnvironment() depending on what environment you are using. Example: .AddOtherDevice(options => { var policies = new[] { BankIdCertificatePolicy.BankIdOnFile, BankIdCertificatePolicy.MobileBankId }; if(isProductionEnvironment) { options.BankIdCertificatePolicies = BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(policies); } else { options.BankIdCertificatePolicies = BankIdCertificatePolicies.GetPoliciesForTestEnvironment(policies); } }); Return URL for cancellation If a user cancels the login, the user will be redirected to the cancelReturnUrl . The defaults for cancellation are as follows: Same Device Scheme returns to scheme selection Other Device Scheme returns to scheme selection when using QR codes Other Device Scheme returns to PIN input when using PIN input instead of QR codes It is possible to override the default navigation when cancelling an authentication request. The URL used for navigation is set through the cancelReturnUrl item in the AuthenticationProperties passed in the authentication challenge. var props = new AuthenticationProperties { RedirectUri = Url.Action(nameof(ExternalLoginCallback)), Items = { { \"returnUrl\", \"~/\" }, { \"cancelReturnUrl\", \"~/some-custom-cancellation-url\" }, { \"scheme\", provider } } }; return Challenge(props, provider); Handle missing or invalid state cookie If the user navigates directly to the BankdID status page ( /ActiveLogin/BankId/Auth ) the state cookie ( __ActiveLogin.BankIdState ) will be missing. If that happens, the flow will fail. By default, the user will be redirected back to the cancelReturnUrl , see Setting the return URL for cancellation . This behaviour can be overriden by implementing IBankIdInvalidStateHandler and adding that to the IOC-container. A simple sample of such handler is: public class SampleInvalidStateHandler : IBankIdInvalidStateHandler { public Task HandleAsync(HttpContext httpContext, BankIdInvalidStateContext invalidStateContext) { httpContext.Response.StatusCode = StatusCodes.Status500InternalServerError; return Task.CompletedTask; } } Multi tenant scenario With the current architecture of Active Login all services are registered \"globally\" and you can't call .AddBankId() more than once. To run Active Login in a multi tenant scenario, where different customers should use different certificates, you could register multiple certificates and on runtime select the correct one per request. To register multiple certificates you need to use the .AddClientCertificate...() instead of .UseClientCertificate...() as the .Use...() version will overwrite any existing certificates registered with the http client handler. With our current solution, this requires you to disable pooling of the SocketsHttpHandler so we've decided not to ship that code in the NuGet-package, but below you'll find a sample on how it could be configured. We hope to redesign this in the future. Note: The code below is a sample and because it disables PooledConnection it might (and will) have performance implications. internal static class BankIdBuilderExtensions { public static IBankIdBuilder UseClientCertificateResolver(this IBankIdBuilder builder, Func<ServiceProvider, X509CertificateCollection, string, X509Certificate> configureClientCertificateResolver) { builder.ConfigureHttpClientHandler((serviceProvider, httpClientHandler) => { httpClientHandler.PooledConnectionLifetime = TimeSpan.Zero; httpClientHandler.SslOptions.LocalCertificateSelectionCallback = (sender, host, certificates, certificate, issuers) => configureClientCertificateResolver(serviceProvider, certificates, host); }); return builder; } } public class Startup { public void ConfigureServices(IServiceCollection services) { // ... services .AddBankId(bankId => { bankId .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate1\")) .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate2\")) .UseClientCertificateFromAzureKeyVault(configuration.GetSection(\"ActiveLogin:BankId:ClientCertificate3\")) .UseClientCertificateResolver((serviceCollection, certificates, hostname) => { // Apply logic here to select the correct certificate return certificates[0]; }); // ... } } } Customize the UI Active Login comes with predefined views that you can use, but maybe you'd rather use your own views to customize layout or behavior. The UI is bundled into the package as a Razor Class Library, a technique that allows to override the parts you want to customize . The Views and Controllers that can be customized can be found in the GitHub repo . To override the default UI your web project, create the following folder: Areas/ActiveLogin/Views/Shared In this folder, you can then create any of the partials and MVC will then discover your partials and use any of them before ours. It's still possible to call our partials if you still want to use them. Init.cshtml _Wrapper.cshtml _Form.cshtml _Status.cshtml _Script.cshtml _Style.cshtml _Spinner.cshtml If you want, you can override the UI for Auth and Sign with different templates. Do so by placing the files in one of these folders: Areas/ActiveLogin/Views/BankIdUiAuth Areas/ActiveLogin/Views/BankIdUiSign See the MVC sample to see this in action, as demonstrated here . Event listeners During the login flow, quite a lot of things are happening and using our event listeners you can listen and act on those events. By implementing and regestering IBankIdEventListener you will be notified when an event occurs. A common scenario is logging. Multiple event listeners can be registered. BankIdEvent is the base class for all events which all events will inherit from. Each event might (and in most cases will) have unique properties relevant for that specific event. Event types At the moment, we trigger the events listed below. They all have unique event properties relevant to the event type. AspNet BankIdAspNetChallengeSuccessEvent BankIdAspNetAuthenticateSuccessEvent BankIdAspNetAuthenticateFailureEvent Auth BankIdAuthSuccessEvent BankIdAuthErrorEvent Sign BankIdSignSuccessEvent BankIdSignErrorEvent Collect BankIdCollectPendingEvent BankIdCollectCompletedEvent BankIdCollectFailureEvent BankIdCollectErrorEvent Cancel BankIdCancelSuccessEvent BankIdCancelErrorEvent Sample implementation public class BankIdSampleEventListener : IBankIdEventListener { public Task HandleAsync(BankIdEvent bankIdEvent) { Console.WriteLine($\"{bankIdEvent.EventTypeName}: {bankIdEvent.EventSeverity}\"); return Task.CompletedTask; } } services .AddBankId(bankId => { bankId.AddEventListener<BankIdSampleEventListener>(); }); Built in event listeners BankIdDebugEventListener BankIdDebugEventListener will listen for all events and write them as serialized JSON to the debug log using ILogger.LogDebug(...) . Call bankId.AddDebugEventListener() to enable it. Good to have for local development to see all details about what is happening. services .AddBankId(bankId => { bankId.AddDebugEventListener(); }); BankIdApplicationInsightsEventListener BankIdApplicationInsightsEventListener will listen for all events and write them to Application Insights. Call bankId.AddApplicationInsightsEventListener() to enable it. Note that you can supply options to enable logging of metadata, such as personal identity number, age and IP. Note: This event listener is available is available through a separate package called ActiveLogin.Authentication.BankId.AzureMonitor . services .AddBankId(bankId => { bankId.AddApplicationInsightsEventListener(); }); By default it will use whatever InstrumentationKey is registered with the application. There are overloads available so you can customize this: services .AddBankId(bankId => { bankId.AddApplicationInsightsEventListener(\"CUSTOM_CONNECTION_STRING\"); }); You can also customize what kind of data should be logged together with the Application Insight events. For example: services .AddBankId(bankId => { bankId.AddApplicationInsightsEventListener(options => { options.LogUserPersonalIdentityNumber = false; options.LogUserPersonalIdentityNumberHints = true; options.LogUserNames = false; options.LogDeviceIpAddress = false; options.LogCertificateDates = true; // And more... }); }); BankIdLoggerEventListener BankIdLoggerEventListener will listen for all events and write them with a descriptive text to the log using ILogger.Log(...) . This listener is registered by default on startup, se info below if you want to clear the default listeners. Default registered event listeners By default, two event listeners will be enabled: BankIdLoggerEventListener (Log all events to ILogger ) BankIdResultStoreEventListener (Map the completion event for IBankIdResultStore , see info below under Store data on auth completion .) If you want to remove those implementations, remove any class implementing IBankIdEventListener from the ASP.NET Core services in your Startup.cs : services.RemoveAll(typeof(IBankIdEventListener)); Store data on auth completion When the login flow is completed and the collect request to BankID returns data, any class implementing IBankIdResultStore registered in the DI will be called. There is a shorthand method ( AddResultStore ) on the BankIdBuilder to register the implementation. Note: IBankIdResultStore is just a shorthand for the BankIdCollectCompletedEvent as described above. Sample implementation: public class BankIdResultSampleLoggerStore : IBankIdResultStore { private readonly EventId _eventId = new EventId(101, \"StoreCollectCompletedCompletionData\"); private readonly ILogger<BankIdResultTraceLoggerStore> _logger; public BankIdResultSampleLoggerStore(ILogger<BankIdResultTraceLoggerStore> logger) { _logger = logger; } public Task StoreCollectCompletedCompletionData(string orderRef, CompletionData completionData) { _logger.LogTrace(_eventId, \"Storing completion data for OrderRef '{OrderRef}' (UserPersonalIdentityNumber: '{UserPersonalIdentityNumber}')\", orderRef, completionData.User.PersonalIdentityNumber); return Task.CompletedTask; } } services .AddBankId(bankId => { bankId.AddResultStore<BankIdResultSampleLoggerStore>(); }); The default implementation will log all data to the tracelog. If you want to remove that implementation, remove any class implementing IBankIdResultStore from the ASP.NET Core services in your Startup.cs : services.RemoveAll(typeof(IBankIdResultStore)); Resolve the end user ip In some scenarios, like running behind a proxy, you might want to resolve the end user IP yourself and override the default implementaion. Either register a class implementing IBankIdEndUserIpResolver : services.AddTransient<IBankIdEndUserIpResolver, EndUserIpResolver>(); Resolve user data on Auth request BankID allows you to display a text during authentication to describe the intent. Active Login allows you to set these parameters when authenticating: UserVisibleData UserNonVisibleData UserVisibleDataFormat These can either be set as static data during startup in Program.cs or dynamically by overiding the interface IBankIdAuthRequestUserDataResolver . Sample of static text without formatting: bankId.UseAuthRequestUserData(authUserData => { authUserData.UserVisibleData = \"Login to your account at Active Login\"; }); Sample of static text with formatting: bankId.UseAuthRequestUserData(authUserData => { var message = new StringBuilder(); message.AppendLine(\"# Active Login\"); message.AppendLine(); message.AppendLine(\"Welcome to the *Active Login* demo.\"); authUserData.UserVisibleData = message.ToString(); authUserData.UserVisibleDataFormat = BankIdUserVisibleDataFormats.SimpleMarkdownV1; }); For more advanced scenarios, you can generate the user data dynamically by implementing IBankIdAuthRequestUserDataResolver : public class BankIdAuthRequestDynamicUserDataResolver : IBankIdAuthRequestUserDataResolver { public Task<BankIdAuthUserData> GetUserDataAsync(BankIdAuthRequestContext authRequestContext, HttpContext httpContext) { return Task.FromResult(new BankIdAuthUserData() { UserVisibleData = \"*Time:* \" + DateTime.Now.ToLongTimeString(), UserVisibleDataFormat = BankIdUserVisibleDataFormats.SimpleMarkdownV1 });; } } services.AddTransient<IBankIdAuthRequestUserDataResolver, BankIdAuthRequestDynamicUserDataResolver>(); Note: For sign, user data is mandatory, and therefore part of the initiate flow. Custom QR code generation By default the ActiveLogin.Authentication.BankId.QRCoder package is needed to generate QR codes using the UseQrCoderQrCodeGenerator extension method. If you wish to provide your own implementation of QR code generation simply implement the IBankIdQrCodeGenerator interface and add your implementation as a service. services.AddTransient<IBankIdQrCodeGenerator, CustomQrCodeGenerator>(); Custom browser detection and launch info The functionality provided tries to detect the device by looking at the user agent. We need to know what device is used to launch the BankId app and this differs from iOS/Android/PC/Mac. By implementing IBankIdLauncher you can customize exactly how to launch the app. It is very rare that you need to change this, but could be relevant if you use Active Login for authenticating a user in a native mobile app. services.AddTransient<IBankIdLauncher, CustomBankIdLauncher>(); By implementing IBankIdSupportedDeviceDetector you can override how the client device is detected. This info will be used by the default BankIdLauncher. services.AddTransient<IBankIdSupportedDeviceDetector, CustomBankIdSupportedDeviceDetector>(); Use UAParserDeviceDetector for device and browser detection In Active Login device and browser detection is required for example to determine which URL to use to launch the BankID app, according to the BankID Relaying party Guidelines. This logic is primarily encapsulated into IBankIdSupportedDeviceDetector . The default implementation provided in ActiveLogin.Authentication.BankId.AspNetCore is limited to supports the ~top 5 most common browsers on both iOS and Android. But since an incorrect browser detection can lead to an incorrect launch URL and result in a broken user flow, UAParserDeviceDetector in the ActiveLogin.Authentication.BankId.UAParser package should be used to support additional browsers. It has a dependency on package uap-csharp for improved user agent parsing. Use api wrapper only We have seperated the API-wrapper for BankID into a separate package so that you can use it in other scenarios we have not covered. They look like this and are both well documented using XML-comments. The constructor for these ApiClients takes an HttpClient and you need to configure that HttpClient with a BaseAddress , Tls12 , client certificates etc. depending on your needs. Note: The BankIdApiClient class below is available in the ActiveLogin.Authentication.BankId.Api package. public class BankIdApiClient : IBankIdApiClient { public Task<AuthResponse> AuthAsync(AuthRequest request) { ... } public Task<SignResponse> SignAsync(SignRequest request) { ... } public Task<CollectResponse> CollectAsync(CollectRequest request) { ... } public Task<CancelResponse> CancelAsync(CancelRequest request) { ... } } Note: The class BankIdUserVisibleDataFormats contains constants for valid values of userVisibleDataFormat , example: BankIdUserVisibleDataFormats.SimpleMarkdownV1 Localization The messages are already localized to English and Swedish using the official recommended texts. To select what language that is used you can for example use the localization middleware in ASP.NET Core . The user messages that will be displayed are provided through the implementation of IBankIdUserMessageLocalizer , so by overriding this you can customize the messages. services.AddTransient<IBankIdUserMessageLocalizer, CustomBankIdUserMessageLocalizer>(); Names of the person might be capitalized The names comes from the bank that the end user has, and some banks (due to legacy) stores all of the names in all caps (like ALICE SMITH ). We have choosen not to normalize the capitalization of the names as it´s hard or impossible to do so in a general way. Cookies issued The *.AspNetCore package will issue a cookie to make the auth flow work The cookie is called: __ActiveLogin.BankIdUiState The cookie is there to store state during the auth process, as the user will/might be redirected during the flow. The cookie is session based only and will be deleted once the auth process is finished and/or when the user closes the browser. Because it is strictly related to temp storage during auth, you should not have to inform the user about these specific cookies (according to the EU \"cookie law\" ). With the current implementaiton (following the convention from Microsoft ASP.NET) the usage of cookies is not optional. A more technical deep dive of the cookies can be found in this issue . Browser support We aim at supporting the latest version of all major browsers both on desktop and on mobile. All browsers on mobile are supported to show the UI, but the redirect flow have been tested and verified on these: iOS Safari Chrome Edge Firefox Opera Touch Android Chrome Firefox Edge Samsung Internet Opera Mini Note: Brave on iOS/Android identifies as Safari or Chrome for privacy reasons and will get wrong configuration, so the redirect flow will fail. Note: If you aim to support IE11 a polyfill for some JavaScript features we are using is needed. Fetch : https://github.com/github/fetch"
  },
  "articles/bankid-architechture.html": {
    "href": "articles/bankid-architechture.html",
    "title": "ActiveLogin.Authentication.BankId Architechture | Active Login",
    "keywords": "ActiveLogin.Authentication.BankId Architechture This document is aimed towards you who want to understand how ActiveLogin.Authentication.BankId works internally. This might be relevant if you want to contribute or review our code. The document isn't complete, but we try to write a note on the most important concepts. Auth The BanKID authentication implementation follows the standardized way of implementing an authentication provider in ASP.NET. As BankID requires us to display UI, we provide a built in one using the technique available throug Razor Class Libraries. Even though this UI is hosted as part of the application, from the authentication point of view, we treat it as a RemoteAuthenticationProvider as we need to redirect the user to such this UI and wait for the user to complete the auth flow. During the flow state is protected and stored in the quesy string and in a cookie. Auth Flow AuthenticationBuilderBankIdAuthExtensions AddBankIdAuth() Adds default implementations to IoC Adds ASP.NET Core authentication configuration Runs the IBankIdAuthBuilder pipeline BankIdAuthBuilderExtensions Add* Allows for adding schemes with relevant configuration for Same or Other device BankIdAuthHandler Inherits the RemoteAuthenticationHandler and therefore implements the IAuthenticationHandler BankIdUiAuthController Handles the UI for auth using MVC BankIdUiAuthApiController Handles the backend calls from the UI for init/statusd/cancel etc. graph TD App-->A A[AccountController.Login] -->B B[AccountController.ExternalLogin] -->|Challange|C C[BankIdUiAuthController.Init] --> D D([BankIdUiAuth/Init.cshtml]) E[BankIdUiAuthApiController.Initialize] F[BankIdUiAuthApiController.QrCode]-->D G[BankIdUiAuthApiController.Status]-->D D-->E D-->F D-->G D-->H H[AccountController.ExternalLoginCallback] -->|HttpContext.AuthenticateAsync|App Sign When we implemented BankId Auth we simply follow the concept and conventions Microsoft have when implementing a custom authentication provider. Scheme configuration, AuthenticationHandler, Challange, Claims etc. Sign is not such a common concept the therefore the underlying infrastructure is not there. We've tried to use the same basic concepts, but simplified (as we only need to support our own scenario). Sign Flow ServiceCollectionBankIdSignExtensions AddBankIdSign() Adds default implementations to IoC Adds ASP.NET Core configuration Runs the IBankIdSignBuilder pipeline BankIdSignBuilder AddConfig Similar to AddScheme with the difference that it does not register a callback URL, this is instead specified on the call to InitiateSign on BankIdSignService Will register the config in the IBankIdSignConfigurationProvider IBankIdSignConfigurationProvider Keeps a list of the registered BankIdSignConfiguration BankIdSignService Allows for inittiating the Sign flow and redirecting the user to the correct page Handles the callback when sign is done Get state from cookie, return to the url specified by consumer BankIdUiSignController Handles the UI for sign using MVC BankIdUiSignApiController Handles the backend calls from the UI for init/statusd/cancel etc. graph TD App-->A A[SignController.Index] -->B B[SignController.Sign] -->|IBankIdSignService.InitiateSignAsync|C C[BankIdUiSignController.Init] --> D D([BankIdUiSign/Init.cshtml]) E[BankIdUiSignApiController.Initialize] F[BankIdUiSignApiController.QrCode]-->D G[BankIdUiSignApiController.Status]-->D D-->E D-->F D-->G D-->H H[SignController.Callback] -->|IBankIdSignService.GetSignResultAsync|App"
  },
  "articles/BREAKINGCHANGES.html": {
    "href": "articles/BREAKINGCHANGES.html",
    "title": "Breaking changes in Active Login Authentication | Active Login",
    "keywords": "Breaking changes in Active Login Authentication Here we try to make a summary of the major breaking changes in things that you as a consumer of Active Login can use/extend/implement. Note: We might, and will probably, miss to document some of this - if so - please make a PR to this file and add a note on such breaking change. Version 6.0.3 Breaking changes in 6.0.3: As stated in #384 we had mixed up the UseClientCertificate() and AddClientCertificate() extension methods. These have now been reversed. This would be a breaking change if you add multiple certificates but should affect the majority of consumers. Version 6.0.0 Breaking changes between version 5.0.0 and 6.0.0. Note: Version is a major release with a large set of refactorings, name changes, and namespace changes. We have not covered it all, but tried to summarize the major ones below. In v6 we introduced Sign and wanted to refactor and rename things to make i consistent and easy to use both/either of them. This will cause some work when upgrading from a previous version. Renaming NuGet-packages As all of the support packages related to Azure etc. now only depend on the Core package, we have renamed a few packages to reflect this: ActiveLogin.Authentication.BankId.AspNetCore.Azure is now ActiveLogin.Authentication.BankId.AzureKeyVault ActiveLogin.Authentication.BankId.AspNetCore.AzureMonitor is now ActiveLogin.Authentication.BankId.AzureMonitor ActiveLogin.Authentication.BankId.AspNetCore.QRCoder is now ActiveLogin.Authentication.BankId.QRCoder ActiveLogin.Authentication.BankId.AspNetCore.UAParser is now ActiveLogin.Authentication.BankId.UAParser Auth functionality is now separate from core functionality This means that you need to register the common configuration first and then the auth specific conf, like this: services .AddBankId(bankId => { bankId.UseQrCoderQrCodeGenerator(); bankId.UseUaParserDeviceDetection(); ... }); services.AddAuthentication() .AddCookie() .AddBankIdAuth(bankId => { bankId.AddSameDevice(); bankId.AddOtherDevice(); }); Moving extension methods away from Microsoft.Extensions.DependencyInjection As per the Microsoft guideline about namespaces in libraries, we have moved our extension methods away from Microsoft.Extensions.DependencyInjection into their \"natural\" namespaces. This means that in your Program.cs you might need to import these namespaces: using ActiveLogin.Authentication.BankId.AspNetCore.Auth; using ActiveLogin.Authentication.BankId.AspNetCore.Sign; using ActiveLogin.Authentication.BankId.AzureKeyVault; using ActiveLogin.Authentication.BankId.AzureMonitor; using ActiveLogin.Authentication.BankId.Core; using ActiveLogin.Authentication.BankId.QrCoder; using ActiveLogin.Authentication.BankId.UaParser; Requires static files The stylesheet and the javascript for the client are now served as *.css and *.js files, so you need to enable static file support. app.UseStaticFiles(); Moving core functionality to separate package Core functionality that is not tied to web (AspNetCore) is moved into a separate package called ActiveLogin.Authentication.BankId.Core . If you directly use/extend/implement anything related to these areas you might have to update your references: IBankIdEndUserIpResolver IBankIdLauncher IBankIdResultStore IBankIdQrCodeGenerator IBankIdSupportedDeviceDetector IBankIdAuthRequestUserDataResolver IBankIdUserMessageLocalizer Events Renaming area and URL:s The area and URL:s used internally are now renamed: /BankIdAuthentication/BankId/Login is now /ActiveLogin/BankId/Auth /BankIdAuthentication/BankId/Api/* is now /ActiveLogin/BankId/Api/* Renaming views These views have been renamed: Login.cshtml is now Init.cshtml _Login.cshtml is now _Wrapper.cshtml _LoginForm.cshtml is now _Form.cshtml _LoginStatus.cshtml is now _Status.cshtml _LoginScript.cshtml is now _Script.cshtml _LoginStyle.cshtml is now _Style.cshtml _spinner.cshtml is now _Spinner.cshtml Note: As the area and controller have been renamed these files should now be placed in /Areas/ActiveLogin/Views/BankIdUiAuth/ or /Areas/ActiveLogin/Views/Shared/ . Note: Both the html, css and javascript have breaking changes. See history for respective file for exact changes. Renaming BankIdDefaults BankIdDefaults have been renamed into BankIdAuthDefaults and can now be found in the namespace ActiveLogin.Authentication.BankId.AspNetCore.Auth . The default values for SameDeviceAuthenticationScheme , OtherDeviceAuthenticationScheme , SameDeviceCallbackPath and OtherDeviceCallbackPath have also changed. Removing dependency on HttpContext in ActiveLogin.Authentication.BankId.Core No classes or interfaces in ActiveLogin.Authentication.BankId.Core will have a dependency on ``HttpContext . HttpContext would previously be passed as arguments to some methods defined in our interfaces. If you need HttpContext for your implementation, take a dependency on IHttpContextAccessor` to achieve the same functionality - this is how we solve it internally as well. Name changes for *Login To reflect that we now support both auth and sign we have renamed a lot of classes called something with Login . For example: BankIdLoginResult is now BankIdUiResult BankIdLoginOptions is now BankIdUiOptions Renaming metadata for Azure Monitor These properties have been renamed: AL_BankId_LoginOptions_LaunchType is now AL_BankId_Options_LaunchType AL_BankId_LoginOptions_UseQrCode is now AL_BankId_Options_UseQrCode BankIdDynamicEndUserIpResolver removed BankIdDynamicEndUserIpResolver removed is now removed. It was a shorthand for a scenario that should be very uncommon. lease use BankIdRemoteIpAddressEndUserIpResolver instead if you need to override end user ip retrieval. No manual input of PersonalIdentityNumber The use of personalIdentityNumber in the auth flow is no longer supported as BankID recommends to only using either animated QR codes or autostarttoken on the same device. Multi tenant If you register multiple client certificates (multi-tenant scenarios) you now need to use the .AddClientCertificate...() methods instead of .UseClientCertificate...() . .UseClientCertificate...() will remove any previously registered certificates. This applies to: .AddClientCertificate() .AddClientCertificateFromAzureKeyVault() Application Insights Connection String instead of Instrumentation Key When using Application Insights you should nowadays specify a connection string instead of just an instrumentation key . We've updated our methods that explicitly took an instrumentation key to instead take a connection string. This applies to: AddApplicationInsightsEventListener() Version 5.0.0 Breaking changes between version 4.0.0 and 5.0.0 Upgrade to .NET 6 We now require .NET 6 for the UI parts - so this requires you to upgrade your website that uses Active Login. Support BankID animated QR code in UI When implementing the animated QR code, we have had to update the client side script in LoginScript.cshtml . Look at the Git history for this file if you want to see the exact changes. This is only a breaking change if you have overridden this file with your own imlpementation. Use DefaultAzureCredentials when accessing KeyVault If using Azure KeyVault for your certificate, we have made chamges to how you authenticate/access that. See the documention for how it should be configured now. Drop support for GrandID When we created Active Login we added support for BankID directly as well as through Svensk E-identitet (GrandID). At the time we had cases where we were using both so it was natural to support them both. As time has gone by we see that basically, all new cases for us use the \"native\" BankID provider so that's where we have focused our efforts in Active Login. We have reached the point where it is not possible for us to support the GrandId packages anymore as part of this open-source project. In the end, we have just so much time that we want to spend where we think it benefits the most users, and the download counts on NuGet tell this is the native BankID parts. See more details in this announcement . Issue correct exp claim We previously issued an incorrect exp claim. This is now issued correctly, but might be a breaking change for you. Remove built in support for Birthdate and Gender claim The Birthdate and Gender claim are not issued by the library, but we have added docs on how to issue them yourself. Version 4.0.0 Breaking changes between version 3.0.0 and 4.0.0 Renaming events We have renamed events and event ids but the log messages should be the same. A full list of current event names and ids can be found in BankIdEventTypes.cs . The category of events logged to ILogger will now be BankIdLoggerEventListener . Removed UseClientCertificateResolver The UseClientCertificateResolver extension was removed, but docs was added with sample on how to achieve the same result. Refactor IBankIdLauncher IBankIdLauncher was refactored to return an object with launch info, not only launch URL."
  },
  "articles/CODE_OF_CONDUCT.html": {
    "href": "articles/CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Active Login",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at activelogin@activesolution.se. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4"
  },
  "articles/CONTRIBUTING.html": {
    "href": "articles/CONTRIBUTING.html",
    "title": "Contributing to Active Login | Active Login",
    "keywords": "Contributing to Active Login We are very open to community contributions to Active Login. You'll need a basic understanding of Git and GitHub to get started. Ways to contribute You can contribute in many different ways, for example: Find bugs and file issues Write documentation Add features Write tests Join in on discussions Contributing code Remember, if you contribute to code, always follow this: File an issue according to our templates. Describe what you want to do and get our feedback before starting to code. Write relevant tests for your code. Update documentation when relevant. Make a PR. We might (and probably will) reject PR:s that does not follow the requirements above. Discussion You can join our discussions on GitHub Discussions to discuss ideas and get early feedback:"
  },
  "articles/grandid.html": {
    "href": "articles/grandid.html",
    "title": "ActiveLogin.Authentication.GrandId | Active Login",
    "keywords": "ActiveLogin.Authentication.GrandId DISCLAIMER: The packages in ActiveLogin for Svensk E-identitet / GrandID are not beeing worked on anymore, and are therefore not supported. See this announcement for more info. The documentation below is provided as is and reflects the state for the 4.0.0 release of the GrandId packages. Table of contents NuGet Packages ActiveLogin.Authentication.GrandId.* Getting started 1. Preparation 2. Install the NuGet package 3. Prepare your project 4. Get started in development 5. Use test or production environments Samples Simulated environment Simulated environment with no config Simulated environment with custom person info Production environment Test environment Using schemes for same device and other device Using schemas for choose device Customizing schemas Customizing GrandID Api only NuGet Packages ActiveLogin.Authentication.GrandId.* Packages for GrandID (Svensk E-identitet). Project Description NuGet Downloads GrandId.Api API client for the GrandID (Svensk E-identitet) REST API. GrandId.AspNetCore ASP.NET authentication module for GrandID (Svensk E-identitet). Getting started GrandID (Svensk E-identitet) uses a predefined UI and does not support all functionalities of the BankID API, but is really easy to get started with and does not require any certificates. 1. Preparation Active Login is designed to make it very easy to get started with GrandID (Svensk E-identitet), but in the end you are resonsible for making sure that you are complient with the technical guidelines and/or legal agreements. Therefore, before you start using Active Login, please read the documentation relevant to your needs. This will also make sure you understand the concepts better. Read through the GrandID documentation . This ensures you have a basic understanding of the terminology as well as how the flow and security works. Get in touch with Svensk E-identitet to receive keys, you need these: ApiKey BankIdServiceKey (BankID) Note: ActiveLogin is built for the (at the time of writing this) latest version of GrandID where only one key is used. Please get in touch with Svensk E-identitet if you need to upgrade to this new version. Add them to your config, for example: { \"ActiveLogin:GrandId:ApiKey\": \"TODO-ADD-YOUR-VALUE\", \"ActiveLogin:GrandId:BankIdServiceKey\": \"TODO-ADD-YOUR-VALUE\" } 2. Install the NuGet package ActiveLogin.Authentication is distributed as packages on NuGet , install using the tool of your choice, for example dotnet cli . dotnet add package ActiveLogin.Authentication.GrandId.AspNetCore 3. Prepare your project It is expected that you have a basic understanding of how ASP.NET Core , ASP.NET Core MVC and ASP.NET Core Authentication works before getting started. Also, you are expected to have read up on the latest information from BankID . Active Login will help you to implement BankID according to guidelines, but in the end, it's your responsiblity to follow the BankID agreement. The authentication modules for GrandID are registered in your Program.cs . Depending on your setup, you will probably have to configure challenge and callbacks in AccountController.cs or similar. 4. Get started in development GrandID requires you to receive API-keys, but to get started and try it out the experience there is a simulated environment options available that uses an in-memory implementation. Great for development and testing. services .AddAuthentication() .AddGrandId(builder => { builder .UseSimulatedEnvironment() .AddBankIdSameDevice(options => { }) .AddBankIdOtherDevice(options => { }); }); Note: Regarding ASP.NET Routes. Also make sure that you map the controller route in ASP.NET Endpoint routing, like this: app.MapDefaultControllerRoute(); 5. Use test or production environments To authenticate using a real BankID you need to use the API-keys: services .AddAuthentication() .AddGrandId(builder => { builder .UseProductionEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); config.BankIdServiceKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:BankIdServiceKey\"); }) .AddBankIdSameDevice() .AddBankIdOtherDevice(); }); Samples Simulated environment For trying out quickly (without the need of keys) you can use an in-memory implementation of the API by using .UseSimulatedEnvironment() . This could also be good when writing tests. Simulated environment with no config services .AddAuthentication() .AddGrandId(builder => { builder .UseSimulatedEnvironment() .AddBankIdSameDevice(options => { }) .AddBankIdOtherDevice(options => { }); }); Simulated environment with custom person info The faked name and personal identity number can also be customized like this. services .AddAuthentication() .AddGrandId(builder => { builder .UseSimulatedEnvironment(\"Alice\", \"Smith\", \"199908072391\") .AddBankIdSameDevice(options => { }) .AddBankIdOtherDevice(options => { }); }); Production environment This will use the real REST API for GrandID, connecting to either the Test or Production environment. It requires you to have the API keys described under Preparation above. services.AddAuthentication() .AddGrandId(builder => { builder .UseProductionEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); }) ... }); Test environment These samples uses the production environment, to use the test environment, simply swap .UseProductionEnvironment() with .UseTestEnvironment() . services.AddAuthentication() .AddGrandId(builder => { builder .UseTestEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); ... }) ... }); Using schemes for same device and other device Same device : Launches the BankID app on the same device, no need to enter any personal identity number. Other device : You enter your personal identity number and can manually launch the app on your smartphone. services .AddAuthentication() .AddGrandId(builder => { builder .UseProductionEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); config.BankIdServiceKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:BankIdServiceKey\"); }) .AddBankIdSameDevice() .AddBankIdOtherDevice(); }); Using schemas for choose device This option will display a UI at GrandID where the user can choose between same or other device. services .AddAuthentication() .AddGrandId(builder => { builder .UseProductionEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); config.BankIdServiceKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:BankIdServiceKey\"); }) .AddBankIdChooseDevice(); }); Customizing schemas By default, Add*Device will use predefined schemas and display names, but they can be changed. services .AddAuthentication() .AddGrandId(builder => { builder .UseProductionEnvironment(config => { config.ApiKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:ApiKey\"); config.BankIdServiceKey = configuration.GetValue<string>(\"ActiveLogin:GrandId:BankIdServiceKey\"); }) .AddBankIdSameDevice(\"custom-auth-scheme\", \"Custom display name\", options => { ... }) .AddBankIdOtherDevice(GrandIdDefaults.BankIdOtherDeviceAuthenticationScheme, \"Custom display name\", options => { ... }); }); Customizing GrandID GrandId options allows you to set and override some options such as these. .AddBankIdOtherDevice(options => { // Issue birthdate claim based on data extracted from the personal identity number options.IssueBirthdateClaim = true; // Issue gender claim based on data extracted from the personal identity number options.IssueGenderClaim = true; }); If you want to apply some options for all BankID schemes, you can do so by using .ConfigureBankId(...) . .ConfigureBankId(options => { options.IssueBirthdateClaim = true; options.IssueGenderClaim = true; }); Api only We have seperated the API-wrapper into a separate package so that you can use it in other scenarios we have not covered. They look like this and are both well documented using XML-comments. The constructor for the ApiClient takes an HttpClient and you need to configure that HttpClient with a BaseAddress , Tls12 , client certificates etc. depending on your needs. public class GrandIdApiClient : IGrandIdApiClient { public async Task<BankIdFederatedLoginResponse> BankIdFederatedLoginAsync(BankIdFederatedLoginRequest request) { ... } public async Task<BankIdGetSessionResponse> BankIdGetSessionAsync(BankIdGetSessionRequest request) { ... } public async Task<LogoutResponse> LogoutAsync(LogoutRequest request) { ... } }"
  },
  "articles/LICENSE.html": {
    "href": "articles/LICENSE.html",
    "title": "| Active Login",
    "keywords": "MIT License Copyright (c) 2018-2022 Active Solution Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "articles/monitor.html": {
    "href": "articles/monitor.html",
    "title": "Active Login Monitor | Active Login",
    "keywords": "Active Login Monitor When using the BankIdApplicationInsightsEventListener ( bankId.AddApplicationInsightsEventListener() ) structured events from the Active Login flow will be published to Application Insights (Azure Monitor). Below are samples on how to query these using KQL . Dashboard In our provisioning samples we include a way to deploy an Azure Dashboard displaying some of the most important metrics and queries from below. See ActiveLogin-Monitor.json . <!--(/samples/AzureProvisioningSample/ActiveLogin-Monitor.json)--> KQL Samples All info customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, client_City, client_CountryOrRegion, Event_Name = name, Event_TypeId = tostring(customDimensions.AL_Event_TypeId), Event_Severity = tostring(customDimensions.AL_Event_Severity), Error_ErrorReason = tostring(customDimensions.AL_Error_ErrorReason), BankId_BankId_Options_LaunchType = tostring(customDimensions.AL_BankId_Options_LaunchType), BankId_Options_UseQrCode = tostring(customDimensions.AL_BankId_Options_UseQrCode), BankId_ErrorCode = tostring(customDimensions.AL_BankId_ErrorCode), BankId_ErrorDetails = tostring(customDimensions.AL_BankId_ErrorDetails), BankId_OrderRef = tostring(customDimensions.AL_BankId_OrderRef), BankId_CollectHintCode = tostring(customDimensions.AL_BankId_CollectHintCode), BankId_User_CertNotBefore = tostring(customDimensions.AL_BankId_User_CertNotBefore), BankId_User_CertNotAfter = tostring(customDimensions.AL_BankId_User_CertNotAfter), BankId_User_DeviceIpAddress = tostring(customDimensions.AL_BankId_User_DeviceIpAddress), User_Device_Browser = tostring(customDimensions.AL_User_Device_Browser), User_Device_Os = tostring(customDimensions.AL_User_Device_Os), User_Device_Type = tostring(customDimensions.AL_User_Device_Type), User_Device_OsVersion = tostring(customDimensions.AL_User_Device_OsVersion), User_Name = tostring(customDimensions.AL_User_Name), User_GivenName = tostring(customDimensions.AL_User_GivenName), User_Surname = tostring(customDimensions.AL_User_Surname), User_SwedishPersonalIdentityNumber = tostring(customDimensions.AL_User_SwedishPersonalIdentityNumber), User_DateOfBirthHint = tostring(customDimensions.AL_User_DateOfBirthHint), User_AgeHint = tostring(customDimensions.AL_User_AgeHint), User_GenderHint = tostring(customDimensions.AL_User_GenderHint), ProductName = tostring(customDimensions.AL_ProductName), ProductVersion = tostring(customDimensions.AL_ProductVersion), BankId_ApiEnvironment = tostring(customDimensions.AL_BankId_ApiEnvironment), BankId_ApiVersion = tostring(customDimensions.AL_BankId_ApiVersion) | order by timestamp desc | render table Metadata Active Login Version customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project ActiveLogin_ProductVersion = tostring(customDimensions.AL_ProductVersion) | summarize count() by ActiveLogin_ProductVersion | render piechart Launch Type (SameDevice / OtherDevice) customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project LaunchType = tostring(customDimensions.AL_BankId_Options_LaunchType) | summarize count() by LaunchType | render piechart Device Type (SameDevice / OtherDevice) customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project DeviceType = tostring(customDimensions.AL_User_Device_Type) | summarize count() by DeviceType | render piechart Launch Type and Device Type customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project DeviceType = tostring(customDimensions.AL_User_Device_Type), LaunchType = tostring(customDimensions.AL_BankId_Options_LaunchType) | project DeviceTypeAndLaunchType = strcat(DeviceType, ' - ', LaunchType) | summarize count() by DeviceTypeAndLaunchType | render piechart Device Type and Device OS customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project DeviceType = tostring(customDimensions.AL_User_Device_Type), DeviceOs = tostring(customDimensions.AL_User_Device_Os) | project DeviceAndDeviceOs = strcat(DeviceType, ' - ', DeviceOs) | summarize count() by DeviceAndDeviceOs | render piechart Device OS and Device Browser customEvents | where name == \"ActiveLogin_BankId_AspNetChallengeSuccess\" | project DeviceOs = tostring(customDimensions.AL_User_Device_Os), DeviceBrowser = tostring(customDimensions.AL_User_Device_Browser) | project DeviceOsAndDeviceBrowser = strcat(DeviceOs, ' - ', DeviceBrowser) | summarize count() by DeviceOsAndDeviceBrowser | render piechart Average age customEvents | where name == \"ActiveLogin_BankId_CollectCompleted\" | project UserAgeHint = toint(customMeasurements.AL_User_AgeHint) | summarize AverageUserAge = avg(UserAgeHint) Success Succesful logins chart customEvents | where name == \"ActiveLogin_BankId_AspNetAuthenticateSuccess\" | project timestamp | summarize Logins = count() by bin(timestamp, 1d) | render columnchart Succesful logins by week customEvents | where name == \"ActiveLogin_BankId_AspNetAuthenticateSuccess\" | project timestamp, Year = datetime_part(\"Year\", timestamp), Week = week_of_year(timestamp) | extend YearAndWeek = strcat(Year, ' ' , Week) | order by Year, Week | summarize Logins = count() by YearAndWeek | render table Succesful logins by month let MonthNames = dynamic([\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]); customEvents | where name == \"ActiveLogin_BankId_AspNetAuthenticateSuccess\" | project timestamp, Year = datetime_part(\"Year\", timestamp), Month = datetime_part(\"Month\", timestamp) | extend YearAndMonth = strcat(Year, ' ' , tostring(MonthNames[Month])) | order by Year, Month | summarize Logins = count() by YearAndMonth | render table Success details customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, Event_ShortName = substring(name, 19), Event_TypeId = tostring(customDimensions.AL_Event_TypeId), Event_Severity = tostring(customDimensions.AL_Event_Severity), BankId_Options_LaunchType = tostring(customDimensions.AL_BankId_Options_LaunchType), BankId_Options_UseQrCode = tostring(customDimensions.AL_BankId_Options_UseQrCode), BankId_OrderRef = tostring(customDimensions.AL_BankId_OrderRef), BankId_CollectHintCode = tostring(customDimensions.AL_BankId_CollectHintCode), BankId_User_CertNotBefore = tostring(customDimensions.AL_BankId_User_CertNotBefore), BankId_User_CertNotAfter = tostring(customDimensions.AL_BankId_User_CertNotAfter), BankId_User_DeviceIpAddress = tostring(customDimensions.AL_BankId_User_DeviceIpAddress), User_Device_Browser = tostring(customDimensions.AL_User_Device_Browser), User_Device_Os = tostring(customDimensions.AL_User_Device_Os), User_Device_Type = tostring(customDimensions.AL_User_Device_Type), User_Device_OsVersion = tostring(customDimensions.AL_User_Device_OsVersion), User_Name = tostring(customDimensions.AL_User_Name), User_GivenName = tostring(customDimensions.AL_User_GivenName), User_Surname = tostring(customDimensions.AL_User_Surname), User_SwedishPersonalIdentityNumber = tostring(customDimensions.AL_User_SwedishPersonalIdentityNumber), User_DateOfBirthHint = tostring(customDimensions.AL_User_DateOfBirthHint), User_AgeHint = tostring(customDimensions.AL_User_AgeHint), User_GenderHint = tostring(customDimensions.AL_User_GenderHint), ProductName = tostring(customDimensions.AL_ProductName), ProductVersion = tostring(customDimensions.AL_ProductVersion), BankId_ApiEnvironment = tostring(customDimensions.AL_BankId_ApiEnvironment), BankId_ApiVersion = tostring(customDimensions.AL_BankId_ApiVersion) | where Event_Severity == \"Success\" | order by timestamp desc | render table Errors Error chart - By event and error code customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, Event_ShortName = substring(name, 19), BankId_ErrorCode = tostring(customDimensions.AL_BankId_ErrorCode), EventSeverity = tostring(customDimensions.AL_Event_Severity) | where EventSeverity == \"Failure\" or EventSeverity == \"Error\" | extend EventAndErrorCode = strcat(Event_ShortName, ' - ', BankId_ErrorCode) | summarize count() by bin(timestamp, 1d), EventAndErrorCode | render columnchart Error chart - By error code customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, ErrorCode = tostring(customDimensions.AL_BankId_ErrorCode), EventSeverity = tostring(customDimensions.AL_Event_Severity) | where EventSeverity == \"Failure\" or EventSeverity == \"Error\" | summarize count() by bin(timestamp, 1d), ErrorCode | render columnchart Error details customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, Event_ShortName = substring(name, 19), Event_TypeId = tostring(customDimensions.AL_Event_TypeId), Event_Severity = tostring(customDimensions.AL_Event_Severity), Error_ErrorReason = tostring(customDimensions.AL_Error_ErrorReason), BankId_Options_LaunchType = tostring(customDimensions.AL_BankId_Options_LaunchType), BankId_Options_UseQrCode = tostring(customDimensions.AL_BankId_Options_UseQrCode), BankId_ErrorCode = tostring(customDimensions.AL_BankId_ErrorCode), BankId_ErrorDetails = tostring(customDimensions.AL_BankId_ErrorDetails), BankId_OrderRef = tostring(customDimensions.AL_BankId_OrderRef), BankId_CollectHintCode = tostring(customDimensions.AL_BankId_CollectHintCode), BankId_User_CertNotBefore = tostring(customDimensions.AL_BankId_User_CertNotBefore), BankId_User_CertNotAfter = tostring(customDimensions.AL_BankId_User_CertNotAfter), BankId_User_DeviceIpAddress = tostring(customDimensions.AL_BankId_User_DeviceIpAddress), User_Device_Browser = tostring(customDimensions.AL_User_Device_Browser), User_Device_Os = tostring(customDimensions.AL_User_Device_Os), User_Device_Type = tostring(customDimensions.AL_User_Device_Type), User_Device_OsVersion = tostring(customDimensions.AL_User_Device_OsVersion), User_Name = tostring(customDimensions.AL_User_Name), User_GivenName = tostring(customDimensions.AL_User_GivenName), User_Surname = tostring(customDimensions.AL_User_Surname), User_SwedishPersonalIdentityNumber = tostring(customDimensions.AL_User_SwedishPersonalIdentityNumber), User_DateOfBirthHint = tostring(customDimensions.AL_User_DateOfBirthHint), User_AgeHint = tostring(customDimensions.AL_User_AgeHint), User_GenderHint = tostring(customDimensions.AL_User_GenderHint), ProductName = tostring(customDimensions.AL_ProductName), ProductVersion = tostring(customDimensions.AL_ProductVersion), BankId_ApiEnvironment = tostring(customDimensions.AL_BankId_ApiEnvironment), BankId_ApiVersion = tostring(customDimensions.AL_BankId_ApiVersion) | where Event_Severity == \"Failure\" or Event_Severity == \"Error\" | order by timestamp desc | render table Errors by error code customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, ErrorCode = tostring(customDimensions.AL_BankId_ErrorCode), EventSeverity = tostring(customDimensions.AL_Event_Severity) | where EventSeverity == \"Failure\" or EventSeverity == \"Error\" | summarize count() by ErrorCode | render piechart Errors by type customEvents | where name startswith \"ActiveLogin_BankId_\" | project Event_ShortName = substring(name, 19), Event_Severity = tostring(customDimensions.AL_Event_Severity) | where Event_Severity == \"Failure\" or Event_Severity == \"Error\" | summarize count() by Event_ShortName | render piechart Events Events by severity customEvents | where name startswith \"ActiveLogin_BankId_\" | project timestamp, Severity = tostring(customDimensions.AL_Event_Severity) | summarize count() by bin(timestamp, 1d), Severity | render columnchart"
  },
  "articles/README.html": {
    "href": "articles/README.html",
    "title": "ActiveLogin.Authentication | Active Login",
    "keywords": "ActiveLogin.Authentication ActiveLogin.Authentication enables an application to support Swedish BankID (svenskt BankID) authentication in .NET. Built on NET Standard and packaged as NuGet-packages they are easy to install and use on multiple platforms. Free to use, commercial support and training is available if you need assistance or a quick start. Features 🆔 Supports BankID Auth (API, Flow and UI) 📝 Supports BankID Sign (API, Flow and UI) 🐧 Cross platform: Targets .NET Standard 2.0 and .NET 6 5️⃣ Built on V5.1 (the latest) BankID JSON API 🔳 Supports BankID animated QR code (Safe start) ☁️ Designed with Microsoft Azure in mind (KeyVault, Monitor, Application Insights, AD B2C etc.) 🌎 Multi language support with English and Swedish out of the box 🔧 Customizable ánd extensible 💠 Can be used as a Custom Identity Provider for Azure AD B2C Screenshots Screenshots on how the default UI for Native BankID looks on different devices. Screenshot on monitoring dashboard. Table of contents Note: This Readme reflects the state of our main branch and the code documented here might not be released as packages on NuGet.org yet. For early access, see our CI builds . Features Screenshots Projects & Packages overview Usage & Docs Samples Tests FAQ What version of .NET is supported? How do I build the solution locally? How do I run the samples locally? How do I use Active Login to get support for BankID in Azure AD (Active Directory) B2C? Where did the packages for GrandId / Svensk E-identitet go? Active Login Security Contribute Stay updated and join the discussion License Acknowledgements Sponsors Support & Training Projects & Packages overview CI-builds from main of all packages are available in our GitHub Packages feed . Project Description NuGet Downloads BankId.Api API client for the Swedish BankID REST API. BankId.Core Core functionality for the BankID flow. BankId.AspNetCore ASP.NET authentication module for Swedish BankID. BankId.AzureKeyVault Azure KeyVault integrations for the AspNetCore package. BankId.AzureMonitor Azure Monitor (Application Insights) integrations for the AspNetCore package. BankId.QRCoder QR code generation using QRCoder the AspNetCore package. BankId.UAParser Device and browser detection using UAParser. Usage & Docs Full documentation with step by step instructions, samples, customization and details on how to configure the options is available here: Documentation for ActiveLogin.Authentication.BankID Active Login is designed to make it easy to get started with BankID in .NET. The most basic setup looks like this: // Common services .AddBankId(bankId => { bankId.UseSimulatedEnvironment(); }); // Auth services .AddAuthentication() .AddBankIdAuth(bankId => { bankId.AddSameDevice(); }); // Sign services .AddBankIdSign(bankId => { bankId.AddSameDevice(); }); Samples For more use cases, samples and inspiration; feel free to browse our unit tests and samples . Note: These are samples on how to use Active Login in different situations and might not represent optimal way of setting up ASP.NET MVC, IdentityServer or other components. Please see them as inspiration. Project Description IdentityServer.ClientSample ASP.NET MVC site using the IdentityServer.ServerSample as auth provider. IdentityServer.ServerSample IdentityServer with Active Login as auth provider for BankID. Standalone.MvcSample ASP.NET MVC with Active Login as auth provider for BankID. Also demo of Sign. AzureProvisioningSample ARM template with Azure KeyVault, Azure App Service, Azure Monitor / Application Insights etc. Please note that IdentityServer.ClientSample uses IdentityServer.ServerSample as the IdentityProvider, so the IdentityServer.ClientSample is a good place to start. A live demo is available at https://demo.activelogin.net/ . Tests BankId.Api.Test BankId.Core.Test BankId.AspNetCore.Test BankId.UAParser.Test BankId.AzureKeyVault.Test FAQ Here is a summary of common, general technical questions. The docs for ActiveLogin.Authentication.BankId contains an FAQ specific to BankID. For commercial / business related questions, see the FAQ at ActiveLogin.net . What version of .NET is supported? The API-wrapper (ActiveLogin.Authentication.BankId.Api) target .NET Standard 2.0, so it can be used from .NET >= 5.0, .NET Core >= 2.0 and .NET Framework >= 4.6.1, see full reference here . The package that target .NET Standard is strong named as it can be used from .NET Framework where strong naming can be relevant. The authentication module ( .AspNetCore), depend on ASP.NET 6 and therefore requires .NET 6. The core module ( .Core), and related packages, depend on and requires .NET 6. Our samples target .NET 6 and follow the conventions used there. How do I build the solution locally? Active Login is built using .NET, make sure you have the relevant version of the SDK and runtime installed. Run the following command in the root to build all projects: dotnet build Run the following command in the root to run all tests: dotnet test Devcontainer and GitHub Codespaces We also support devcontainer.json so that you can build the solution in a container and use GitHub Codespaces . How do I run the samples locally? The samples are configured to run for the test environment (no BankID certificate required as it's bundled with the library) by default. The Standalone.MvcSample is using the the most basic sample and is a good start. To run the sample: Navigate to /Samples/Standalone.MvcSample/ and run: dotnet run How do I use Active Login to get support for BankID in Azure AD (Active Directory) B2C? Azure AD B2C supports using custom identity providers that supports Open ID Connect . If you deploy Active Login as part of IdentityServer (see our samples) you can configure your Azure AD B2C to federate to that instance and by doing so get BankID support. Where did the packages for GrandId / Svensk E-identitet go? The packages in ActiveLogin for Svensk E-identitet / GrandID are not beeing worked on anymore, and are therefore not supported as part of this open source project. The documentation available is provided as is and reflects the state for the 4.0.0 release of the GrandId packages. Active Login Active Login is an Open Source project built on .NET that makes it easy to integrate with leading Swedish authentication services like BankID . Security In our Security Policy you can read about how to report a vulnerability, how to subscribe to security alerts and what packages we currently support. Contribute We are very open to community contributions to Active Login. Please see our contribution guidelines before getting started. Contributors Thank you to all who have and are contributing to this project! Stay updated and join the discussion The three primary ways to interact and stay updated with Active Login are: Watch our GitHub repo Interact on GitHub Discussions Follow us on Twitter License Active Login is licensed under the very permissive MIT license for you to be able to use it in commercial or non-commercial applications without many restrictions. The BankID certificates from the BankID documentation are released as part of Active Login with the permission from BankID (Finansiell ID-Teknik BID AB). All trademarks are the property of their respective owners. Acknowledgements Active Login is built on or uses the following great open source products: .NET ASP.NET XUnit QRCoder UAParser AngleSharp Moq Bootstrap Loading.io For samples, these great products are used: Duende IdentityServer Sponsors Active Solution is the main sponsor of Active Login. Active Solution is located in Sweden and provides IT consulting with focus on web, Azure and AI. Bright cloud solutions - System development that shines. Together, we create systems that will rocket your business. And yes, we are hiring 👩‍💻 :) https://www.activesolution.se/ Support & Training If you need help with implementing Active Login, there are commercial support & training options available. We can help you out with: Education and training on: Active Login IdentityServer Azure AD B2C Authentication on the .NET platform in general Hands on implementing BankID using Active Login Implement BankID as a custom Identity Provider for Azure AD B2C Continuous support for Active Login See ActiveLogin.net for more details on how to get in touch with us 📞."
  },
  "articles/SECURITY.html": {
    "href": "articles/SECURITY.html",
    "title": "Security Policy | Active Login",
    "keywords": "Security Policy Supported Versions Active Login is an open source project under the MIT-license and the software is provided \"as is\", without warranty of any kind. The work we do regarding feature updates, security patches and maintenence is focused on the latest stable of the BankID-libraries available on NuGet. GrandID is not supported anymore. If you need an SLA, support for older versions or patches to be applied to older versions we can help you on a case to case basis, see contact details under Commercial support . Reporting a Vulnerability Please report (suspected) security vulnerabilities to security@activesolution.se . You will receive a response from us as fast as possible and we will work with you to confirm the severeness of the vulnerability and get back with a plan on when a patch can be released. Note: Do not publish (suspected) security vulnerabilities publically. Subscribing to Security Alerts Any known vulnerability will be published as a Github Security Advisory under Security Advisories . By watching the repo you can make sure to be notified if anything is published there."
  },
  "index.html": {
    "href": "index.html",
    "title": "Active Login - Documentation | Active Login",
    "keywords": "@media (min-width: 768px) { .container.body-content { width: 750px; } } @media (min-width: 992px) { .container.body-content { width: 970px; } } @media (min-width: 1200px) { .container.body-content { width: 1170px; } } Active Login - Documentation ActiveLogin.Authentication enables an application to support Swedish BankID (svenskt BankID) authentication in .NET. Built on NET Standard and packaged as NuGet-packages they are easy to install and use on multiple platforms. See Articles for detailed documentation."
  }
}